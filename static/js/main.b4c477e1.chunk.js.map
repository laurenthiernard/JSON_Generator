{"version":3,"sources":["utils.js","components/Control.js","components/SimpleTabs.js","layout.js","App.js","serviceWorker.js","index.js"],"names":["getUniqID","pLength","random","window","btoa","Math","Date","getTime","substring","toLocaleLowerCase","Control","props","id","controlObj","ElementId","type","Type","reorderable","isFixed","className","icon","faArrowUp","onClick","moveUp","faArrowDown","moveDown","selectedControl","onClickHandler","pType","faAudioDescription","faFileAlt","faHandPointDown","faWeight","faToggleOn","faCheckSquare","faListUl","faCalendarAlt","faImage","faSpellCheck","faGenderless","faCircle","faBars","faTable","getIcon","includes","value","Title","disabled","delete","faTrashAlt","title","subcontrolsHTMLElements","cssRows","cssColumns","i","Rows","rowElement","Elements","j","colElement","undefined","newChildControl","key","slotContent","Object","entries","length","push","Columns","style","display","gridTemplateColumns","gridTemplateRows","controlElement","subcontrolsHTML","map","element","getSubcontrols","SimpleTabs","useState","activeTab","setActiveTab","tabButton","tabs","tab","index","useEffect","dispatchIndex","initLayout","isResizingSidebar","isNavBarCollapsed","sidebarWidth","sidebarHandle","document","querySelector","navigation","layout","pageWidth","innerWidth","navigationSections","querySelectorAll","collapseNavigation","mouseDownEvent","addEventListener","e","forEach","section","classList","add","expandNavigation","remove","removeEventListener","pWidth","min","max","parseInt","clientX","target","App","initialJson","Sections","SectionId","savedJson","JSON","parse","localStorage","getItem","json","setJson","currentSectionIndex","setCurrentSectionIndex","setSelectedControl","isValidId","setIsValidId","mode","setMode","currentKeyword","setCurrentKeyword","currentData","setCurrentData","setItem","stringify","controlsHandler","dataTransfer","setData","addToCurrentSection","pElement","pChildren","newElement","currentSection","getNewElement","console","log","Buttons","Button","Label","BackgroundColor","BackgroundColorSelected","initButtonsProperty","getNewSection","addToNewSection","newSection","pIsMatrix","pIsRepeatable","getElementFromElementId","pElementID","foundItem","item","hasOwnProperty","subitem","subsubitem","getElementsFromId","pID","ID","getCurrentSection","getParentElementFromId","onSelectControlHandler","pControl","onJsonChangeHandler","currentValue","getElementById","moveElement","pParentElement","pDirection","pIsSubControl","container","position","findIndex","splice","deleteKeyword","pKeyword","keywordIndex","Keywords","jsonToUpdate","setControlID","pEvent","IDvalue","setControlTitle","setControlHasUnderLine","HasUnderLine","checked","setControlIsVisible","IsVisible","setControlEntryTitle","EntryTitle","setControlDetails","Details","setControlCommentValue","CommentValue","setControlButtonLabel","btnIndex","setControlBackgroundColor","setControlBackgroundColorSelected","setControlValidationMessage","ValidationMessage","setControlMandatory","Mandatory","setControlAddHour","AddHour","setControlAddDay","AddDay","setControlAddMonth","AddMonth","setControlFormatDateTime","FormatDateTime","setControlIsLabelVisible","IsLabelVisible","setControlShowComment","ShowComment","setControlCollapsible","Collapsible","IsCollapsed","setControlIsCollapsed","setControlValue","Value","setControlIncludeTitle","IncludeTitle","setControlHideNA","HideNA","setControlData","Data","setMatrixSize","pSize","row","gridRowElement","isRowEmpty","col","activeRows","slice","gridrow","activeCols","boardEdit","faFolderPlus","sectionToDuplicate","duplicateSection","faClone","confirm","deleteJsonHandler","faExclamationTriangle","sectionTitle","sectionNavigation","onDragOver","preventDefault","onDrop","elementName","getData","targetID","parentID","isValidElement","alert","droppedPosition","lastIndexOf","parentElement","pDefaultValues","unshift","prependToFirstSection","readOnly","placeholder","reorderedSections","moveSectionLeft","faArrowLeft","sections","filter","removeSection","faTrash","moveSectionRight","faArrowRight","currentSectionToRender","pItem","control","moveUpHandler","moveDownHandler","subindex","subsubindex","elementsToFilter","elementsIndex","newElements","deleteElementFromId","getControl","getHTML","jsonPreview","src","theme","displayDataTypes","iconStyle","enableClipboard","errorDuplicate","faExclamationCircle","propertiesPanel","pSelectedControl","globalProperties","htmlFor","name","onChange","Boolean","IsButtonDisabled","setControlIsButtonDisabled","setControlColumns","setControlRows","keyWordsList","keyword","Api","option","setControlApi","IncludePhoneNumber","setControlIncludePhoneNumber","IncludeEmail","setControlIncludeEmail","IncludeBusinessNumber","setControlIncludeBusinessNumber","IncludeAbbreviation","setControlIncludeAbbreviation","IncludeCode","setControlIncludeCode","setControlKeywords","dataList","data","Size","setControlSize","GalleryExtrack","setControlGalleryExtrack","GalleryPhone","setControlGalleryPhone","FontSize","Number","setControlFontSize","Margin","setControlMargin","FontAttributes","setControlFontAttributes","DateValue","setControlDateValue","TimeValue","setControlTimeValue","DateTimeValue","setControlDateTimeValue","getPropertiesPanel","click","faUpload","createElement","setAttribute","encodeURIComponent","jsonFileName","body","appendChild","removeChild","saveJsonHandler","faFileCode","accept","file","files","reader","FileReader","onloadend","source","result","newData","newSource","replace","atob","IsEnableToImport","isInValidFile","err","readAsDataURL","loadJsonHandler","select","execCommand","faCopy","jsonOutput","navigator","clipboard","readText","then","text","Event","catch","pasteJsonHandler","faPaste","faCog","onDragStart","draggable","faStream","faLightbulb","pMode","pIndex","simpleTabsHandler","cols","rows","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.b4c477e1.chunk.js","sourcesContent":["export function getUniqID(pLength) {\n  let random = () => window.btoa(Math.random()*(new Date().getTime())*1).substring(4, 9)\n  return `${random()}-${random()}`.substring(0, pLength).toLocaleLowerCase()\n}","import React from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n  faWeight, faSpellCheck,\n  faCalendarAlt, faTrashAlt,\n  faAudioDescription, faToggleOn,\n  faSortNumericUp, faGenderless,\n  faImage, faImages, faListUl,\n  faList, faFileAlt, faClock,\n  faCheckSquare, faHandPointDown,\n  faSearch, faCircle, faAd,\n  faMailBulk, faPlus, faBars,\n  faUserCircle, faTable, faLayerGroup,\n  faEdit, faArrowUp, faArrowDown,\n} from \"@fortawesome/free-solid-svg-icons\"\n\nimport { getUniqID } from './../utils'\n\nexport default function Control(props) {\n  const id = props.controlObj.ElementId\n  const type = props.controlObj.Type\n\n  // const clickHandlerRef = props.onClickHandler\n\n  // console.log(`--->: Control -> type`, props.controlObj)\n  // console.log(`--->: Control -> props.selectedControl`, props.selectedControl)\n\n  function getSubcontrols() {\n    let subcontrolsHTMLElements = []\n\n    switch (type) {\n      case \"Matrix\":\n\n        let cssRows = ''\n        let cssColumns = ''\n\n        for (let i = 0; i < props.controlObj.Rows; i++) {\n          // let gridRowElement = {Type: \"GridRow\", ElementID: getUniqID(), Elements: []}\n          // props.controlObj.Elements[i] = gridRowElement\n\n          const rowElement = props.controlObj.Elements[i]\n          // console.log(`--->: getSubcontrols -> rowElement`, rowElement)\n          cssRows+='1fr '\n          cssColumns = ''\n\n          for (let j = 0; j < props.controlObj.Columns; j++) {\n            const colElement = (rowElement.Elements !== undefined) ? rowElement.Elements[j] : {}\n            // console.log(`--->: getSubcontrols -> new control: `, colElement)\n            const newChildControl =\n              <Control\n                controlObj={colElement}\n                selectedControl={props.selectedControl}\n                isFixed={true}\n                onClickHandler={() => props.onClickHandler(colElement)}\n                // onClickHandler={() => props.onSelectControlHandler(colElement)}\n                delete={(colElement) => props.delete(colElement)}\n                key={colElement.ElementId} />\n                // key={`matrix-sub${i}${j}`} />\n\n            const slotContent = (Object.entries(colElement).length === 0 || colElement === undefined) ? 'Add control' : newChildControl\n            // console.log(`--->: getSubcontrols -> slotContent`, slotContent)\n            cssColumns+='1fr '\n            subcontrolsHTMLElements.push(\n              <div\n                id={`${id}-matrix-row${i}-col${j}`}\n                key={`matrix${i}${j}`}\n                className=\"matrix-box\">{slotContent}\n              </div>)\n          }\n        }\n        return <div className=\"control-footer\" style={{display:'grid', gridTemplateColumns:cssColumns, gridTemplateRows:cssRows}}>{subcontrolsHTMLElements}</div>\n\n      case \"Repeatable\":\n      case \"SignatureSignOnOff\":\n      case \"Document.Summary2\":\n      case \"Document.Summary3\":\n      case \"Document.Summary4\":\n      case \"Emailregister\":\n      case \"Smsregister\":\n      case \"Document.Summary\":\n        for (let i = 0; i < props.controlObj.Elements.length; i++) {\n          const controlElement = props.controlObj.Elements[i]\n          const newChildControl =\n            <Control\n              controlObj={controlElement}\n              selectedControl={props.selectedControl}\n              isFixed={false}\n              onClickHandler={() => props.onClickHandler(controlElement)}\n              moveUp={(controlElement) => props.moveUp(controlElement, true)}\n              moveDown={(controlElement) => props.moveDown(controlElement, true)}\n              delete={(controlElement) => props.delete(controlElement)}\n              key={controlElement.ElementId} />\n\n            // console.log(`--->: getSubcontrols -> newChildControl`, newChildControl)\n            subcontrolsHTMLElements.push(newChildControl)\n          }\n          // console.log(`--->: getSubcontrols -> subcontrolsHTMLElements`, subcontrolsHTMLElements)\n        // Repeatable\n        const subcontrolsHTML = subcontrolsHTMLElements.map(element => element)\n\n        // const slotContent = (Object.entries(colElement).length === 0 || colElement === undefined) ? 'Add control' : newChildControl\n        return <>\n            <div id={`${id}-repeatable-area`} className=\"control-footer-addarea\">Add controls</div>\n            <div id={`${id}-repeatable`} className=\"control-footer\">{subcontrolsHTML}</div>\n          </>\n\n      // case \"Document.Summary\":\n      // case \"Document.Summary2\":\n      // case \"Document.Summary3\":\n      // case \"Document.Summary4\":\n      // case \"Emailregister\":\n      // case \"Smsregister\":\n      //   // console.log('---> ', props.controlObj.Elements)\n      //   const children = props.controlObj.Elements.map(item => (\n      //     <Control\n      //       controlObj={item}\n      //       selectedControl={props.selectedControl}\n      //       isFixed={false}\n      //       onClickHandler={() => props.onClickHandler(item)}\n      //       // onClickHandler={() => props.onSelectControlHandler(colElement)}\n      //       // delete={() => props.delete(item)}\n      //       key={item.ElementId} />))\n      //   return <div className=\"control-footer\">{children}</div>\n\n      default:\n        break\n    }\n  }\n\n  function getIcon(pType) {\n    switch (pType) {\n      case \"Label\":\n      case \"DocumentSummaryGrid\":\n        return faAudioDescription\n      case \"Document.TableOfContents\":\n      case \"Document.Summary\":\n      case \"Document.Summary2\":\n      case \"Document.Summary3\":\n      case \"Document.Summary4\":\n        return faFileAlt\n      case \"Button.Submit.Register\":\n      case \"Button.View.Document\":\n      case \"Button.Closeout\":\n      case \"Button.Send.SMS\":\n      case \"Button.Send.Email\":\n      case \"Button.Add.Email\":\n      case \"Button.Add.SMS\":\n      case \"Button.Add.Signature\":\n      case \"Button.Add.ReportDate\":\n        return faHandPointDown\n      case \"API\":\n      case \"Signature.Date\":\n      case \"Signature.DateTime\":\n        return faWeight\n      case \"SingleBoolean\":\n      case \"Boolean\":\n        return faToggleOn\n      case \"Checkbox\":\n        return faCheckSquare\n      case \"List.Multicontrol\":\n        return faListUl\n      case \"Date\":\n      case \"DateTime\":\n        return faCalendarAlt\n      case \"Image\":\n      case \"Image.Single\":\n        return faImage\n      case \"QRScanner\":\n      case \"QRScanner.List\":\n      case \"Signature\":\n        return faSpellCheck\n      case \"Trilean\":\n        return faGenderless\n      case \"Trilean.Label\":\n        return faCircle\n      case \"Repeatable\":\n        return faBars\n      default:\n        return faTable\n    }\n  }\n\n  const reorderable = (props.isFixed) ? '' : <div className=\"control-reordering\">\n    <FontAwesomeIcon icon={faArrowUp}\n      onClick={() => props.moveUp(props.controlObj, false)}\n    />\n    <FontAwesomeIcon icon={faArrowDown}\n      onClick={() => props.moveDown(props.controlObj, false)}\n    />\n  </div>\n\n  return (\n    <div\n      id={id}\n      className={`${props.isFixed ? 'subcontrol' : 'control'}${id === props.selectedControl.ElementId ? ' active-control' : ''}`}\n      >\n      <div className=\"control-header\" onClick={props.onClickHandler}>{props.controlObj.Type}</div>\n      <div className=\"control-content\">\n        {reorderable}\n        <div className=\"control-icon\" onClick={props.onClickHandler}>\n          <FontAwesomeIcon icon={getIcon(props.controlObj.Type)} />\n        </div>\n        <div className=\"control-title\" onClick={props.onClickHandler}>\n          <input type={props.controlObj.Type.includes('Button') > 0 ? \"button\" : props.controlObj.Type.includes('Checkbox') ? \"checkbox\" : \"text\"} value={props.controlObj.Title || props.controlObj.Type || ''} disabled></input>\n        </div>\n        <div className=\"control-delete\" onClick={() => props.delete(props.controlObj)}>\n          <FontAwesomeIcon\n            icon={faTrashAlt}\n            title=\"Remove\"\n          /></div>\n      </div>\n      {getSubcontrols()}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nexport default function SimpleTabs(props) {\n\n  const [activeTab, setActiveTab] = useState(0)\n\n  const tabButton = props.tabs.map((tab, index) => {\n    return <button className={`SimpleTabs-tab ${activeTab === index ? 'tab-active' : ''}`} key={index} onClick={() => setActiveTab(index)}>{props.tabs[index].title}</button>\n  })\n\n  useEffect(() => {\n    props.dispatchIndex(activeTab)\n  }, [activeTab])\n\n  return (\n    <div className=\"SimpleTabs-container\">\n      <div className=\"SimpleTabs-header\">\n      {tabButton}\n\n      </div>\n      {props.tabs[activeTab].tab}\n    </div>\n  )\n}\n","\nexport default function initLayout() {\n\n  let isResizingSidebar = false\n  let isNavBarCollapsed = false\n\n  let sidebarWidth = 300\n  let sidebarMinWidth = 150\n  let sidebarMaxWidth = 400\n\n  const breakpoint = 1100\n  const navbarCollapsedWidth = 80\n  const navbarExpandedWidth = 250\n\n  const sidebarHandle = document.querySelector('#sidebarHandle')\n  const navigation = document.querySelector('#navigation')\n  const layout = document.querySelector('#page')\n  let pageWidth = window.innerWidth\n  const navigationSections = document.querySelectorAll('.navigation-section')\n\n  if (pageWidth < breakpoint) collapseNavigation()\n\n  const mouseDownEvent = sidebarHandle.addEventListener('mousedown', (e) => isResizingSidebar = true)\n  document.addEventListener('mouseup', (e) => {\n    isResizingSidebar = false\n    sidebarHandle.removeEventListener('mousedown', mouseDownEvent)\n  })\n  document.addEventListener('mousemove', (e) => {\n    if (isResizingSidebar) {\n      sidebarWidth = Math.min(Math.max(parseInt(pageWidth - e.clientX), sidebarMinWidth), sidebarMaxWidth)\n      setSidebarWidth(sidebarWidth)\n    }\n  })\n\n  function setSidebarWidth(pWidth) {\n    if ((pWidth > sidebarMinWidth) && pWidth < sidebarMaxWidth) {\n      if (!isNavBarCollapsed) {\n        layout.style.gridTemplateColumns = `${navbarExpandedWidth}px auto ${pWidth}px`\n      }\n      else if (isNavBarCollapsed) {\n        layout.style.gridTemplateColumns = `${navbarCollapsedWidth}px auto ${pWidth}px`\n      }\n    }\n  }\n\n  window.addEventListener('resize', (e) => {\n    pageWidth = e.target.innerWidth\n    if (pageWidth < breakpoint && !isNavBarCollapsed) {\n      layout.style.gridTemplateColumns = `${navbarCollapsedWidth}px auto ${sidebarWidth}px`\n      isNavBarCollapsed = !isNavBarCollapsed\n      collapseNavigation()\n    }\n    else if (pageWidth > breakpoint && isNavBarCollapsed) {\n      layout.style.gridTemplateColumns = `${navbarExpandedWidth}px auto ${sidebarWidth}px`\n      isNavBarCollapsed = !isNavBarCollapsed\n      expandNavigation()\n    }\n  })\n\n  navigation.addEventListener('mouseenter', e => {\n    if (pageWidth < breakpoint && isNavBarCollapsed) {\n\n    expandNavigation()\n    }\n  })\n  navigation.addEventListener('mouseleave', e => {\n    if (pageWidth < breakpoint && !isNavBarCollapsed) {\n\n    collapseNavigation()\n    }\n  })\n\n  function collapseNavigation() {\n    navigationSections.forEach(section => section.classList.add(\"collapsed\"))\n    layout.style.gridTemplateColumns = `${navbarCollapsedWidth}px auto ${sidebarWidth}px`\n    isNavBarCollapsed = true\n  }\n  function expandNavigation() {\n    navigationSections.forEach(section => section.classList.remove(\"collapsed\"))\n    layout.style.gridTemplateColumns = `${navbarExpandedWidth}px auto ${sidebarWidth}px`\n    isNavBarCollapsed = false\n  }\n\n\n}\n","import React, { useState, useEffect } from 'react'\nimport './App.scss'\n\nimport Control from './components/Control'\nimport SimpleTabs from './components/SimpleTabs'\nimport { getUniqID } from './utils'\nimport initLayout from './layout.js'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faStream, faCog, faLightbulb, faTrash, faCopy, faFolderPlus, faClone, faPaste, faExclamationTriangle, faFileCode, faUpload, faArrowRight, faExclamationCircle, faArrowLeft, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport ReactJson from 'react-json-view'\n\nfunction App() {\n\n  const saveSessionEnabled = true\n  let initialJson = { Sections: [{ SectionId: \"mjy5n\", Title: \"Section 1\", Elements: [] }] }\n  // Check if saved JSON is valid and assign it\n  if (saveSessionEnabled) {\n    const savedJson = JSON.parse(localStorage.getItem('currentJson'))\n    if (savedJson !== null) initialJson = savedJson\n  }\n\n  const [json, setJson] = useState(initialJson)\n  const [currentSectionIndex, setCurrentSectionIndex] = useState(0)\n  const [selectedControl, setSelectedControl] = useState({})\n  const [isValidId, setIsValidId] = useState(true)\n  const [mode, setMode] = useState('board')\n  const [currentKeyword, setCurrentKeyword] = useState('')\n  const [currentData, setCurrentData] = useState('')\n\n  useEffect(() => {\n    initLayout()\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('currentJson', JSON.stringify(json))\n  }, [json])\n\n  /**-------------------------------------------------**\n  * @desc - DRAG AND DROP                         -----*\n  *----------------------------------------------------*/\n\n  let controlsHandler = e => {\n    // console.log('---> ', e.target, e.target.id)\n    e.dataTransfer.setData(\"text/plain\", e.target.id)\n  }\n  let onDragOverHandler = e => {\n    e.preventDefault()\n  }\n  let onDropHandler = e => {\n    e.preventDefault()\n    const elementName = e.dataTransfer.getData(\"text/plain\")\n    // console.log(`--->: App -> elementName`, elementName)\n\n    let targetID = e.target.id\n    let parentID = targetID.substring(0, 11)\n\n    const notAllowedElement = [\n      \"Matrix\",\n      \"Matrixbutton\",\n      \"Repeatable\",\n      \"Document.TableOfContents\",\n      \"Document.Summary\",\n      \"Document.Summary2\",\n      \"Document.Summary3\",\n      \"Document.Summary4\",\n      \"Emailregister\",\n      \"Smsregister\",\n      \"QRScanner.List\",\n      \"SignatureSignOnOff\"\n    ]\n\n    let isValidElement = true\n    if (notAllowedElement.findIndex(element => element === elementName) > -1) {\n      isValidElement = false\n    }\n\n\n    // ---------------------------------------------------------------------------- MATRIX : ADD Elements\n    if (targetID.includes('matrix')) {\n      if (!isValidElement) {\n        alert('Control not alowed inside a Matrix')\n        return\n      }\n      let newElement = getNewElement(elementName)\n      let droppedPosition = {\n        row: targetID.substring(targetID.lastIndexOf('-row') + 4, targetID.lastIndexOf('-col')),\n        col: targetID.substring(targetID.lastIndexOf('-col') + 4, targetID.length)\n      }\n      console.log(`---> Matrix element ${JSON.stringify(newElement)} dropped on parent: ${parentID} at position ${JSON.stringify(droppedPosition)}`)\n      // console.log(`----> Look for parent ${parentID}: `,getElementFromElementId(parentID))\n      // console.log(`----> Look for target ${targetID}: `,getElementFromElementId(targetID))\n\n      const parentElement = getElementFromElementId(parentID)\n      const elementRow = parentElement.Elements[droppedPosition.row]\n      elementRow.Elements[droppedPosition.col] = newElement\n      console.log('---> onDropHandler: parentElement is updated:  ', parentElement)\n\n      const jsonToUpdate = JSON.parse(JSON.stringify(json))\n      console.log(`--->: App -> jsonToUpdate`, jsonToUpdate)\n      // jsonToUpdate.timestamp = new Date()\n      setJson({ ...jsonToUpdate })\n\n      // const nextState = produce(json, draftState => {\n      //   draftState.user = {\n      //     name: targetID\n      //   }\n      // })\n      // console.log(`--->: App -> nextState`, nextState)\n      // setJson({ ...nextState })\n    }\n    else if (targetID.includes('repeatable')) {\n      if (!isValidElement) {\n        alert('Control not alowed inside a Repeatable')\n        return\n      }\n      let newElement = getNewElement(elementName)\n      console.log(`---> Repeatable element ${JSON.stringify(newElement)} dropped on parent: ${parentID}`)\n      const parentElement = getElementFromElementId(parentID)\n      parentElement.Elements.push(newElement)\n\n      const jsonToUpdate = JSON.parse(JSON.stringify(json))\n      setJson({ ...jsonToUpdate })\n    }\n    // ---------------------------------------------------------------------------- TEMPLATES : ADD Elements\n    else {\n      switch (elementName) {\n        case \"Document.TableOfContents\":\n          prependToFirstSection(elementName,\n            { Type: \"Document.TableOfContents\", Title: \"Table Of Contents\", ID: \"DocTableOfContents\", ElementId: getUniqID() },\n          )\n          break\n        case \"Document.Summary\":\n          addToNewSection(elementName, [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", ID: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", ID: \"Button.Submit.Register\", Title: \"Submit to Register\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", ID: \"Button.View.Document\", Title: \"View Document\", ElementId: getUniqID() }])\n          break\n        case \"Document.Summary2\":\n          addToNewSection(elementName, [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", ID: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", Title: \"Submit to Register\", ID: \"Button.Submit.Register\", ElementId: getUniqID() },\n            { Type: \"Button.Closeout\", Title: \"Close out\", ID: \"Button.Closeout\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", Title: \"View Document\", ID: \"Button.View.Document\", ElementId: getUniqID() },\n          ])\n          break\n        case \"Document.Summary3\":\n          addToNewSection(elementName, [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", ID: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", Title: \"Submit to Register\", ID: \"Button.Submit.Register\", ElementId: getUniqID() },\n            { Type: \"Button.Send.SMS\", Title: \"Send SMS\", ID: \"Button.Send.SMS\", ElementId: getUniqID() },\n            { Type: \"Button.Send.Email\", Title: \"Send Email\", ID: \"Button.Send.Email\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", Title: \"View Document\", ID: \"Button.View.Document\", ElementId: getUniqID() }\n          ])\n          break\n        case \"Document.Summary4\":\n          addToNewSection(elementName, [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", ID: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", Title: \"Submit to Register\", ID: \"Button.Submit.Register\", ElementId: getUniqID() },\n            { Type: \"Button.Closeout\", Title: \"Close out\", ID: \"Button.Closeout\", ElementId: getUniqID() },\n            { Type: \"Button.Send.SMS\", Title: \"Send SMS\", ID: \"Button.Send.SMS\", ElementId: getUniqID() },\n            { Type: \"Button.Send.Email\", Title: \"Send Email\", ID: \"Button.Send.Email\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", Title: \"View Document\", ID: \"Button.View.Document\", ElementId: getUniqID() },\n          ])\n          break\n        case \"Emailregister\":\n          addToNewSection(elementName, [\n            { Type: \"SearchableListEntryDialogEmail\", Title: \"Select from Project Directory\", ID: \"ContactListEmail\", ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"OR\", ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"Add manually below\", ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Name\", ID: \"ManualEmailName\", ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Email\", ID: \"ManualEmailEmail\", ElementId: getUniqID() },\n            { Type: \"Button.Add.Email\", Title: \"Add contact manually\", ElementId: getUniqID() },\n            { Type: \"SearchableEmailListView\", Title: \"Name\", ID: \"NameEmailList\", ElementId: getUniqID() }\n          ])\n          break\n        case \"Smsregister\":\n          addToNewSection(elementName, [\n            { Type: \"SearchableListEntryDialogSMS\", Title: \"Select from Project Directory\", ID: \"ContactListSMS\", ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"OR\", ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"Add manually below\", ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Name\", ID: \"ManualSMSName\", ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Phone No\", ID: \"ManualSMSPhone\", ElementId: getUniqID() },\n            { Type: \"Button.Add.SMS\", Title: \"Add contact manually\", ElementId: getUniqID() },\n            { Type: \"SearchableSMSListView\", Title: \"Name\", ID: \"NameSMSList\", ElementId: getUniqID() }\n          ])\n          break\n        case \"QRScanner.List\":\n          addToNewSection(elementName, [\n            // { Type: \"QRScanner.List\", Title: \"QR scanner list\", ID: \"QReSignOnOffScanner\", ElementId: getUniqID() }\n            {Type:\"QRScanner.List\", Title:\"QR scanner list\", EntryTitle:\"Please click to scan QR code\", ID:\"QReSignOnOffScanner\", ElementId: getUniqID()}\n          ])\n          break\n        case \"SignatureSignOnOff\":\n          addToCurrentSection(elementName, [\n            { Type: \"Text\", Title: \"Name\", ID: \"SignatureSignOnOffName\", ElementId: getUniqID() },\n            { Type: \"Signature\", Title: \"Please sign above the line\", ID: \"SignatureSignOnOffSignature\", ElementId: getUniqID() },\n            { Type: \"Button.Add.Signature\", Title: \"Add Signature\", ElementId: getUniqID() },\n            { Type: \"Register.Signatures\", Title: \"Signatures\", ID: \"SignatureSignOnOff\", ElementId: getUniqID() }\n          ])\n          break\n\n        default:\n          addToCurrentSection(elementName)\n          break\n      }\n    }\n\n    // TableOfContent - must be first\n    // if (elementName === \"TableOfContent\") addToNewSection(elementName)\n    // else addToCurrentSection(elementName)\n\n    // All SingleUse at the end, except signatureOnOff\n    // Document Summary should be the very last\n\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Manage sections                       -----*\n  *----------------------------------------------------*/\n\n  function addToCurrentSection(pElement, pChildren) {\n    // console.log('addToCurrentSection: ', pElement)\n\n    // TODO: NEED AN INSERT AT FUNCTION -----------------------------------------------------------------------//\n\n    let newElement\n    if (pElement === \"Matrix\") newElement = getNewElement(pElement, true)\n    else if (pElement === \"Repeatable\") newElement = getNewElement(pElement, false, true)\n    else if (pElement === \"SignatureSignOnOff\") newElement = getNewElement(pElement, false, false, pChildren)\n    else if (pElement === \"QRScanner.List\") newElement = getNewElement(pElement, false, false, pChildren)\n    else newElement = getNewElement(pElement)\n\n    console.log(`--->: addToCurrentSection -> newElement`, newElement)\n    if (pElement === \"Trilean.Label\") initButtonsProperty(newElement)\n\n    if (json.Sections[currentSectionIndex] !== undefined) {\n      let currentElements = json.Sections[currentSectionIndex].Elements\n      currentElements.push(newElement)\n      setJson({ Sections: [...json.Sections] })\n    }\n    else {\n      let currentSection\n      currentSection = getNewSection()\n      currentSection.Elements.push(newElement)\n      setJson({ Sections: [...json.Sections, currentSection] })\n      if (currentSectionIndex > 0) setCurrentSectionIndex(currentSectionIndex + 1)\n    }\n  }\n\n  function addNewSection() {\n    setJson({ Sections: [...json.Sections, getNewSection()] })\n    if (json.Sections.length > 0) setCurrentSectionIndex(json.Sections.length)\n  }\n\n  function addToNewSection(pElement, pChildren) {\n    let newSection = getNewSection()\n    let newElement = getNewElement(pElement, false, false, pChildren)\n    newSection.Elements.push(newElement)\n\n    setJson({ Sections: [...json.Sections, newSection] })\n    if (json.Sections.length > 0) setCurrentSectionIndex(json.Sections.length)\n  }\n\n  function prependToFirstSection(pElement, pDefaultValues) {\n\n    const newElement = pDefaultValues\n    let currentSection = json.Sections[currentSectionIndex]\n\n    if (currentSection !== undefined) {\n      const firstSection = json.Sections[0].Elements\n      firstSection.unshift(newElement)\n\n      setJson({ Sections: [...json.Sections] })\n      setCurrentSectionIndex(0)\n      setSelectedControl(newElement)\n    }\n    else {\n      currentSection = getNewSection()\n      currentSection.Elements.unshift(newElement)\n      json.Sections.push(currentSection)\n      setJson({ Sections: [...json.Sections] })\n      setSelectedControl(newElement)\n    }\n  }\n\n  // TODO - REMOVE IDs ON THE DUPLICATED SECTION CONTROLS -----------------------------------------------------//\n  function duplicateSection() {\n\n    if (json.Sections[currentSectionIndex] !== undefined) {\n      // Deep copy\n      let sectionToDuplicate = JSON.parse(JSON.stringify(json.Sections[currentSectionIndex]))\n\n      sectionToDuplicate.SectionId = getUniqID(5)\n      sectionToDuplicate.Title = `${json.Sections[currentSectionIndex].Title}-copy`\n      sectionToDuplicate.Elements.forEach(item => {\n        if (item.ElementId === undefined || item.ElementId.length > 0) item.ElementId = getUniqID(11)\n        if (item.ID !== undefined) item.ID = `${item.ID}-copy`\n        if (item.Elements) {\n          item.Elements.forEach(subitem => {\n            if (subitem.ElementId === undefined || subitem.ElementId.length > 0) subitem.ElementId = getUniqID(11)\n            if (subitem.ID !== undefined) subitem.ID = `${subitem.ID}-copy`\n            if (subitem.Elements) {\n              subitem.Elements.forEach(subsubitem => {\n                if (subsubitem.ID !== undefined) subsubitem.ID = `${subsubitem.ID}-copy`\n                if (subsubitem.ElementId !== undefined) subsubitem.ElementId = getUniqID(11)\n              })\n            }\n\n          })\n        }\n      })\n\n      setJson({ Sections: [...json.Sections.slice(0, currentSectionIndex + 1), sectionToDuplicate, ...json.Sections.slice(currentSectionIndex + 1)] })\n      setCurrentSectionIndex(currentSectionIndex + 1)\n    }\n  }\n\n  function removeSection() {\n    let sections = json.Sections.filter((section, index) => {\n      if (index !== currentSectionIndex) return section\n      return false\n    })\n\n    // console.log(json.Sections)\n    // console.log(json.Sections.length)\n    setCurrentSectionIndex(json.Sections.length - 2)\n    setJson({ Sections: [...sections] })\n  }\n\n  function moveSectionLeft() {\n    if (currentSectionIndex > 0) {\n      const reorderedSections = json.Sections\n      reorderedSections.splice(currentSectionIndex, 0, reorderedSections.splice(currentSectionIndex - 1, 1)[0])\n      setCurrentSectionIndex(currentSectionIndex - 1)\n      setJson({ Sections: [...reorderedSections] })\n    }\n  }\n\n  function moveSectionRight() {\n    if (currentSectionIndex + 1 < json.Sections.length) {\n      const reorderedSections = json.Sections\n      reorderedSections.splice(currentSectionIndex, 0, reorderedSections.splice(currentSectionIndex + 1, 1)[0])\n      setCurrentSectionIndex(currentSectionIndex + 1)\n      setJson({ Sections: [...reorderedSections] })\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Utilities                             -----*\n  *----------------------------------------------------*/\n\n  function getNewSection() {\n    return (\n      {\n        SectionId: getUniqID(5),\n        Title: `Section ${json.Sections.length + 1 || 1}`,\n        Elements: []\n      }\n    )\n  }\n\n  function getNewElement(pElement, pIsMatrix, pIsRepeatable, pChildren) {\n    // Repeatable children length are not known\n    const matrixElementsInit = [{\n      Type: \"GridRow\",\n      ElementId: \"odkwm-mjq3n\",\n      Elements: [\n        {}\n      ]\n    }]\n\n    if (pIsMatrix) {\n      return (\n        {\n          Type: pElement,\n          ElementId: getUniqID(11),\n          Columns: \"1\",\n          Rows: \"1\",\n          Elements: matrixElementsInit\n        }\n      )\n    }\n    if (pIsRepeatable) {\n      return (\n        {\n          Type: pElement,\n          ElementId: getUniqID(11),\n          Elements: []\n        }\n      )\n    }\n    else {\n      if (pChildren) {\n        return (\n          {\n            Type: pElement,\n            ElementId: getUniqID(11),\n            Elements: pChildren\n          }\n        )\n      }\n      else {\n        return (\n          {\n            Type: pElement,\n            ElementId: getUniqID(11),\n          }\n        )\n      }\n    }\n  }\n\n  function getElementFromElementId(pElementID) {\n    const currentSection = json.Sections[currentSectionIndex]\n    let foundItem = {}\n\n    currentSection.Elements.forEach(item => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach(subitem => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach(subsubitem => {\n              if (subsubitem.ElementId === pElementID) {\n                console.log('---> Trouvé subsubitem: ', subsubitem)\n                foundItem = subsubitem\n              }\n            })\n\n          }\n\n          if (subitem.ElementId === pElementID) {\n            console.log('---> Trouvé subitem: ', subitem)\n            foundItem = subitem\n          }\n\n        })\n      }\n\n      if (item.ElementId === pElementID) {\n        console.log('---> Trouvé item: ', item)\n        foundItem = item\n      }\n\n    })\n    return foundItem\n  }\n\n  function getElementsFromId(pID) {\n    let foundItem = []\n    json.Sections.forEach(section => {\n      section.Elements.forEach(item => {\n        if (item.hasOwnProperty('Elements')) {\n\n          item.Elements.forEach(subitem => {\n            if (subitem.hasOwnProperty('Elements')) {\n\n              subitem.Elements.forEach(subsubitem => {\n                if (subsubitem.ID === pID) {\n                  console.log('---> Trouvé subsubitem: ', subsubitem)\n                  foundItem.push(subsubitem)\n                }\n              })\n\n            }\n\n            if (subitem.ID === pID) {\n              console.log('---> Trouvé subitem: ', subitem)\n              foundItem.push(subitem)\n            }\n\n          })\n        }\n\n        if (item.ID === pID) {\n          console.log('---> Trouvé item: ', item)\n          foundItem.push(item)\n        }\n\n      })\n    })\n\n    return foundItem\n  }\n\n  function getCurrentSection() {\n    return json.Sections[currentSectionIndex]\n  }\n\n  function deleteElementFromId(pElementID) {\n    let jsonToUpdate = { ...json }\n    console.log('---> deleteElementFromId: ', pElementID)\n    setSelectedControl({ ElementId: 0 })\n    // console.log('---> selectedControl:', selectedControl)\n\n    const currentSection = jsonToUpdate.Sections[currentSectionIndex]\n\n    currentSection.Elements.forEach((item, index) => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach((subitem, subindex) => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach((subsubitem, subsubindex) => {\n              if (subsubitem.ElementId === pElementID) {\n                console.log('---> subsubitem: ', subsubitem, subitem.Elements)\n                // delete subitem[subsubindex]\n                let elementsToFilter = [...subitem.Elements]\n                const elementsIndex = elementsToFilter.findIndex(subsubitem => subsubitem.ElementId === pElementID)\n                elementsToFilter[elementsIndex] = {}\n                console.log(`--->: deleteElementFromId -> sub sub elementsToFilter`, elementsToFilter, elementsIndex)\n                subitem.Elements = elementsToFilter\n              }\n            })\n\n          }\n\n          if (subitem.ElementId === pElementID) {\n            console.log('---> Delete subitem: ', subitem, pElementID)\n            // delete item[subindex]\n            let elementsToFilter = [...item.Elements]\n            // console.log('---> ',subitem.ElementId, pElementID, subitem.ElementId === pElementID)\n\n            elementsToFilter = elementsToFilter.filter(subitem => subitem.ElementId !== pElementID)\n            console.log(`--->: deleteElementFromId -> sub elementsToFilter`, elementsToFilter)\n            item.Elements = elementsToFilter\n          }\n\n        })\n      }\n\n      if (item.ElementId === pElementID) {\n        console.log('---> Delete item: ', item)\n        // delete currentSection.Elements[index]\n        const newElements = currentSection.Elements.filter(item => item.ElementId !== pElementID)\n        // console.log(`--->: deleteElementFromId -> newElements: `, newElements)\n        currentSection.Elements = newElements\n      }\n\n    })\n\n    setJson(jsonToUpdate)\n\n  }\n\n  function getParentElementFromId(pElementID) {\n    // console.log(`--->: getParentElementFromId -> element: `, pElementID)\n    const currentSection = json.Sections[currentSectionIndex]\n    let foundItem = {}\n\n    currentSection.Elements.forEach(item => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach(subitem => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach(subsubitem => {\n              if (subsubitem.ElementId === pElementID) {\n                console.log('---> Trouvé subsubitem: ', subsubitem)\n                foundItem = subitem\n              }\n            })\n\n          }\n\n          if (subitem.ElementId === pElementID) {\n            console.log('---> Trouvé subitem: ', subitem)\n            foundItem = item\n          }\n\n        })\n      }\n\n      if (item.ElementId === pElementID) {\n        console.log('---> Trouvé item: ', item)\n        foundItem = currentSection.Elements\n      }\n\n    })\n    return foundItem\n  }\n\n  function validateId(pID) {\n    console.log(`--->: validateId -> getElementsFromId(pID)`, getElementsFromId(pID))\n    if (getElementsFromId(pID).length > 0) setIsValidId(false)\n    else setIsValidId(true)\n  }\n\n  function initButtonsProperty(pElement) {\n    const buttons = [{\n      Button: \"Yes\",\n      Label: \"\",\n      BackgroundColor: \"\",\n      BackgroundColorSelected: \"\"\n    },{\n      Button: \"No\",\n      Label: \"\",\n      BackgroundColor: \"\",\n      BackgroundColorSelected: \"\"\n    },{\n      Button: \"NA\",\n      Label: \"\",\n      BackgroundColor: \"\",\n      BackgroundColorSelected: \"\"\n    }]\n    pElement.Buttons = buttons\n  }\n\n  /**--------------------------------------------------**\n   * @desc - Return building Panel                 -----*\n   *----------------------------------------------------*/\n  function getHTML() {\n    if (json.Sections.length > 0) {\n      let currentSectionToRender = json.Sections[currentSectionIndex]\n      // console.log(`--->: getHTML -> currentSectionToRender`, currentSectionToRender)\n      if (currentSectionToRender.Elements.length > 0) return currentSectionToRender.Elements.map(item => {\n        // let html\n        // html = getControl(item)\n        // console.log(`--->: getHTML -> html: `, html)\n        // if (item.Elements.length > 0) console.log('item.Elements:', item.Elements);\n        // return html\n        return getControl(item)\n      })\n    }\n  }\n\n  function getControl(pItem) {\n    // console.log(`--->: getControl -> pItem`, pItem)\n    let id = pItem.ElementId\n    return <Control\n      controlObj={pItem}\n      selectedControl={selectedControl}\n      onClickHandler={(control) => {\n        // Select control from control's child\n        if (control.ElementId) onSelectControlHandler(control)\n        // Select control\n        else onSelectControlHandler(pItem)\n      }}\n      moveUp={(control, pIsSubControl) => moveUpHandler(control, pIsSubControl)}\n      moveDown={(control, pIsSubControl) => moveDownHandler(control, pIsSubControl)}\n      delete={(control) => deleteHandler(control)}\n      key={id} />\n  }\n\n  function onSelectControlHandler(pControl) {\n    console.log(`--->: onSelectControlHandler -> pControl`, pControl)\n\n    setSelectedControl(pControl)\n\n    // const targetedControl = getElementFromElementId(pControl)\n    // console.log('---> onSelectControlHandler targetedControl: ', targetedControl)\n\n    // let selectedElement\n    // json.Sections.forEach((section, sectionIndex) => {\n    //   // console.log('---> Parse another section with elements: ', section.Elements)\n    //   // Deep selecting issue here...?\n    //   section.Elements.forEach((node, ElementIndex) => {\n    //     if (node.ElementId === pControl.ElementId) {\n    //       selectedElement = node\n    //       // console.log(`${json.Sections.length} sections - Element found in section ${sectionIndex+1} ${node}`)\n    //     }\n    //   })\n    // })\n    // // console.log('selectedElement: ', selectedElement)\n    // setSelectedControl(selectedElement)\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Build the HTML from JSON              -----*\n  *----------------------------------------------------*/\n  function onJsonChangeHandler(e) {\n    let currentValue = JSON.parse(document.getElementById('json-output').value)\n    setJson(currentValue)\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Build the Panels tabs                 -----*\n  *----------------------------------------------------*/\n  let sectionNavigation = () => {\n    if (json.Sections.length > 0) {\n      return json.Sections.map((section, index) => {\n        let sectionTitle = (json.Sections[index] !== undefined) ? json.Sections[index].Title : ''\n        return <button\n          key={index}\n          onClick={() => setCurrentSectionIndex(index)}\n          className={`tab-section ${currentSectionIndex === index ? 'tab-active' : ''}`}\n        >{sectionTitle}</button>\n      })\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Manipulate the JSON                   -----*\n  *----------------------------------------------------*/\n\n  function moveUpHandler(pControl, pIsSubControl) {\n    const parentElement = getParentElementFromId(pControl.ElementId)\n    moveElement(pControl, parentElement, 'moveUp', pIsSubControl)\n\n  }\n  function moveDownHandler(pControl, pIsSubControl) {\n    const parentElement = getParentElementFromId(pControl.ElementId)\n    moveElement(pControl, parentElement, 'moveDown', pIsSubControl)\n  }\n\n  function moveElement(pControl, pParentElement, pDirection, pIsSubControl) {\n    const container = (!pIsSubControl) ? pParentElement : pParentElement.Elements\n\n    const position = container.findIndex(item => item.ElementId === pControl.ElementId)\n    switch (pDirection) {\n      case 'moveUp':\n        if (position > 0) {\n          // console.log('---> moveUp ', pControl, ' in: ', container, ' at position: ', position)\n          container.splice(position - 1, 0, container.splice(position, 1)[0])\n        }\n        break\n      case 'moveDown':\n        if (position < container.length - 1) {\n          // console.log('---> moveDown ', pControl, ' in: ', container, ' at position: ', position)\n          container.splice(position + 1, 0, container.splice(position, 1)[0])\n        }\n        break\n      default:\n        break\n    }\n    setJson({ ...json })\n  }\n\n  function deleteHandler(pControl) {\n\n    deleteElementFromId(pControl.ElementId)\n\n    // Parse the whole JSON to find the element, even if nested inside Matrix or Repeatable\n    // let elementsToUpdate = jsonToUpdate.Sections[currentSectionIndex].Elements\n    // console.log(`--->: deleteHandler -> elementsToUpdate before`, elementsToUpdate)\n    // elementsToUpdate.filter(control => {\n    //   console.log('------> ', control.ElementId !== pControl.ElementId)\n\n    //   if (control.ElementId !== pControl.ElementId) return control\n    //   console.log(`--->: deleteHandler -> control.ElementId vs pControl.ElementId`, control.ElementId, pControl.ElementId)\n    // })\n    // // elementsToUpdate.forEach(control => {\n    // //   if (control.ElementId !== pControl.ElementId) delete pControl\n    // // })\n    // console.log('---> delete ', pControl, 'elementsToUpdate after ', elementsToUpdate)\n\n    // setJson(jsonToUpdate)\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Build the properties Panel            -----*\n  *----------------------------------------------------*/\n\n  function getPropertiesPanel(pSelectedControl) {\n    const basicPropertiesIDs = [\"Document.Summary\",\n      \"Document.Summary2\",\n      \"Document.Summary3\",\n      \"Document.Summary4\"\n    ]\n    const buttonPropertiesIDs = [\"Button.Submit.Register\",\n      \"Button.View.Document\",\n      \"Button.Closeout\",\n      \"Button.Send.SMS\",\n      \"Button.Send.Email\",\n      \"Button.Add.Email\",\n      \"Button.Add.SMS\",\n      \"Button.Add.Signature\"\n    ]\n\n    const signaturePropertiesIDs = [\"Signature\",\n      \"Signature.Date\",\n      \"Signature.DateTime\"\n    ]\n\n    const booleanPropertiesIDs = [\"SingleBoolean\",\n      \"Boolean\"\n    ]\n\n    const imagePropertiesIDs = [\"Image\",\n      \"Image.Single\"\n    ]\n\n    const qrscannerPropertiesIDs = [\"QRScanner\",\n      \"QRScanner.List\"\n    ]\n\n    const globalProperties = <>\n      <div className=\"properties-form-row\">\n        <label htmlFor=\"identifier\">ID</label>\n        <input type=\"text\" name=\"identifier\" id=\"identifier\" value={selectedControl.ID || ''} onChange={(e) => setControlID(e)} />\n      </div>\n      <div className=\"properties-form-row\">\n        <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} />\n      </div>\n      <div className=\"properties-form-row\">\n        <label htmlFor=\"isvisible\">IsVisible</label>\n        <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n      </div>\n    </>\n\n    //TEMPLATE\n    // if (pSelectedControl.Type === \"Template\") {\n    //   return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n    //     {globalProperties}\n    //   </div>\n    // }\n\n    if (pSelectedControl.Type === \"Repeatable\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n      </div>\n    }\n\n    // console.log(`--->: getPropertiesPanel -> pSelectedControl`, pSelectedControl)\n    // PANEL FOR SECTION\n    if (pSelectedControl.Type === undefined) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"title\">Title</label>\n          <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} />\n        </div>\n      </div>\n    }\n\n    if (basicPropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n        {globalProperties}\n      </div>\n    }\n\n    if (booleanPropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n          <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <label htmlFor=\"collapsible\">Collapsible</label>\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"iscollapsed\">IsCollapsed</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n      </div>\n    }\n\n    if (buttonPropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n        {/* <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} /> */}\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"isvisible\">IsVisible</label>\n            <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"isbuttondisabled\">IsButtonDisabled</label>\n            <input type=\"checkbox\" name=\"isbuttondisabled\" id=\"isbuttondisabled\" checked={Boolean(selectedControl.IsButtonDisabled) || false} onChange={(e) => setControlIsButtonDisabled(e)} />\n          </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Matrix\") {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"identifier\">ID</label>\n            <input type=\"text\" name=\"identifier\" id=\"identifier\" value={selectedControl.ID || ''} onChange={(e) => setControlID(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"columns\">Columns</label>\n            <input type=\"number\" name=\"columns\" id=\"columns\" value={selectedControl.Columns || ''} onChange={(e) => setControlColumns(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"rows\">Rows</label>\n            <input type=\"number\" name=\"rows\" id=\"rows\" value={selectedControl.Rows || ''} onChange={(e) => setControlRows(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"isvisible\">IsVisible</label>\n            <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n          </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Document.TableOfContents\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"API\") {\n      let keyWordsList = []\n      if (selectedControl.Keywords !== undefined) {\n          keyWordsList = selectedControl.Keywords.map((keyword, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{keyword}</div>\n            <div onClick={() => deleteKeyword(keyword)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      else selectedControl.Keywords = []\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <select name=\"api\" id=\"api\" value={selectedControl.Api || 0} onChange={(e) => setControlApi(e)}>\n            <option value=\"Select an Api\">Select an Api</option>\n            <option value=\"ProjectContacts\">- Project Contacts</option>\n            <option value=\"GlobalContacts\">- Global Contacts</option>\n            <option value=\"ProjectCompany\">- Project Company</option>\n            <option value=\"ABS\">- ABS</option>\n            <option value=\"CBS\">- CBS</option>\n            <option value=\"DBS\">- DBS</option>\n            <option value=\"FBS\">- FBS</option>\n            <option value=\"TBS\">- TBS</option>\n            <option value=\"PBS\">- PBS</option>\n            <option value=\"PCBS\">- PCBS</option>\n            <option value=\"WBS\">- WBS</option>\n          </select>\n        <div className=\"properties-form-row\">\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includephonenumber\">Include Phone Number</label>\n            <input type=\"checkbox\" name=\"includephonenumber\" id=\"includephonenumber\" checked={Boolean(selectedControl.IncludePhoneNumber) || false} onChange={(e) => setControlIncludePhoneNumber(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includeemail\">Include Email</label>\n            <input type=\"checkbox\" name=\"includeemail\" id=\"includeemail\" checked={Boolean(selectedControl.IncludeEmail) || false} onChange={(e) => setControlIncludeEmail(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectCompany\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includetitle\">Include Title</label>\n            <input type=\"checkbox\" name=\"includetitle\" id=\"includetitle\" checked={Boolean(selectedControl.IncludeTitle) || false} onChange={(e) => setControlIncludeTitle(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectCompany\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includebusinessnumber\">Include Business Number</label>\n            <input type=\"checkbox\" name=\"includebusinessnumber\" id=\"includebusinessnumber\" checked={Boolean(selectedControl.IncludeBusinessNumber) || false} onChange={(e) => setControlIncludeBusinessNumber(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectCompany\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includeabbreviation\">Include Abbreviation</label>\n            <input type=\"checkbox\" name=\"includeabbreviation\" id=\"includeabbreviation\" checked={Boolean(selectedControl.IncludeAbbreviation) || false} onChange={(e) => setControlIncludeAbbreviation(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\" && selectedControl.Api !== \"ProjectCompany\"  && selectedControl.Api !== \"GlobalContacts\") ? '' : 'hidden'}`}>\n            <label htmlFor=\"includetitle\">Include Title</label>\n            <input type=\"checkbox\" name=\"includetitle\" id=\"includetitle\" checked={Boolean(selectedControl.IncludeTitle) || false} onChange={(e) => setControlIncludeTitle(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\" && selectedControl.Api !== \"ProjectCompany\"  && selectedControl.Api !== \"GlobalContacts\") ? '' : 'hidden'}`}>\n            <label htmlFor=\"includecode\">Include Code</label>\n            <input type=\"checkbox\" name=\"includecode\" id=\"includecode\" checked={Boolean(selectedControl.IncludeCode) || false} onChange={(e) => setControlIncludeCode(e)} />\n          </div>\n        </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n              <label htmlFor=\"keywords\">Keywords</label>\n          <div className=\"properties-form-row-container\">\n            <div>\n              <input type=\"text\" name=\"keywords\" id=\"keywords\" value={currentKeyword || ''} onChange={(e) => setCurrentKeyword(e.target.value)} />\n            </div>\n            <div>\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlKeywords()}>Add</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {keyWordsList}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Checkbox\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n            <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hasunderLine\">HasUnderLine</label>\n          <input type=\"checkbox\" name=\"hasunderLine\" id=\"hasunderLine\" checked={Boolean(selectedControl.HasUnderLine) || false} onChange={(e) => setControlHasUnderLine(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <label htmlFor=\"collapsible\">Collapsible</label>\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"iscollapsed\">IsCollapsed</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n          </div>\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"List.Multicontrol\") {\n      let dataList = []\n      if (selectedControl.Data !== undefined) {\n        dataList = selectedControl.Data.map((data, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{data}</div>\n            <div onClick={() => deleteKeyword(data)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      else selectedControl.Data = []\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n          <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"data\">Data</label>\n          <div className=\"properties-form-row-container\">\n            <div>\n              <input type=\"text\" name=\"data\" id=\"data\" value={currentData || ''} onChange={(e) => setCurrentData(e.target.value)} />\n            </div>\n            <div>\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlData()}>Add</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {dataList}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"List.Single\") {\n      let dataList = []\n      if (selectedControl.Data !== undefined) {\n        dataList = selectedControl.Data.map((data, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{data}</div>\n            <div onClick={() => deleteKeyword(data)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      else selectedControl.Data = []\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n          <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"data\">Data</label>\n          <div className=\"properties-form-row-container\">\n            <div>\n              <input type=\"text\" name=\"data\" id=\"data\" value={currentData || ''} onChange={(e) => setCurrentData(e.target.value)} />\n            </div>\n            <div>\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlData()}>Add</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {dataList}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"List.Multiple\") {\n      let dataList = []\n      if (selectedControl.Data !== undefined) {\n        dataList = selectedControl.Data.map((data, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{data}</div>\n            <div onClick={() => deleteKeyword(data)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      else selectedControl.Data = []\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n          <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"data\">Data</label>\n          <div className=\"properties-form-row-container\">\n            <div>\n              <input type=\"text\" name=\"data\" id=\"data\" value={currentData || ''} onChange={(e) => setCurrentData(e.target.value)} />\n            </div>\n            <div>\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlData()}>Add</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {dataList}\n        </div>\n      </div>\n    }\n\n    if (imagePropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"size\">Size</label>\n          <select name=\"size\" id=\"size\" value={selectedControl.Size || 0} onChange={(e) => setControlSize(e)}>\n            <option value=\"\"></option>\n            <option value=\"Thumbnail\">Thumbnail</option>\n            <option value=\"Small\">Small</option>\n            <option value=\"Medium\">Medium</option>\n            <option value=\"Large\">Large</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"galleryextrack\">GalleryExtrack</label>\n          <input type=\"checkbox\" name=\"galleryextrack\" id=\"galleryextrack\" checked={Boolean(selectedControl.GalleryExtrack) || false} onChange={(e) => setControlGalleryExtrack(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"galleryphone\">GalleryPhone</label>\n          <input type=\"checkbox\" name=\"galleryphone\" id=\"galleryphone\" checked={Boolean(selectedControl.GalleryPhone) || false} onChange={(e) => setControlGalleryPhone(e)} />\n        </div>\n      </div>\n    }\n\n    // QRScanner.List is a control itself...\n    if (qrscannerPropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Label\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"fontsize\">FontSize</label>\n          <input type=\"number\" name=\"fontsize\" id=\"fontsize\" value={selectedControl.FontSize || 0} onChange={(e) => setControlFontSize(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"margin\">Margin</label>\n          <input type=\"number\" name=\"margin\" id=\"margin\" value={selectedControl.Margin || 0} onChange={(e) => setControlMargin(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"fontattribute\">FontAttributes</label>\n          <select name=\"fontattribute\" id=\"fontattribute\" value={selectedControl.FontAttributes || 0} onChange={(e) => setControlFontAttributes(e)}>\n            <option value=\"\"></option>\n            <option value=\"Bold\">Bold</option>\n            <option value=\"Italic\">Italic</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hasunderLine\">HasUnderLine</label>\n          <input type=\"checkbox\" name=\"hasunderLine\" id=\"hasunderLine\" checked={Boolean(selectedControl.HasUnderLine) || false} onChange={(e) => setControlHasUnderLine(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Text\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Trilean\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <label htmlFor=\"collapsible\">Collapsible</label>\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"iscollapsed\">IsCollapsed</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n          <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"na\">Na</label>\n              <input type=\"radio\" name=\"value\" id=\"na\" value=\"3\" checked={selectedControl.Value === \"3\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hidena\">Hide N/A</label>\n          <input type=\"checkbox\" name=\"hidena\" id=\"hidena\" checked={Boolean(selectedControl.HideNA) || false} onChange={(e) => setControlHideNA(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Trilean.Label\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n\n        <div className=\"properties-form-row\">\n          <hr/>\n          <label htmlFor=\"buttonyeslabel\">Button Yes</label>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"buttonyeslabel\">Label</label>\n          <input type=\"text\" name=\"buttonyeslabel\" id=\"buttonyeslabel\" value={selectedControl.Buttons[0].Label || ''} onChange={(e) => setControlButtonLabel(e, 0)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolor\">Background Color</label>\n          <input type=\"color\" name=\"bgcolor\" id=\"bgcolor\" value={selectedControl.Buttons[0].BackgroundColor || ''} onChange={(e) => setControlBackgroundColor(e, 0)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolorselected\">Background Color Selected</label>\n          <input type=\"color\" name=\"bgcolorselected\" id=\"bgcolorselected\" value={selectedControl.Buttons[0].BackgroundColorSelected || ''} onChange={(e) => setControlBackgroundColorSelected(e, 0)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <hr/>\n          <label htmlFor=\"buttonyeslabel\">Button No</label>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"buttonyeslabel\">Label</label>\n          <input type=\"text\" name=\"buttonyeslabel\" id=\"buttonyeslabel\" value={selectedControl.Buttons[1].Label || ''} onChange={(e) => setControlButtonLabel(e, 1)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolor\">Background Color</label>\n          <input type=\"color\" name=\"bgcolor\" id=\"bgcolor\" value={selectedControl.Buttons[1].BackgroundColor || ''} onChange={(e) => setControlBackgroundColor(e, 1)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolorselected\">Background Color Selected</label>\n          <input type=\"color\" name=\"bgcolorselected\" id=\"bgcolorselected\" value={selectedControl.Buttons[1].BackgroundColorSelected || ''} onChange={(e) => setControlBackgroundColorSelected(e, 1)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <hr/>\n          <label htmlFor=\"buttonyeslabel\">Button NA</label>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"buttonyeslabel\">Label</label>\n          <input type=\"text\" name=\"buttonyeslabel\" id=\"buttonyeslabel\" value={selectedControl.Buttons[2].Label || ''} onChange={(e) => setControlButtonLabel(e, 2)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolor\">Background Color</label>\n          <input type=\"color\" name=\"bgcolor\" id=\"bgcolor\" value={selectedControl.Buttons[2].BackgroundColor || ''} onChange={(e) => setControlBackgroundColor(e, 2)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolorselected\">Background Color Selected</label>\n          <input type=\"color\" name=\"bgcolorselected\" id=\"bgcolorselected\" value={selectedControl.Buttons[2].BackgroundColorSelected || ''} onChange={(e) => setControlBackgroundColorSelected(e, 2)} />\n        </div>\n\n        <div className=\"properties-form-row\">\n          <hr/>\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <label htmlFor=\"collapsible\">Collapsible</label>\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"iscollapsed\">IsCollapsed</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n          <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"na\">Na</label>\n              <input type=\"radio\" name=\"value\" id=\"na\" value=\"3\" checked={selectedControl.Value === \"3\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hidena\">Hide N/A</label>\n          <input type=\"checkbox\" name=\"hidena\" id=\"hidena\" checked={Boolean(selectedControl.HideNA) || false} onChange={(e) => setControlHideNA(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n      </div>\n    }\n\n    if (signaturePropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">ValidationMessage</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Date\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Day</label>\n          <input type=\"number\" name=\"Addday\" id=\"addday\" value={selectedControl.AddDay || 0} onChange={(e) => setControlAddDay(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Month</label>\n          <input type=\"number\" name=\"addmonth\" id=\"addmonth\" value={selectedControl.AddMonth || 0} onChange={(e) => setControlAddMonth(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"datevalue\">Date Value</label>\n          <input type=\"date\" name=\"datevalue\" id=\"datevalue\" value={selectedControl.DateValue || ''} onChange={(e) => setControlDateValue(e)} />\n          {/* <input type=\"time\"/> */}\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"formatdatetime\">Format DateTime</label>\n          <select name=\"formatdatetime\" id=\"formatdatetime\" value={selectedControl.FormatDateTime || 0} onChange={(e) => setControlFormatDateTime(e)}>\n            <option value=\"\"></option>\n            <option value=\"yyyy-MM-dd hh:mm tt\">yyyy-MM-dd hh:mm tt</option>\n            <option value=\"yyyy-MM-dd HH:mm\">yyyy-MM-dd HH:mm</option>\n            <option value=\"yyyy-MMM-dd hh:mm tt\">yyyy-MMM-dd hh:mm tt</option>\n            <option value=\"yyyy-MMM-dd HH:mm\">yyyy-MMM-dd HH:mm</option>\n            <option value=\"yy-MM-dd hh:mm tt\">yy-MM-dd hh:mm tt</option>\n            <option value=\"yy-MM-dd HH:mm\">yy-MM-dd HH:mm</option>\n            <option value=\"yy-MMM-dd hh:mm tt\">yy-MMM-dd hh:mm tt</option>\n            <option value=\"yy-MMM-dd HH:mm\">yy-MMM-dd HH:mm</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"islabelvisible\">Is Label Visible</label>\n          <input type=\"checkbox\" name=\"islabelvisible\" id=\"islabelvisible\" checked={Boolean(selectedControl.IsLabelVisible) || false} onChange={(e) => setControlIsLabelVisible(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n      </div>\n    }\n    if (pSelectedControl.Type === \"Time\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Hour</label>\n          <input type=\"number\" name=\"addhour\" id=\"addhour\" value={selectedControl.AddHour || 0} onChange={(e) => setControlAddHour(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"timevalue\">Time Value</label>\n          <input type=\"time\" name=\"timevalue\" id=\"timevalue\" value={selectedControl.TimeValue || ''} onChange={(e) => setControlTimeValue(e)} />\n          {/* <input type=\"time\"/> */}\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"formatdatetime\">Format DateTime</label>\n          <select name=\"formatdatetime\" id=\"formatdatetime\" value={selectedControl.FormatDateTime || 0} onChange={(e) => setControlFormatDateTime(e)}>\n            <option value=\"\"></option>\n            <option value=\"yyyy-MM-dd hh:mm tt\">yyyy-MM-dd hh:mm tt</option>\n            <option value=\"yyyy-MM-dd HH:mm\">yyyy-MM-dd HH:mm</option>\n            <option value=\"yyyy-MMM-dd hh:mm tt\">yyyy-MMM-dd hh:mm tt</option>\n            <option value=\"yyyy-MMM-dd HH:mm\">yyyy-MMM-dd HH:mm</option>\n            <option value=\"yy-MM-dd hh:mm tt\">yy-MM-dd hh:mm tt</option>\n            <option value=\"yy-MM-dd HH:mm\">yy-MM-dd HH:mm</option>\n            <option value=\"yy-MMM-dd hh:mm tt\">yy-MMM-dd hh:mm tt</option>\n            <option value=\"yy-MMM-dd HH:mm\">yy-MMM-dd HH:mm</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"islabelvisible\">Is Label Visible</label>\n          <input type=\"checkbox\" name=\"islabelvisible\" id=\"islabelvisible\" checked={Boolean(selectedControl.IsLabelVisible) || false} onChange={(e) => setControlIsLabelVisible(e)} />\n        </div>\n      </div>\n    }\n    if (pSelectedControl.Type === \"DateTime\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Hour</label>\n          <input type=\"number\" name=\"addhour\" id=\"addhour\" value={selectedControl.AddHour || 0} onChange={(e) => setControlAddHour(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Day</label>\n          <input type=\"number\" name=\"Addday\" id=\"addday\" value={selectedControl.AddDay || 0} onChange={(e) => setControlAddDay(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Month</label>\n          <input type=\"number\" name=\"addmonth\" id=\"addmonth\" value={selectedControl.AddMonth || 0} onChange={(e) => setControlAddMonth(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"datetimevalue\">DateTime Value</label>\n          <input type=\"date\" name=\"datetimevalue\" id=\"datetimevalue\" value={selectedControl.DateTimeValue || ''} onChange={(e) => setControlDateTimeValue(e)} />\n          {/* <input type=\"time\"/> */}\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"formatdatetime\">Format DateTime</label>\n          <select name=\"formatdatetime\" id=\"formatdatetime\" value={selectedControl.FormatDateTime || 0} onChange={(e) => setControlFormatDateTime(e)}>\n            <option value=\"\"></option>\n            <option value=\"yyyy-MM-dd hh:mm tt\">yyyy-MM-dd hh:mm tt</option>\n            <option value=\"yyyy-MM-dd HH:mm\">yyyy-MM-dd HH:mm</option>\n            <option value=\"yyyy-MMM-dd hh:mm tt\">yyyy-MMM-dd hh:mm tt</option>\n            <option value=\"yyyy-MMM-dd HH:mm\">yyyy-MMM-dd HH:mm</option>\n            <option value=\"yy-MM-dd hh:mm tt\">yy-MM-dd hh:mm tt</option>\n            <option value=\"yy-MM-dd HH:mm\">yy-MM-dd HH:mm</option>\n            <option value=\"yy-MMM-dd hh:mm tt\">yy-MMM-dd hh:mm tt</option>\n            <option value=\"yy-MMM-dd HH:mm\">yy-MMM-dd HH:mm</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"islabelvisible\">Is Label Visible</label>\n          <input type=\"checkbox\" name=\"islabelvisible\" id=\"islabelvisible\" checked={Boolean(selectedControl.IsLabelVisible) || false} onChange={(e) => setControlIsLabelVisible(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">ValidationMessage</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n      </div>\n    }\n\n\n  }\n  function deleteKeyword(pKeyword) {\n    const keywordIndex = selectedControl.Keywords.findIndex(item => item === pKeyword)\n    delete selectedControl.Keywords[keywordIndex]\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function setControlID(pEvent) {\n    const IDvalue = pEvent.target.value\n    validateId(IDvalue)\n\n    selectedControl.ID = IDvalue\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlTitle(pEvent) {\n    selectedControl.Title = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlHasUnderLine(pEvent) {\n    selectedControl.HasUnderLine = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsVisible(pEvent) {\n    selectedControl.IsVisible = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlFontSize(pEvent) {\n    selectedControl.FontSize = Number(pEvent.target.value)\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMargin(pEvent) {\n    selectedControl.Margin = Number(pEvent.target.value)\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlFontAttributes(pEvent) {\n    selectedControl.FontAttributes = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlSize(pEvent) {\n    selectedControl.Size = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlApi(pEvent) {\n    [\"IncludeAbbreviation\",\n      \"IncludePhoneNumber\",\n      \"IncludeEmail\",\n      \"IncludeTitle\",\n      \"IncludeBusinessNumber\",\n      \"IncludeTitle\",\n      \"IncludeCode\"\n    ].forEach(option => {\n      if (selectedControl[option]) delete selectedControl[option]\n    })\n\n    selectedControl.Api = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlEntryTitle(pEvent) {\n    selectedControl.EntryTitle = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDetails(pEvent) {\n    selectedControl.Details = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlCommentValue(pEvent) {\n    selectedControl.CommentValue = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlButtonLabel(pEvent, btnIndex) {\n    selectedControl.Buttons[btnIndex].Label = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlBackgroundColor(pEvent, btnIndex) {\n    selectedControl.Buttons[btnIndex].BackgroundColor = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlBackgroundColorSelected(pEvent, btnIndex) {\n    selectedControl.Buttons[btnIndex].BackgroundColorSelected = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlValidationMessage(pEvent, btnIndex) {\n    selectedControl.ValidationMessage = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMandatory(pEvent) {\n    selectedControl.Mandatory = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlAddHour(pEvent) {\n    selectedControl.AddHour = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlAddDay(pEvent) {\n    selectedControl.AddDay = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlAddMonth(pEvent) {\n    selectedControl.AddMonth = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateTimeValue(pEvent) {\n    selectedControl.DateTimeValue = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlFormatDateTime(pEvent) {\n    selectedControl.FormatDateTime = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsLabelVisible(pEvent) {\n    selectedControl.IsLabelVisible = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateValue(pEvent) {\n    selectedControl.DateValue = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlTimeValue(pEvent) {\n    selectedControl.TimeValue = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsButtonDisabled(pEvent) {\n    selectedControl.IsButtonDisabled = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlShowComment(pEvent) {\n    selectedControl.ShowComment = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function setControlCollapsible(pEvent) {\n    selectedControl.Collapsible = pEvent.target.checked\n    if (!selectedControl.Collapsible) selectedControl.IsCollapsed = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsCollapsed(pEvent) {\n    selectedControl.IsCollapsed = pEvent.target.checked\n    if (selectedControl.IsCollapsed) selectedControl.Collapsible = true\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlValue(pEvent) {\n    selectedControl.Value = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludePhoneNumber(pEvent) {\n    selectedControl.IncludePhoneNumber = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeEmail(pEvent) {\n    selectedControl.IncludeEmail = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeTitle(pEvent) {\n    selectedControl.IncludeTitle = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeBusinessNumber(pEvent) {\n    selectedControl.IncludeBusinessNumber = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeAbbreviation(pEvent) {\n    selectedControl.IncludeAbbreviation = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeCode(pEvent) {\n    selectedControl.IncludeCode = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlGalleryExtrack(pEvent) {\n    selectedControl.GalleryExtrack = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlGalleryPhone(pEvent) {\n    selectedControl.GalleryPhone = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlHideNA(pEvent) {\n    selectedControl.HideNA = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlKeywords(pEvent) {\n    if (selectedControl.Keywords === undefined || selectedControl.Keywords.length === 0){\n      selectedControl.Keywords = []\n    }\n    selectedControl.Keywords.push(currentKeyword)\n    setCurrentKeyword('')\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlData(pEvent) {\n    if (selectedControl.Data === undefined || selectedControl.Data.length === 0){\n      selectedControl.Data = []\n    }\n    selectedControl.Data.push(currentData)\n    setCurrentData('')\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  // MATRIX\n  function setControlColumns(pEvent) {\n    selectedControl.Columns = pEvent.target.value\n\n    setMatrixSize()\n    // let gridRowElement = {Type: \"GridRow\", ElementID: getUniqID(), Elements: []}\n    // if (selectedControl.Elements[0] === undefined) {\n    //   selectedControl.Elements.push(gridRowElement)\n    // }\n\n\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlRows(pEvent) {\n    selectedControl.Rows = pEvent.target.value\n    setMatrixSize()\n\n\n    // for (let index = 0; index < selectedControl.Rows; index++) {\n    //   let gridRowElement = {Type: \"GridRow\", ElementID: getUniqID(), Elements: []}\n    //   // Create the Array\n    //   if (selectedControl.Elements === undefined) {\n    //     selectedControl.Elements = new Array(selectedControl.Rows)\n    //   }\n    //   // Shorten the Array\n    //   if (selectedControl.Elements[selectedControl.Rows -1]) {\n    //     selectedControl.Elements = selectedControl.Elements.slice(0, selectedControl.Rows)\n    //   }\n    //   // selectedControl.Elements = new Array(selectedControl.Rows)\n    //   if (selectedControl.Elements[index] === undefined) selectedControl.Elements[index] = gridRowElement\n\n    // }\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function setMatrixSize(pSize) {\n    if (selectedControl.Elements === undefined) selectedControl.Elements = []\n\n    for (let row = 0; row < selectedControl.Rows; row++) {\n      const gridRowElement = { Type: \"GridRow\", ElementId: getUniqID(), Elements: [] }\n\n      let isRowEmpty = false\n      if (selectedControl.Elements[row] !== undefined) {\n        if (Object.entries(selectedControl.Elements[row]).length === 0) isRowEmpty = true\n      }\n      console.log(`--->: setMatrixSize -> isRowEmpty`, isRowEmpty)\n      if (isRowEmpty || selectedControl.Elements[row] === undefined) selectedControl.Elements[row] = gridRowElement\n\n      for (let col = 0; col < selectedControl.Columns; col++) {\n        // if (selectedControl.Elements[row][col] === undefined) selectedControl.Elements[row].Elements[col] = {}\n        // or\n        if (selectedControl.Elements[row].Elements[col] === undefined) selectedControl.Elements[row].Elements[col] = {}\n\n      }\n    }\n\n    // Remove unwanted Gridrows\n    if (selectedControl.Elements.length > selectedControl.Rows) {\n      const activeRows = selectedControl.Elements.slice(0, selectedControl.Rows)\n      selectedControl.Elements = activeRows\n    }\n    // Remove unwanted items in Gridrows\n    selectedControl.Elements.forEach(gridrow => {\n      const activeCols = gridrow.Elements.slice(0, selectedControl.Columns)\n      gridrow.Elements = activeCols\n    })\n  }\n\n  /**-------------------------------------------------**\n  * @desc - JSON utilities functions              -----*\n  *----------------------------------------------------*/\n  function copyJsonHandler() {\n    document.getElementById('json-output').select()\n    document.execCommand('copy')\n    console.log('JSON COPIED!')\n  }\n\n  function pasteJsonHandler() {\n    const jsonOutput = document.getElementById('json-output')\n\n    navigator.clipboard.readText()\n      .then(text => {\n        jsonOutput.value = text\n\n        let pasteEvent = new Event('paste')\n        onJsonChangeHandler(pasteEvent)\n      })\n      .catch(err => {\n        // User didn't grant access to read from clipboard\n        console.log('Something went wrong', err)\n      })\n  }\n\n  function loadJsonHandler(pEvent) {\n    let file = pEvent.target.files[0]\n    let reader = new FileReader()\n\n    reader.onloadend = function () {\n      try {\n        let source = reader.result\n        let newData = null\n        let newSource = source.replace(\"data:application/json;base64,\", \"\")\n\n        newData = JSON.parse(atob(newSource))\n        newData.IsEnableToImport = false\n        newData.isInValidFile = false\n        setJson({ ...newData })\n      }\n      catch (err) {\n        // error loading the json file\n        console.log('---> ', err)\n      }\n    }\n    if (file) {\n      reader.readAsDataURL(file)\n    }\n  }\n\n  function saveJsonHandler() {\n    if (isValidId) {\n      let element = document.createElement('a')\n      element.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(json)))\n      let jsonFileName = \"new_form\"\n      element.setAttribute('download', jsonFileName + '.json')\n      element.style.display = 'none'\n      document.body.appendChild(element)\n\n      element.click()\n      document.body.removeChild(element)\n    }\n  }\n\n  function deleteJsonHandler() {\n    setCurrentSectionIndex(0)\n\n    if (window.confirm('Are you sure to remove all?')) {\n      json.Sections = {}\n\n      const newSection = getNewSection()\n      setJson({ Sections: [newSection] })\n      setSelectedControl(newSection)\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - UI methods                            -----*\n  *----------------------------------------------------*/\n\n  function simpleTabsHandler(pIndex) {\n    switch (pIndex) {\n      case 0:\n        setMode('board')\n        break\n      case 1:\n        setMode('preview')\n        break\n      default:\n        break\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Render the App                        -----*\n  *----------------------------------------------------*/\n\n  const boardEdit =\n    <>\n      <div className=\"section-controls\">\n        <div className=\"section-controls-group\">\n          <button onClick={() => addNewSection()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faFolderPlus} />ADD SECTION</button>\n          <button onClick={() => duplicateSection()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faClone} />DUPLICATE SECTION</button>\n          <button onClick={() => deleteJsonHandler()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faExclamationTriangle} />CLEAR BOARD</button>\n        </div>\n      </div>\n      <div className=\"section-tabs\">\n        {sectionNavigation()}\n      </div>\n      <div id=\"board-edit\" onDragOver={onDragOverHandler} onDrop={onDropHandler}>\n        <div className=\"section-inner-header\">\n          <div>\n            <input\n              type=\"text\"\n              onClick={() => onSelectControlHandler(getCurrentSection())}\n              className=\"section-title\" value={getCurrentSection().Title}\n              readOnly\n              placeholder=\"Section title\"></input>\n          </div>\n          <div className=\"section-btn-group\">\n            <button onClick={() => moveSectionLeft()} className=\"btn btn-primary btn-small\"><FontAwesomeIcon icon={faArrowLeft} />Move LEFT</button>\n            <button onClick={() => removeSection()} className=\"btn btn-tertiary btn-small\" disabled={!currentSectionIndex > 0}><FontAwesomeIcon icon={faTrash} />REMOVE SECTION</button>\n            {/* {currentSectionIndex> 0 ? <button onClick={() => removeSection()} className=\"btn btn-tertiary btn-small\"><FontAwesomeIcon icon={faTrash}/>REMOVE SECTION</button> : ''} */}\n            <button onClick={() => moveSectionRight()} className=\"btn btn-primary btn-small btn-right-icon\">Move RIGHT<FontAwesomeIcon icon={faArrowRight} /></button>\n          </div>\n        </div>\n        {\n          getHTML()\n        }\n      </div>\n\n    </>\n\n  const jsonPreview =\n    <div id=\"json-preview\">\n      <ReactJson src={json} theme=\"monokai\" displayDataTypes={false} iconStyle=\"square\" enableClipboard={false} />\n    </div>\n\n  const errorDuplicate = (!isValidId) ? <div className=\"error-message\">\n    <FontAwesomeIcon icon={faExclamationCircle} />\n    Duplicate ID detected. Control's ID value must be unique. Modify the duplicate ID to enable the Export Json option.\n  </div> : ''\n\n  let propertiesPanel =\n    (mode === 'board') ?\n      <div className=\"properties-panel-container\">\n        <h2>PROPERTIES</h2>\n        {errorDuplicate}\n        <div>{getPropertiesPanel(selectedControl)}</div>\n      </div>\n      : (mode === 'preview') ?\n        <div id=\"edit-controls\">\n          <button onClick={() => document.getElementById('fileInput').click()} className=\"btn btn-primary\"><FontAwesomeIcon icon={faUpload} />Import JSON</button>\n          <button onClick={() => saveJsonHandler()} className=\"btn btn-tertiary\"><FontAwesomeIcon icon={faFileCode} />Export JSON</button>\n          <div>\n            <input type=\"file\"\n              id=\"fileInput\"\n              className=\"custom-file-input\"\n              accept=\"application/JSON\"\n              onChange={e => loadJsonHandler(e)} />\n          </div>\n          <button onClick={() => copyJsonHandler()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faCopy} />Copy JSON</button>\n          <button onClick={() => pasteJsonHandler()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faPaste} />Paste JSON</button>\n        </div>\n        :\n        ''\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>JSON Generator</h1>\n      </header>\n      <div id=\"page\" className=\"page\">\n\n        <nav id=\"navigation\" className=\"navigation\">\n          <div className=\"navigation-container\">\n            <div className=\"navigation-section\">\n              <div className=\"navigation-section-title\">\n                <FontAwesomeIcon icon={faCog} /><h2>Section Controls</h2>\n              </div>\n              <ul className=\"navigation-section-items\" onDragStart={controlsHandler}>\n                <li draggable id=\"Matrix\">Matrix</li>\n                <li draggable id=\"Matrixbutton\">Matrix Button</li>\n                <li draggable id=\"Repeatable\">Repeatable</li>\n              </ul>\n            </div>\n\n            <div className=\"navigation-section\">\n              <div className=\"navigation-section-title\">\n                <FontAwesomeIcon icon={faStream} /><h2>Template Controls</h2>\n              </div>\n              <ul className=\"navigation-section-items\" onDragStart={controlsHandler}>\n                <li draggable id=\"Document.TableOfContents\">Table of content</li>\n                <li draggable id=\"Document.Summary\">D.Summary</li>\n                <li draggable id=\"Document.Summary2\">D.Summary (with Close)</li>\n                <li draggable id=\"Document.Summary3\">D.Summary (with Registers)</li>\n                <li draggable id=\"Document.Summary4\">D.Summary (Registers/Close)</li>\n                <li draggable id=\"Emailregister\">Email Register</li>\n                <li draggable id=\"Smsregister\">SMS Register</li>\n                <li draggable id=\"QRScanner.List\">QR Scanner List</li>\n                <li draggable id=\"SignatureSignOnOff\">Signature SignOnOff</li>\n              </ul>\n            </div>\n\n            <div className=\"navigation-section\">\n              <div className=\"navigation-section-title\">\n                <FontAwesomeIcon icon={faLightbulb} /><h2>Type controls</h2>\n              </div>\n              <ul className=\"navigation-section-items\" onDragStart={controlsHandler}>\n                <li draggable id=\"API\">API</li>\n                <li draggable id=\"SingleBoolean\">Boolean Single</li>\n                <li draggable id=\"Boolean\">Boolean Double</li>\n                <li draggable id=\"Button.Add.ReportDate\">Button Add Report Date</li>\n                <li draggable id=\"Checkbox\">Checkbox</li>\n                <li draggable id=\"List.Multicontrol\">Conditional Response</li>\n                <li draggable id=\"Date\">Date</li>\n                <li draggable id=\"DateTime\">DateTime</li>\n                <li draggable id=\"Image\">Image</li>\n                <li draggable id=\"Image.Single\">Image Single</li>\n                <li draggable id=\"Label\">Label</li>\n                <li draggable id=\"List.Single\">List Single</li>\n                <li draggable id=\"List.Multiple\">List Multiple</li>\n                {/* <li draggable id=\"Numeric\">Numeric</li> */}\n                <li draggable id=\"QRScanner\">QR Scanner</li>\n                <li draggable id=\"Signature\">Signature</li>\n                <li draggable id=\"Signature.Date\">Signature Date</li>\n                <li draggable id=\"Signature.DateTime\">Signature DateTime</li>\n                <li draggable id=\"Text\">Text</li>\n                <li draggable id=\"Time\">Time</li>\n                <li draggable id=\"Trilean\">Trilean</li>\n                <li draggable id=\"Trilean.Label\">Trilean Label</li>\n                <li draggable id=\"Widgetevents\">Widget Events</li>\n                <li draggable id=\"Widgetdisplay\">Widget Display</li>\n                <li draggable id=\"Widgetdocketcontractor\">Widget Docket Contractor</li>\n                <li draggable id=\"Widgetdocketequipment\">Widget Docket Equipment</li>\n                <li draggable id=\"Widgetdocketphoto\">Widget Docket Photo</li>\n                <li draggable id=\"Widgetdocketcomments\">Widget Docket Comments</li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n\n        <main>\n          <div className=\"main-container\">\n            <SimpleTabs dispatchIndex={(pMode) => simpleTabsHandler(pMode)} tabs={[\n              {\n                tab: boardEdit,\n                title: \"Board\"\n              },\n              {\n                tab: jsonPreview,\n                title: \"Json Preview\"\n              }]} />\n            <textarea id=\"json-output\" cols=\"60\" rows=\"14\" value={JSON.stringify(json)} onChange={() => onJsonChangeHandler()}></textarea>\n          </div>\n        </main>\n\n        <aside id=\"sidebar\" className=\"sidebar\">\n          <span id=\"sidebarHandle\"></span>\n          <div id=\"properties-panel\">{propertiesPanel}</div>\n        </aside>\n\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
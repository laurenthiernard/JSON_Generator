{"version":3,"sources":["utils.js","components/Control.js","components/SimpleTabs.js","components/SelectSearchable.js","components/Modal.js","layout.js","App.js","serviceWorker.js","index.js","components/SelectSearchable.module.scss","components/Modal.module.scss"],"names":["getUniqID","pLength","random","window","btoa","Math","Date","getTime","substring","toLocaleLowerCase","Control","props","id","controlObj","ElementId","type","Type","reorderable","isFixed","className","icon","faArrowUp","onClick","moveUp","faArrowDown","moveDown","onClickHandler","pType","faAudioDescription","faFileAlt","faHandPointDown","faWeight","faToggleOn","faCheckSquare","faListUl","faCalendarAlt","faImage","faSpellCheck","faGenderless","faCircle","faBars","faTable","getIcon","deleteButton","delete","faTrashAlt","title","footer","style","backgroundColor","BackgroundColor","BackgroundColorSelected","selectedControl","indexOf","value","Id","disabled","Title","subcontrolsHTMLElements","cssRows","cssColumns","i","Rows","rowElement","Elements","j","colElement","undefined","newChildControl","key","slotContent","Object","entries","length","push","Columns","display","gridTemplateColumns","gridTemplateRows","elementJson","controlElement","subcontrolsHTML","map","element","getSubcontrols","SimpleTabs","useState","activeTab","setActiveTab","tabButton","tabs","tab","index","useEffect","dispatchIndex","SelectSearchable","keyword","setKeyword","items","filteredList","filter","item","toLowerCase","includes","initialIsVisible","isVisible","setIsVisible","ref","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","useVisible","onClickItemHandler","pEvent","pItem","stopPropagation","selectedItems","findIndex","onSelectItem","styles","selectSearchable_Container","selectSearchable_Header","e","selectSearchable_SelectedContainer","selectSearchable_SelectedItem","selectedItem_delete","faTimes","selectSearchable_Trigger","faAngleDown","faAngleUp","position","selectSearchable_List","selectSearchable_SearchContainer","onChange","selectSearchable_ItemsContainer","selectItem","selectedItem","selectSearchable_SelectedItem_Selected","Modal","visibility","toggleVisibility","message","css","backdrop","springBackdropProps","useSpring","opacity","from","zIndex","config","gentle","springModalProps","top","stiff","backdropStyle","div","modalBackdrop","modalBackdrop_freeze","modalContainer","modalClose","modalHeader","faExclamationTriangle","modalContent","modalFooter","modalBtn","initLayout","isResizingSidebar","isNavBarCollapsed","sidebarWidth","sidebarHandle","querySelector","navigation","layout","pageWidth","innerWidth","navigationSections","querySelectorAll","collapseNavigation","mouseDownEvent","forEach","section","classList","add","expandNavigation","remove","pWidth","min","max","parseInt","clientX","idsCollection","idsLoadedList","Set","App","initialJson","Sections","SectionId","savedJson","JSON","parse","localStorage","getItem","json","setJson","currentSectionIndex","setCurrentSectionIndex","setSelectedControl","isValidId","setIsValidId","idList","setIdList","usedTemplateList","setUsedTemplateList","mode","setMode","currentKeyword","setCurrentKeyword","setCurrentKeyboard","currentSelectedValue","setCurrentSelectedValue","currentData","setCurrentData","setSelectedListDataIndex","isModalDocketVisible","setIsModalDocketVisible","databaseFieldLocation","to","singleUseElements","setItem","stringify","controlsHandler","dataTransfer","setData","addToNewSection","pElement","pChildren","newSection","getNewSection","child","removeSection","sections","unregisterControlId","hasOwnProperty","subitem","subindex","subsubitem","subsubindex","pTitle","renameSectionTitle","sectionTitle","getNewElement","pIsMatrix","pIsMatrixButton","pIsRepeatable","matrixElementsInit","getDefaultID","Selection","XAxisName","YAxisName","Legend","ShowLegend","LegendValuesX","Name","Values","LegendValuesY","getElementFromElementId","pElementID","currentSection","foundItem","getElementsFromType","getCurrentSection","deleteElementFromId","pElementId","console","log","unregisterControlChildrenId","jsonToUpdate","elementsToFilter","elementsIndex","newElements","getParentElementFromId","validateId","pID","getElementsFromId","initFormatProperty","Format","registerControlId","pControl","collection","idIndex","idObject","prefix","idPosition","positionNumber","slice","toUpperCase","newId","Array","onSelectControlHandler","onJsonChangeHandler","currentValue","getElementById","moveElement","pParentElement","pDirection","pIsSubControl","container","splice","deleteKeyword","pKeyword","keywordIndex","Keywords","deleteIdValue","AssociatedId","names","deleteData","pData","dataIndex","Data","OptionedControls","optionIndex","SelectedString","setControlID","IDvalue","setControlTitle","setControlTitle2","Title2","setControlHasUnderLine","HasUnderLine","checked","setControlIsVisible","IsVisible","setControlApiValue","Api","setControlEntryTitle","EntryTitle","setControlCommentValue","CommentValue","setControlButtonLabel","btnIndex","Buttons","Label","setControlBackgroundColor","setControlBackgroundColorSelected","setControlMatrixBackgroundColor","setControlMatrixBackgroundColorSelected","setControlValidationMessage","ValidationMessage","setControlMandatory","Mandatory","setControlAddHour","AddHour","setControlAddDay","AddDay","setControlAddMonth","AddMonth","setControlFormatDateTime","FormatDateTime","setControlAssociatedId","setControlIsLabelVisible","IsLabelVisible","setControlIsButtonDisabled","IsButtonDisabled","setControlShowComment","ShowComment","setControlCollapsible","Collapsible","IsCollapsed","setControlIsCollapsed","setControlValue","Value","setControlIncludeTitle","IncludeTitle","setControlHideNA","HideNA","setControlKeywords","keys","setControlData","setControlDetails","Details","setMatrixSize","pSize","row","gridRowElement","isRowEmpty","col","activeRows","gridrow","activeCols","isDocketNumberButton","boardEdit","faFolderPlus","sectionToDuplicate","duplicateSection","faClone","confirm","deleteJsonHandler","sectionNavigation","onDragOver","preventDefault","onDrop","elementName","getData","targetID","parentID","isValidElement","alert","newElement","droppedPosition","lastIndexOf","pDefaultValues","addAsFirstSection","Button","initButtonsProperty","initDefaultValues","addToCurrentSection","readOnly","placeholder","reorderedSections","moveSectionLeft","faArrowLeft","faTrash","moveSectionRight","faArrowRight","currentSectionToRender","DatabaseField","control","parentElement","moveUpHandler","moveDownHandler","getControl","getHTML","jsonPreview","src","theme","displayDataTypes","iconStyle","enableClipboard","errorDuplicate","faExclamationCircle","propertiesPanel","pSelectedControl","keyWordsList","globalProperties","htmlFor","name","Boolean","defaultValue","setControlUniqueValue","setControlColumns","setControlRows","legendValuesX","legendValuesY","pPos","setControlLegendValuesX","setControlLegendValuesY","pop","setControlColumnsLegend","setControlRowsLegend","setControlXAxisName","setControlYAxisName","setControlSelection","setControlShowLegend","Keys","option","apiName","DocketID","setControlApi","IncludePhoneNumber","setControlIncludePhoneNumber","IncludeEmail","setControlIncludeEmail","IncludeBusinessNumber","setControlIncludeBusinessNumber","IncludeAbbreviation","setControlIncludeAbbreviation","IncludeCode","setControlIncludeCode","setApiDocketNumber","associatedIds","idsList","dataList","data","optionedControlIndex","selectedIds","Controls","keywordId","Number","keywordClickHandler","pItems","pSelected","optionValueIndex","optionValue","Index","setControlOptionedControls","action","onSubmit","defaultValueList","SelectedValue","setControlSelectedValue","Size","setControlSize","GalleryExtrack","setControlGalleryExtrack","GalleryPhone","setControlGalleryPhone","FontSize","setControlFontSize","Margin","setControlMargin","FontAttributes","setControlFontAttributes","keyboardOptions","kbVarChar","VarChar","setControlVarChar","kbLines","Lines","setControlLines","kbDecimal","Decimal","setControlDecimal","kbMin","Min","setControlMin","kbMax","Max","setControlMax","Keyboard","docketValue","IsEnabled","setControlIsEnabled","WarningMessage","Warning","setControlWarningMessage","setControlWarning","setControlKeyboard","selectedType","setTextDocketNumber","databasefieldFrom","setControlValidFrom","databasefieldTo","setControlValidTo","DateValue","IsBlank","setControlDateValue","setControlDateIsBlank","TimeValue","setControlTimeValue","setControlTimeIsBlank","DateTimeValue","setControlDateTimeDateValue","setControlDateTimeTimeValue","setControlDateTimeIsBlank","getPropertiesPanel","click","faUpload","createElement","setAttribute","encodeURIComponent","jsonFileName","body","appendChild","removeChild","saveJsonHandler","faFileCode","accept","file","files","reader","FileReader","onloadend","source","result","newData","newSource","replace","Base64","decode","IsEnableToImport","isInValidFile","err","readAsDataURL","loadJsonHandler","select","execCommand","faCopy","jsonOutput","navigator","clipboard","readText","then","text","Event","catch","pasteJsonHandler","faPaste","faCog","onDragStart","draggable","faStream","faLightbulb","pMode","pIndex","simpleTabsHandler","cols","rows","location","hostname","match","ReactDOM","render","serviceWorker","ready","registration","unregister","error","module","exports"],"mappings":"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","file":"static/js/main.cdada016.chunk.js","sourcesContent":["export function getUniqID(pLength) {\n  let random = () => window.btoa(Math.random()*(new Date().getTime())*1).substring(4, 9)\n  return `${random()}-${random()}`.substring(0, pLength).toLocaleLowerCase()\n}","import React from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n  faWeight, faSpellCheck,\n  faCalendarAlt, faTrashAlt,\n  faAudioDescription, faToggleOn,\n  faSortNumericUp, faGenderless,\n  faImage, faImages, faListUl,\n  faList, faFileAlt, faClock,\n  faCheckSquare, faHandPointDown,\n  faSearch, faCircle, faAd,\n  faMailBulk, faPlus, faBars,\n  faUserCircle, faTable, faLayerGroup,\n  faEdit, faArrowUp, faArrowDown,\n} from \"@fortawesome/free-solid-svg-icons\"\n\nimport { getUniqID } from './../utils'\n\nexport default function Control(props) {\n  const id = props.controlObj.ElementId\n  const type = props.controlObj.Type\n\n  // const clickHandlerRef = props.onClickHandler\n\n  // console.log(`--->: Control -> type`, props.controlObj)\n  // console.log(`--->: Control -> props.selectedControl`, props.selectedControl)\n\n  function getSubcontrols() {\n    let subcontrolsHTMLElements = []\n    let cssRows = ''\n    let cssColumns = ''\n\n    switch (type) {\n      case \"Matrix\":\n\n        for (let i = 0; i < props.controlObj.Rows; i++) {\n          // let gridRowElement = {Type: \"GridRow\", ElementID: getUniqID(), Elements: []}\n          // props.controlObj.Elements[i] = gridRowElement\n\n          const rowElement = props.controlObj.Elements[i]\n          // console.log(`--->: getSubcontrols -> rowElement`, rowElement)\n          cssRows += '1fr '\n          cssColumns = ''\n\n          for (let j = 0; j < props.controlObj.Columns; j++) {\n            const colElement = (rowElement.Elements !== undefined) ? rowElement.Elements[j] : {}\n            // console.log(`--->: getSubcontrols -> new control: `, colElement)\n            const newChildControl =\n              <Control\n                controlObj={colElement}\n                selectedControl={props.selectedControl}\n                isFixed={true}\n                onClickHandler={() => props.onClickHandler(colElement)}\n                // onClickHandler={() => props.onSelectControlHandler(colElement)}\n                delete={(colElement) => props.delete(colElement)}\n                key={colElement.ElementId} />\n            // key={`matrix-sub${i}${j}`} />\n\n            const slotContent = (Object.entries(colElement).length === 0 || colElement === undefined) ? 'Add control' : newChildControl\n            // console.log(`--->: getSubcontrols -> slotContent`, slotContent)\n            cssColumns += '1fr '\n            subcontrolsHTMLElements.push(\n              <div\n                id={`${id}-matrix-row${i}-col${j}`}\n                key={`matrix${i}${j}`}\n                className=\"matrix-box\">{slotContent}\n              </div>)\n          }\n        }\n        return <div className=\"control-footer\" style={{ display: 'grid', gridTemplateColumns: cssColumns, gridTemplateRows: cssRows }}>{subcontrolsHTMLElements}</div>\n\n      case \"Matrix.Button\":\n        // console.log('---> Control: ', props.controlObj)\n        for (let i = 0; i < props.controlObj.Rows; i++) {\n          const rowElement = props.controlObj.Elements[i]\n          // console.log(`--->: getSubcontrols -> rowElement`, rowElement)\n\n          cssRows += '1fr '\n          cssColumns = ''\n\n          for (let j = 0; j < props.controlObj.Columns; j++) {\n            const colElement = (rowElement.Elements !== undefined) ? rowElement.Elements[j] : {}\n            // console.log(`--->: Adjust row and cols: `, props.controlObj)\n\n            cssColumns += '1fr '\n\n            let elementJson = props.controlObj.Elements[i].Elements[j]\n            // console.log(`--->: getSubcontrols -> elementJson`, elementJson)\n\n\n            if (elementJson.Type === undefined) {\n              elementJson = {\n                ...colElement,\n                Id: `BR${i + 1}C${j + 1}`,\n                \"ElementId\": getUniqID(),\n                \"Type\": \"M.Button\"\n              }\n              props.controlObj.Elements[i].Elements[j] = elementJson\n            }\n\n            const slotContent = <Control\n              controlObj={elementJson}\n              selectedControl={props.selectedControl}\n              isFixed={true}\n              onClickHandler={() => props.onClickHandler(elementJson)}\n              key={elementJson.ElementId}\n            />\n\n            subcontrolsHTMLElements.push(\n              <div\n                id={`${id}-matrix-row${i}-col${j}`}\n                key={`matrix${i}${j}`}\n                className=\"matrix-box matrixbutton\">{slotContent}\n              </div>)\n          }\n        }\n\n        return <div className=\"control-footer\" style={{ display: 'grid', gridTemplateColumns: cssColumns, gridTemplateRows: cssRows }}>{subcontrolsHTMLElements}</div>\n      case \"Repeatable\":\n      case \"SignatureSignOnOff\":\n      case \"Document.Summary2\":\n      case \"Document.Summary3\":\n      case \"Document.Summary4\":\n      case \"Emailregister\":\n      case \"Smsregister\":\n      case \"Document.Summary\":\n        for (let i = 0; i < props.controlObj.Elements.length; i++) {\n          const controlElement = props.controlObj.Elements[i]\n          const newChildControl =\n            <Control\n              controlObj={controlElement}\n              selectedControl={props.selectedControl}\n              isFixed={false}\n              onClickHandler={() => props.onClickHandler(controlElement)}\n              moveUp={(controlElement) => props.moveUp(controlElement, true)}\n              moveDown={(controlElement) => props.moveDown(controlElement, true)}\n              delete={(controlElement) => props.delete(controlElement)}\n              key={controlElement.ElementId} />\n\n          // console.log(`--->: getSubcontrols -> newChildControl`, newChildControl)\n          subcontrolsHTMLElements.push(newChildControl)\n        }\n        // console.log(`--->: getSubcontrols -> subcontrolsHTMLElements`, subcontrolsHTMLElements)\n        // Repeatable\n        const subcontrolsHTML = subcontrolsHTMLElements.map(element => element)\n\n        // const slotContent = (Object.entries(colElement).length === 0 || colElement === undefined) ? 'Add control' : newChildControl\n        return <>\n          <div id={`${id}-repeatable-area`} className=\"control-footer-addarea\">Add controls</div>\n          <div id={`${id}-repeatable`} className=\"control-footer\">{subcontrolsHTML}</div>\n        </>\n\n      // case \"Document.Summary\":\n      // case \"Document.Summary2\":\n      // case \"Document.Summary3\":\n      // case \"Document.Summary4\":\n      // case \"Emailregister\":\n      // case \"Smsregister\":\n      //   // console.log('---> ', props.controlObj.Elements)\n      //   const children = props.controlObj.Elements.map(item => (\n      //     <Control\n      //       controlObj={item}\n      //       selectedControl={props.selectedControl}\n      //       isFixed={false}\n      //       onClickHandler={() => props.onClickHandler(item)}\n      //       // onClickHandler={() => props.onSelectControlHandler(colElement)}\n      //       // delete={() => props.delete(item)}\n      //       key={item.ElementId} />))\n      //   return <div className=\"control-footer\">{children}</div>\n\n      default:\n        break\n    }\n  }\n\n  function getIcon(pType) {\n    switch (pType) {\n      case \"Label\":\n      case \"DocumentSummaryGrid\":\n        return faAudioDescription\n      case \"Document.TableOfContents\":\n      case \"Document.Summary\":\n      case \"Document.Summary2\":\n      case \"Document.Summary3\":\n      case \"Document.Summary4\":\n        return faFileAlt\n      case \"Button.Submit.Register\":\n      case \"Button.View.Document\":\n      case \"Button.Closeout\":\n      case \"Button.Send.SMS\":\n      case \"Button.Send.Email\":\n      case \"Button.Add.Email\":\n      case \"Button.Add.SMS\":\n      case \"Button.Add.Signature\":\n      case \"Button.Add.ReportDate\":\n        return faHandPointDown\n      case \"API\":\n      case \"Signature.Date\":\n      case \"Signature.DateTime\":\n        return faWeight\n      case \"SingleBoolean\":\n      case \"Boolean\":\n        return faToggleOn\n      case \"Checkbox\":\n        return faCheckSquare\n      case \"List.Multicontrol\":\n        return faListUl\n      case \"Date\":\n      case \"DateTime\":\n        return faCalendarAlt\n      case \"Image\":\n      case \"Image.Single\":\n        return faImage\n      case \"QRScanner\":\n      case \"QRScanner.List\":\n      case \"Signature\":\n        return faSpellCheck\n      case \"Trilean\":\n        return faGenderless\n      case \"Trilean.Label\":\n        return faCircle\n      case \"Repeatable\":\n        return faBars\n      default:\n        return faTable\n    }\n  }\n\n  const reorderable = (props.isFixed) ? '' : <div className=\"control-reordering\">\n    <FontAwesomeIcon icon={faArrowUp}\n      onClick={() => props.moveUp(props.controlObj, false)}\n    />\n    <FontAwesomeIcon icon={faArrowDown}\n      onClick={() => props.moveDown(props.controlObj, false)}\n    />\n  </div>\n\n  const icon = props.controlObj.Type !== \"M.Button\" ? <div className=\"control-icon\" onClick={props.onClickHandler}>\n    <FontAwesomeIcon icon={getIcon(props.controlObj.Type)} />\n  </div>\n    : ''\n  const deleteButton = props.controlObj.Type !== \"M.Button\" ? <div className=\"control-delete\" onClick={() => props.delete(props.controlObj)}>\n    <FontAwesomeIcon\n      icon={faTrashAlt}\n      title=\"Remove\"\n    /></div>\n    : ''\n  const footer = props.controlObj.Type === \"M.Button\" ? <div className=\"control-footer\" onClick={props.onClickHandler}>\n    <div style={{ backgroundColor: props.controlObj.BackgroundColor }}></div>\n    <div style={{ backgroundColor: props.controlObj.BackgroundColorSelected }}></div>\n  </div>\n    : ''\n\n  return (\n    <div\n      id={id}\n      className={`${props.isFixed ? 'subcontrol' : 'control'}${id === props.selectedControl.ElementId ? ' active-control' : ''}`}\n    >\n      <div className=\"control-header\" onClick={props.onClickHandler}>{props.controlObj.Type !== \"M.Button\" ? props.controlObj.Type : ''}</div>\n      <div className=\"control-content\">\n        {reorderable}\n        {icon}\n        {/* {title} */}\n        <div className={`control-id ${props.controlObj.Type.indexOf('Button') === 0 ? \"hidden\" : ''}`} onClick={props.onClickHandler}>\n          <input type=\"text\" value={props.controlObj.Id || ''} disabled></input>\n        </div>\n        <div className=\"control-title\" onClick={props.onClickHandler}>\n          <input type={props.controlObj.Type.indexOf('Button') === 0 ? \"button\" : \"text\"} value={props.controlObj.Title || props.controlObj.Type || ''} disabled></input>\n        </div>\n        {deleteButton}\n      </div>\n      {footer}\n      {getSubcontrols()}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nexport default function SimpleTabs(props) {\n\n  const [activeTab, setActiveTab] = useState(0)\n\n  const tabButton = props.tabs.map((tab, index) => {\n    return <button className={`SimpleTabs-tab ${activeTab === index ? 'tab-active' : ''}`} key={index} onClick={() => setActiveTab(index)}>{props.tabs[index].title}</button>\n  })\n\n  useEffect(() => {\n    props.dispatchIndex(activeTab)\n  }, [activeTab])\n\n  return (\n    <div className=\"SimpleTabs-container\">\n      <div className=\"SimpleTabs-header\">\n        {tabButton}\n      </div>\n      {props.tabs[activeTab].tab}\n    </div>\n  )\n}\n","import React, { useState, useEffect, useRef } from 'react'\nimport styles from './SelectSearchable.module.scss'\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faTimes, faCheck } from '@fortawesome/free-solid-svg-icons'\n\n\nfunction useVisible(initialIsVisible) {\n  const [isVisible, setIsVisible] = useState(initialIsVisible);\n  const ref = useRef(null);\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      setIsVisible(false);\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true);\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true);\n    }\n  }, [])\n  return { ref, isVisible, setIsVisible }\n}\n\nexport default function SelectSearchable(props) {\n\n  const [keyword, setKeyword] = useState('')\n\n  const items = props.items\n  const filteredList = keyword.length > 0 ? items.filter(item => item.toLowerCase().includes(keyword.toLowerCase())) : items\n\n  const { ref, isVisible, setIsVisible } = useVisible(false);\n\n  function onClickItemHandler(pEvent, pItem) {\n    pEvent.stopPropagation()\n    // console.log(`--->: onClickItemHandler -> pItem`, pItem)\n    const clickedItemIndex = props.selectedItems.findIndex(item => item === pItem)\n\n    if (clickedItemIndex > -1) {\n      props.onSelectItem(props.selectedItems.filter(item => item !== pItem))\n    }\n    else props.onSelectItem([...props.selectedItems, pItem])\n  }\n\n  return (\n    <div className={styles.selectSearchable_Container}>\n      <div className={styles.selectSearchable_Header} onClick={e => setIsVisible(!isVisible)}>\n        <div className={styles.selectSearchable_SelectedContainer}>\n          {props.selectedItems.map((item, index) => <div key={index} className={styles.selectSearchable_SelectedItem}>\n            {item}\n            <span className={styles.selectedItem_delete} onClick={(e) => onClickItemHandler(e, item)}>\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </div>)}\n        </div>\n        <div className={styles.selectSearchable_Trigger}>\n          <FontAwesomeIcon icon={isVisible ? faAngleDown : faAngleUp} />\n        </div>\n      </div>\n      {isVisible && <div style={{ position: 'absolute' }} className={`${styles.selectSearchable_List}`} ref={ref}>\n        <div className={styles.selectSearchable_SearchContainer}>\n          <input type=\"text\" value={keyword} onChange={e => setKeyword(e.target.value)}></input>\n          <FontAwesomeIcon icon={faTimes} onClick={e => setKeyword('')} />\n        </div>\n        <div className={styles.selectSearchable_ItemsContainer}>\n          {filteredList.map((item, index) => <span key={index} className={`${styles.selectItem} ${props.selectedItems.findIndex(selectedItem => item === selectedItem) > -1 ? styles.selectSearchable_SelectedItem_Selected : ''}`} onClick={(e) => onClickItemHandler(e, item)}>{item}</span>)}\n        </div>\n      </div>}\n    </div>\n  )\n}\n\n\n","import React, { useEffect } from 'react'\nimport styles from './Modal.module.scss'\n\nimport { useSpring, animated, config } from 'react-spring'\n\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faExclamationTriangle, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Modal(props) {\n\n  const { visibility, toggleVisibility, message, css, backdrop } = props\n  const springBackdropProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      from: { opacity: 0, zIndex: 10 },\n      config: config.gentle\n    }\n  )\n  const springModalProps = useSpring(\n    {\n      opacity: visibility ? 1 : 0,\n      top: visibility ? 0 : -25,\n      from: { opacity: 0 },\n      config: config.stiff\n    }\n  )\n\n  function onClickBackdropHandler(pEvent) {\n    if (pEvent.target.id === 'backdrop') toggleVisibility()\n  }\n\n  const backdropStyle = backdrop ? { backgroundColor: backdrop } : ''\n\n  return (\n    <animated.div style={springBackdropProps}>\n      <div\n        id=\"backdrop\"\n        className={`${styles.modalBackdrop} ${visibility ? '' : styles.modalBackdrop_freeze}`}\n        onClick={onClickBackdropHandler}\n        style={backdropStyle}>\n          <animated.div style={springModalProps}>\n            <div\n              className={styles.modalContainer}\n              style={css}>\n              <div className={styles.modalClose} onClick={toggleVisibility}>\n                <FontAwesomeIcon icon={faTimes} />\n              </div>\n              <div className={styles.modalHeader}>\n                <FontAwesomeIcon icon={faExclamationTriangle} />\n              </div>\n              <div className={styles.modalContent}>\n                {message}\n              </div>\n              <div className={styles.modalFooter}>\n                <button className={styles.modalBtn} onClick={toggleVisibility}>OK</button>\n              </div>\n          </div>\n        </animated.div>\n      </div>\n    </animated.div>\n  )\n}\n","\nexport default function initLayout() {\n\n  let isResizingSidebar = false\n  let isNavBarCollapsed = false\n\n  let sidebarWidth = 300\n  let sidebarMinWidth = 150\n  let sidebarMaxWidth = 400\n\n  const breakpoint = 1100\n  const navbarCollapsedWidth = 80\n  const navbarExpandedWidth = 250\n\n  const sidebarHandle = document.querySelector('#sidebarHandle')\n  const navigation = document.querySelector('#navigation')\n  const layout = document.querySelector('#page')\n  let pageWidth = window.innerWidth\n  const navigationSections = document.querySelectorAll('.navigation-section')\n\n  if (pageWidth < breakpoint) collapseNavigation()\n\n  const mouseDownEvent = sidebarHandle.addEventListener('mousedown', (e) => isResizingSidebar = true)\n  document.addEventListener('mouseup', (e) => {\n    isResizingSidebar = false\n    sidebarHandle.removeEventListener('mousedown', mouseDownEvent)\n  })\n  document.addEventListener('mousemove', (e) => {\n    if (isResizingSidebar) {\n      sidebarWidth = Math.min(Math.max(parseInt(pageWidth - e.clientX), sidebarMinWidth), sidebarMaxWidth)\n      setSidebarWidth(sidebarWidth)\n    }\n  })\n\n  function setSidebarWidth(pWidth) {\n    if ((pWidth > sidebarMinWidth) && pWidth < sidebarMaxWidth) {\n      if (!isNavBarCollapsed) {\n        layout.style.gridTemplateColumns = `${navbarExpandedWidth}px auto ${pWidth}px`\n      }\n      else if (isNavBarCollapsed) {\n        layout.style.gridTemplateColumns = `${navbarCollapsedWidth}px auto ${pWidth}px`\n      }\n    }\n  }\n\n  window.addEventListener('resize', (e) => {\n    pageWidth = e.target.innerWidth\n    if (pageWidth < breakpoint && !isNavBarCollapsed) {\n      layout.style.gridTemplateColumns = `${navbarCollapsedWidth}px auto ${sidebarWidth}px`\n      isNavBarCollapsed = !isNavBarCollapsed\n      collapseNavigation()\n    }\n    else if (pageWidth > breakpoint && isNavBarCollapsed) {\n      layout.style.gridTemplateColumns = `${navbarExpandedWidth}px auto ${sidebarWidth}px`\n      isNavBarCollapsed = !isNavBarCollapsed\n      expandNavigation()\n    }\n  })\n\n  navigation.addEventListener('mouseenter', e => {\n    if (pageWidth < breakpoint && isNavBarCollapsed) {\n\n    expandNavigation()\n    }\n  })\n  navigation.addEventListener('mouseleave', e => {\n    if (pageWidth < breakpoint && !isNavBarCollapsed) {\n\n    collapseNavigation()\n    }\n  })\n\n  function collapseNavigation() {\n    navigationSections.forEach(section => section.classList.add(\"collapsed\"))\n    layout.style.gridTemplateColumns = `${navbarCollapsedWidth}px auto ${sidebarWidth}px`\n    isNavBarCollapsed = true\n  }\n  function expandNavigation() {\n    navigationSections.forEach(section => section.classList.remove(\"collapsed\"))\n    layout.style.gridTemplateColumns = `${navbarExpandedWidth}px auto ${sidebarWidth}px`\n    isNavBarCollapsed = false\n  }\n\n\n}\n","/* eslint-disable no-loop-func */\n\nimport React, { useState, useEffect } from 'react'\nimport './App.scss'\n\nimport Control from './components/Control'\nimport SimpleTabs from './components/SimpleTabs'\nimport SelectSearchable from './components/SelectSearchable'\nimport Modal from './components/Modal'\nimport { getUniqID } from './utils'\nimport initLayout from './layout.js'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faStream, faCog, faLightbulb, faTrash, faCopy, faFolderPlus, faClone, faPaste, faExclamationTriangle, faFileCode, faUpload, faArrowRight, faExclamationCircle, faArrowLeft, faTrashAlt, faSleigh } from '@fortawesome/free-solid-svg-icons'\nimport ReactJson from 'react-json-view'\nimport { Base64 } from 'js-base64'\n\nlet idsCollection = {}\n\n// List of id's to link options in List.Multicontrol\nlet idsLoadedList = new Set()\n\nfunction App() {\n\n  const saveSessionEnabled = true\n  let initialJson = { Sections: [{ SectionId: \"mjy5n\", Title: \"Section 1\", Elements: [] }] }\n  // Check if saved JSON is valid and assign it\n  if (saveSessionEnabled) {\n    const savedJson = JSON.parse(localStorage.getItem('currentJson'))\n    if (savedJson !== null) initialJson = savedJson\n  }\n\n  const [json, setJson] = useState(initialJson)\n  const [currentSectionIndex, setCurrentSectionIndex] = useState(0)\n  const [selectedControl, setSelectedControl] = useState({})\n  const [isValidId, setIsValidId] = useState(true)\n  const [idList, setIdList] = useState([])\n  // const [idLoadedList, setIdLoadedList] = useState([])\n  const [usedTemplateList, setUsedTemplateList] = useState([])\n  const [mode, setMode] = useState('board')\n  const [currentKeyword, setCurrentKeyword] = useState('')\n  const [currentKeyboard, setCurrentKeyboard] = useState('')\n  const [currentSelectedValue, setCurrentSelectedValue] = useState('')\n  const [currentData, setCurrentData] = useState('')\n  const [selectedListDataIndex, setSelectedListDataIndex] = useState(0)\n\n  const [isModalDocketVisible, setIsModalDocketVisible] = useState(false)\n\n  let databaseFieldLocation = { from: '', to: '' }\n\n  const singleUseElements = [\n    \"Document.TableOfContents\",\n    \"Document.Summary\",\n    \"Document.Summary2\",\n    \"Document.Summary3\",\n    \"Document.Summary4\",\n    \"Emailregister\",\n    \"Smsregister\",\n    \"QRScanner.List\",\n    \"SignatureSignOnOff\"\n  ]\n\n  useEffect(() => {\n    initLayout()\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('currentJson', JSON.stringify(json))\n    // console.log('---> json updated: ', JSON.stringify(json))\n  }, [json])\n\n\n  /**-------------------------------------------------**\n  * @desc - DRAG AND DROP                         -----*\n  *----------------------------------------------------*/\n\n  let controlsHandler = e => {\n    e.dataTransfer.setData(\"text/plain\", e.target.id)\n  }\n  let onDragOverHandler = e => {\n    e.preventDefault()\n  }\n  let onDropHandler = e => {\n    e.preventDefault()\n    const elementName = e.dataTransfer.getData(\"text/plain\")\n\n    let targetID = e.target.id\n    let parentID = targetID.substring(0, 11)\n\n    const notAllowedElements = [\n      \"Matrix\",\n      \"Matrix.Button\",\n      \"Repeatable\",\n      \"Document.TableOfContents\",\n      \"Document.Summary\",\n      \"Document.Summary2\",\n      \"Document.Summary3\",\n      \"Document.Summary4\",\n      \"Emailregister\",\n      \"Smsregister\",\n      \"QRScanner.List\",\n      \"SignatureSignOnOff\"\n    ]\n\n    if (singleUseElements.indexOf(elementName) > -1) setUsedTemplateList([...usedTemplateList, elementName])\n\n    let isValidElement = true\n    if (notAllowedElements.findIndex(element => element === elementName) > -1) {\n      isValidElement = false\n    }\n\n    // ---------------------------------------------------------------------------- MATRIX : ADD Elements\n    if (targetID.includes('matrix')) {\n      if (!isValidElement) {\n        alert('Control not alowed inside a Matrix')\n        return\n      }\n      let newElement = getNewElement(elementName)\n      console.log(`--->: App -> newElement`, newElement)\n      let droppedPosition = {\n        row: targetID.substring(targetID.lastIndexOf('-row') + 4, targetID.lastIndexOf('-col')),\n        col: targetID.substring(targetID.lastIndexOf('-col') + 4, targetID.length)\n      }\n\n      const parentElement = getElementFromElementId(parentID)\n      const elementRow = parentElement.Elements[droppedPosition.row]\n      elementRow.Elements[droppedPosition.col] = newElement\n\n      const jsonToUpdate = JSON.parse(JSON.stringify(json))\n      setJson({ ...jsonToUpdate })\n    }\n    else if (targetID.includes('repeatable')) {\n      if (!isValidElement) {\n        alert('Control not alowed inside a Repeatable')\n        return\n      }\n      let newElement = getNewElement(elementName)\n      const parentElement = getElementFromElementId(parentID)\n      parentElement.Elements.push(newElement)\n\n      const jsonToUpdate = JSON.parse(JSON.stringify(json))\n      setJson({ ...jsonToUpdate })\n    }\n    // ---------------------------------------------------------------------------- TEMPLATES : ADD Elements\n    else {\n      switch (elementName) {\n        case \"Document.TableOfContents\":\n          // prependToFirstSection(elementName,\n          addAsFirstSection(elementName,\n            { Type: \"Document.TableOfContents\", Title: \"Table Of Contents\", Id: \"DocTableOfContents\", ElementId: getUniqID() },\n          )\n          break\n        case \"Document.Summary\":\n          addToNewSection(\"Document Summary\", [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", Id: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", Id: \"Button.Submit.Register\", Title: \"Submit to Register\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", Id: \"Button.View.Document\", Title: \"View Document\", ElementId: getUniqID() }])\n          break\n        case \"Document.Summary2\":\n          addToNewSection(\"Document Summary\", [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", Id: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", Title: \"Submit to Register\", Id: \"Button.Submit.Register\", ElementId: getUniqID() },\n            { Type: \"Button.Closeout\", Title: \"Close out\", Id: \"Button.Closeout\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", Title: \"View Document\", Id: \"Button.View.Document\", ElementId: getUniqID() },\n          ])\n          break\n        case \"Document.Summary3\":\n          addToNewSection(\"Document Summary\", [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", Id: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", Title: \"Submit to Register\", Id: \"Button.Submit.Register\", ElementId: getUniqID() },\n            { Type: \"Button.Send.SMS\", Title: \"Send SMS\", Id: \"Button.Send.SMS\", ElementId: getUniqID() },\n            { Type: \"Button.Send.Email\", Title: \"Send Email\", Id: \"Button.Send.Email\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", Title: \"View Document\", Id: \"Button.View.Document\", ElementId: getUniqID() }\n          ])\n          break\n        case \"Document.Summary4\":\n          addToNewSection(\"Document Summary\", [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", Id: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", Title: \"Submit to Register\", Id: \"Button.Submit.Register\", ElementId: getUniqID() },\n            { Type: \"Button.Closeout\", Title: \"Close out\", Id: \"Button.Closeout\", ElementId: getUniqID() },\n            { Type: \"Button.Send.SMS\", Title: \"Send SMS\", Id: \"Button.Send.SMS\", ElementId: getUniqID() },\n            { Type: \"Button.Send.Email\", Title: \"Send Email\", Id: \"Button.Send.Email\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", Title: \"View Document\", Id: \"Button.View.Document\", ElementId: getUniqID() },\n          ])\n          break\n        case \"Emailregister\":\n          addToNewSection(elementName, [\n            { Type: \"SearchableListEntryDialogEmail\", Title: \"Select from Project Directory\", Id: \"ContactListEmail\", Api: \"ProjectContacts.Email\", ValidationMessage: \"Permit Holder Required\", AssociatedId: { names: [\"ManualEmailName\", \"ManualEmailEmail\"] }, ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"OR\", ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"Add manually below\", ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Name\", Id: \"ManualEmailName\", Format: {}, ValidationMessage: \"Name Required\", Mandatory: false, AssociatedId: { names: [\"ManualEmailEmail\"] }, ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Email\", Id: \"ManualEmailEmail\", Format: {}, ValidationMessage: \"Number Required and should be 10 characters long\", Mandatory: false, AssociatedId: { names: [\"ManualEmailName\"] }, ElementId: getUniqID() },\n            { Type: \"Button.Add.Email\", Title: \"Add contact manually\", Title2: \"Number\", ElementId: getUniqID() },\n            { Type: \"SearchableEmailListView\", Title: \"Name\", Id: \"NameEmailList\", Title2: \"Number\", Api: \"ProjectContacts\", ElementId: getUniqID() }\n          ])\n          break\n        case \"Smsregister\":\n          addToNewSection(elementName, [\n            { Type: \"SearchableListEntryDialogSMS\", Title: \"Select from Project Directory\", Id: \"ContactListSMS\", ValidationMessage: \"Permit Holder Required\", Api: \"ProjectContacts\", AssociatedId: { names: [\"ManualSMSName\", \"ManualSMSPhone\"] }, ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"OR\", ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"Add manually below\", ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Name\", Id: \"ManualSMSName\", Format: {}, ValidationMessage: \"Name Required\", Mandatory: false, AssociatedId: { names: [\"ManualSMSPhone\"] }, ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Phone No\", Id: \"ManualSMSPhone\", Format: {}, ValidationMessage: \"Number Required and should be 10 characters long\", Mandatory: false, AssociatedId: { names: [\"ManualSMSName\"] }, ElementId: getUniqID() },\n            { Type: \"Button.Add.SMS\", Title: \"Add contact manually\", Title2: \"Number\", ElementId: getUniqID() },\n            { Type: \"SearchableSMSListView\", Title: \"Name\", Title2: \"Number\", Id: \"NameSMSList\", Api: \"ProjectContacts\", ElementId: getUniqID() }\n          ])\n          break\n        case \"QRScanner.List\":\n          addToNewSection(elementName, [\n            // { Type: \"QRScanner.List\", Title: \"QR scanner list\", Id: \"QReSignOnOffScanner\", ElementId: getUniqID() }\n            { Type: \"QRScanner.List\", Title: \"QR scanner list\", EntryTitle: \"Please click to scan QR code\", Id: \"QReSignOnOffScanner\", ElementId: getUniqID() }\n          ])\n          break\n        case \"SignatureSignOnOff\":\n          addToNewSection(elementName, [\n            // addToCurrentSection(elementName, [\n            { Type: \"Text\", Title: \"Name\", Id: \"SignatureSignOnOffName\", Format: {}, ElementId: getUniqID() },\n            { Type: \"Signature\", Title: \"Please sign above the line\", Id: \"SignatureSignOnOffSignature\", ElementId: getUniqID() },\n            { Type: \"Button.Add.Signature\", Title: \"Add Signature\", ElementId: getUniqID() },\n            { Type: \"Register.Signatures\", Title: \"Signatures\", Id: \"SignatureSignOnOff\", ElementId: getUniqID() }\n          ])\n          break\n\n        default:\n          addToCurrentSection(elementName)\n          break\n      }\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Manage sections                       -----*\n  *----------------------------------------------------*/\n\n  function addToCurrentSection(pElement, pChildren) {\n    // console.log(`--->: newElement: addToCurrentSection -> pElement, pChildren`, pElement, pChildren)\n    let newElement\n    if (pElement === \"Matrix\") newElement = getNewElement(pElement, true)\n    else if (pElement === \"Matrix.Button\") newElement = getNewElement(pElement, false, true)\n    else if (pElement === \"Repeatable\") newElement = getNewElement(pElement, false, false, true)\n    else if (pElement === \"SignatureSignOnOff\") newElement = getNewElement(pElement, false, false, false, pChildren)\n    else if (pElement === \"QRScanner.List\") newElement = getNewElement(pElement, false, false, false, pChildren)\n    else newElement = getNewElement(pElement)\n\n    // Special properties\n    if (pElement === \"Trilean.Label\") {\n      initButtonsProperty(newElement)\n      initDefaultValues(newElement)\n    }\n    if (pElement === \"Text\") initFormatProperty(newElement)\n\n    // Add to section\n    if (json.Sections[currentSectionIndex] !== undefined) {\n      let currentElements = json.Sections[currentSectionIndex].Elements\n      currentElements.push(newElement)\n      setJson({ Sections: [...json.Sections] })\n    }\n    else {\n      let currentSection\n      currentSection = getNewSection()\n      currentSection.Elements.push(newElement)\n      setJson({ Sections: [...json.Sections, currentSection] })\n      if (currentSectionIndex > 0) setCurrentSectionIndex(currentSectionIndex + 1)\n    }\n  }\n\n  function addNewSection() {\n    setJson({ Sections: [...json.Sections, getNewSection()] })\n    if (json.Sections.length > 0) setCurrentSectionIndex(json.Sections.length)\n  }\n\n  function addToNewSection(pElement, pChildren) {\n    let newSection = getNewSection(pElement)\n\n    pChildren.forEach(child => newSection.Elements.push(child))\n\n    setJson({ Sections: [...json.Sections, newSection] })\n    if (json.Sections.length > 0) setCurrentSectionIndex(json.Sections.length)\n  }\n\n  // function prependToFirstSection(pElement, pDefaultValues) {\n  //   const newElement = pDefaultValues\n  //   let currentSection = json.Sections[currentSectionIndex]\n\n  //   if (currentSection !== undefined) {\n  //     const firstSection = json.Sections[0].Elements\n  //     firstSection.unshift(newElement)\n\n  //     setJson({ Sections: [...json.Sections] })\n  //     setCurrentSectionIndex(0)\n  //     setSelectedControl(newElement)\n  //   }\n  //   else {\n  //     currentSection = getNewSection()\n  //     currentSection.Elements.unshift(newElement)\n  //     json.Sections.push(currentSection)\n  //     setJson({ Sections: [...json.Sections] })\n  //     setSelectedControl(newElement)\n  //   }\n  // }\n\n  function addAsFirstSection(pElement, pDefaultValues) {\n    const title = pElement === \"Document.TableOfContents\" ? \"Table Of Contents\" : undefined\n    let newSection = getNewSection(title)\n    newSection.Elements.push(pDefaultValues)\n\n    setJson({ Sections: [newSection, ...json.Sections] })\n    setCurrentSectionIndex(0)\n\n    // let currentSection = json.Sections[0]\n  }\n\n  // TODO - REMOVE IDs ON THE DUPLICATED SECTION CONTROLS -----------------------------------------------------//\n  function duplicateSection() {\n\n    if (json.Sections[currentSectionIndex] !== undefined) {\n      // Deep copy\n      let sectionToDuplicate = JSON.parse(JSON.stringify(json.Sections[currentSectionIndex]))\n\n      sectionToDuplicate.SectionId = getUniqID(5)\n      sectionToDuplicate.Title = `${json.Sections[currentSectionIndex].Title}-copy`\n      sectionToDuplicate.Elements.forEach(item => {\n        if (item.ElementId === undefined || item.ElementId.length > 0) item.ElementId = getUniqID(11)\n        if (item.Id !== undefined) item.Id = `${item.Id}-copy`\n        if (item.Elements) {\n          item.Elements.forEach(subitem => {\n            if (subitem.ElementId === undefined || subitem.ElementId.length > 0) subitem.ElementId = getUniqID(11)\n            if (subitem.Id !== undefined) subitem.Id = `${subitem.Id}-copy`\n            if (subitem.Elements) {\n              subitem.Elements.forEach(subsubitem => {\n                if (subsubitem.Id !== undefined) subsubitem.Id = `${subsubitem.Id}-copy`\n                if (subsubitem.ElementId !== undefined) subsubitem.ElementId = getUniqID(11)\n              })\n            }\n\n          })\n        }\n      })\n\n      setJson({ Sections: [...json.Sections.slice(0, currentSectionIndex + 1), sectionToDuplicate, ...json.Sections.slice(currentSectionIndex + 1)] })\n      setCurrentSectionIndex(currentSectionIndex + 1)\n    }\n  }\n\n  function removeSection() {\n    let sections = json.Sections.filter((section, index) => {\n      if (index !== currentSectionIndex) {\n        return true\n      }\n      else {\n        unregisterSectionControls(json.Sections[index])\n        return false\n      }\n    })\n\n    setCurrentSectionIndex(json.Sections.length - 2)\n    setJson({ Sections: [...sections] })\n  }\n\n  function moveSectionLeft() {\n    if (currentSectionIndex > 0) {\n      const reorderedSections = json.Sections\n      reorderedSections.splice(currentSectionIndex, 0, reorderedSections.splice(currentSectionIndex - 1, 1)[0])\n      setCurrentSectionIndex(currentSectionIndex - 1)\n      setJson({ Sections: [...reorderedSections] })\n    }\n  }\n\n  function moveSectionRight() {\n    if (currentSectionIndex + 1 < json.Sections.length) {\n      const reorderedSections = json.Sections\n      reorderedSections.splice(currentSectionIndex, 0, reorderedSections.splice(currentSectionIndex + 1, 1)[0])\n      setCurrentSectionIndex(currentSectionIndex + 1)\n      setJson({ Sections: [...reorderedSections] })\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Utilities                             -----*\n  *----------------------------------------------------*/\n\n  function getNewSection(pTitle) {\n    const title = renameSectionTitle(pTitle)\n    const sectionTitle = title === undefined ? `Section ${json.Sections.length + 1 || 1}` : title\n    return (\n      {\n        SectionId: getUniqID(5),\n        Title: sectionTitle,\n        Elements: []\n      }\n    )\n  }\n\n  function getNewElement(pElement, pIsMatrix, pIsMatrixButton, pIsRepeatable, pChildren) {\n    // Repeatable children length are not known\n    const matrixElementsInit = [{\n      Type: \"GridRow\",\n      // ToDo: generate unique Id\n      ElementId: getUniqID(),\n      Elements: [\n        {}\n      ]\n    }]\n\n    if (pIsMatrix) {\n      return (\n        {\n          Type: pElement,\n          Id: getDefaultID(pElement),\n          ElementId: getUniqID(11),\n          Columns: \"1\",\n          Rows: \"1\",\n          Elements: matrixElementsInit\n        }\n      )\n    }\n    if (pIsMatrixButton) {\n      return (\n        {\n          Type: pElement,\n          Id: getDefaultID(pElement),\n          ElementId: getUniqID(11),\n          Columns: \"1\",\n          Rows: \"1\",\n          Elements: matrixElementsInit,\n          Title: \"\",\n          Selection: \"single\",\n          XAxisName: \"\",\n          YAxisName: \"\",\n          Legend: { ShowLegend: false, LegendValuesX: { Name: '', Values: [] }, LegendValuesY: { Name: '', Values: [] } }\n        }\n      )\n    }\n    if (pIsRepeatable) {\n      return (\n        {\n          Type: pElement,\n          Id: getDefaultID(pElement),\n          ElementId: getUniqID(11),\n          Elements: []\n        }\n      )\n    }\n    else {\n      if (pChildren) {\n        return (\n          {\n            Type: pElement,\n            ElementId: getUniqID(11),\n            Elements: pChildren\n          }\n        )\n      }\n      else if (pElement.includes('Button')) {\n        if (pElement === \"Button.Add.DocketNumber\")\n          return (\n            {\n              Type: pElement,\n              Id: 'Button.Add.DocketNumber',\n              ElementId: getUniqID(11),\n              Title: \"Delivery Docket Number\",\n            }\n          )\n        else return (\n          {\n            Type: pElement,\n            ElementId: getUniqID(11)\n          }\n        )\n      }\n      else {\n        return (\n          {\n            Type: pElement,\n            Id: getDefaultID(pElement),\n            ElementId: getUniqID(11),\n          }\n        )\n      }\n    }\n  }\n\n  function getElementFromElementId(pElementID) {\n    const currentSection = json.Sections[currentSectionIndex]\n    let foundItem = {}\n\n    currentSection.Elements.forEach(item => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach(subitem => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach(subsubitem => {\n              if (subsubitem.ElementId === pElementID) {\n                // console.log('---> Trouvé subsubitem: ', subsubitem)\n                foundItem = subsubitem\n              }\n            })\n\n          }\n\n          if (subitem.ElementId === pElementID) {\n            // console.log('---> Trouvé subitem: ', subitem)\n            foundItem = subitem\n          }\n\n        })\n      }\n\n      if (item.ElementId === pElementID) {\n        // console.log('---> Trouvé item: ', item)\n        foundItem = item\n      }\n\n    })\n    return foundItem\n  }\n\n  function getElementsFromId(pID) {\n    let foundItem = []\n    json.Sections.forEach(section => {\n      section.Elements.forEach(item => {\n        if (item.hasOwnProperty('Elements')) {\n\n          item.Elements.forEach(subitem => {\n            if (subitem.hasOwnProperty('Elements')) {\n\n              subitem.Elements.forEach(subsubitem => {\n                if (subsubitem.Id === pID) {\n                  // console.log('---> Trouvé subsubitem: ', subsubitem)\n                  foundItem.push(subsubitem)\n                }\n              })\n\n            }\n\n            if (subitem.Id === pID) {\n              // console.log('---> Trouvé subitem: ', subitem)\n              foundItem.push(subitem)\n            }\n\n          })\n        }\n\n        if (item.Id === pID) {\n          // console.log('---> Trouvé item: ', item)\n          foundItem.push(item)\n        }\n\n      })\n    })\n\n    return foundItem\n  }\n\n  function getElementsFromType(pType) {\n    let foundItem = []\n    json.Sections.forEach(section => {\n      section.Elements.forEach(item => {\n        if (item.hasOwnProperty('Elements')) {\n\n          item.Elements.forEach(subitem => {\n            if (subitem.hasOwnProperty('Elements')) {\n\n              subitem.Elements.forEach(subsubitem => {\n                if (subsubitem.Type === pType) {\n                  // console.log('---> Trouvé subsubitem: ', subsubitem)\n                  foundItem.push(subsubitem)\n                }\n              })\n\n            }\n\n            if (subitem.Type === pType) {\n              // console.log('---> Trouvé subitem: ', subitem)\n              foundItem.push(subitem)\n            }\n\n          })\n        }\n\n        if (item.Type === pType) {\n          // console.log('---> Trouvé item: ', item)\n          foundItem.push(item)\n        }\n\n      })\n    })\n\n    return foundItem\n  }\n\n  function getCurrentSection() {\n    return json.Sections[currentSectionIndex]\n  }\n\n  function deleteElementFromId(pElementID) {\n    unregisterControlId(pElementID)\n\n    unregisterControlChildrenId(pElementID)\n\n    // console.log('remove this guy: ', getElementFromElementId(pElementID))\n\n    let jsonToUpdate = { ...json }\n    setSelectedControl({ ElementId: 0 })\n\n    const currentSection = jsonToUpdate.Sections[currentSectionIndex]\n\n    currentSection.Elements.forEach((item, index) => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach((subitem, subindex) => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach((subsubitem, subsubindex) => {\n              if (subsubitem.ElementId === pElementID) {\n                // console.log(`--->: deleteElementFromId -> subsubitem`, subsubitem)\n                let elementsToFilter = [...subitem.Elements]\n                const elementsIndex = elementsToFilter.findIndex(subsubitem => subsubitem.ElementId === pElementID)\n                elementsToFilter[elementsIndex] = {}\n                subitem.Elements = elementsToFilter\n              }\n            })\n\n          }\n\n          if (subitem.ElementId === pElementID) {\n            let elementsToFilter = [...item.Elements]\n            // console.log(`--->: deleteElementFromId -> subitem`, subitem)\n\n            elementsToFilter = elementsToFilter.filter(subitem => subitem.ElementId !== pElementID)\n            item.Elements = elementsToFilter\n          }\n\n        })\n      }\n\n      if (item.ElementId === pElementID) {\n        const newElements = currentSection.Elements.filter(item => item.ElementId !== pElementID)\n        currentSection.Elements = newElements\n      }\n\n    })\n\n    setJson(jsonToUpdate)\n\n  }\n\n  function getParentElementFromId(pElementID) {\n    const currentSection = json.Sections[currentSectionIndex]\n    let foundItem = {}\n\n    currentSection.Elements.forEach(item => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach(subitem => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach(subsubitem => {\n              if (subsubitem.ElementId === pElementID) {\n                // console.log('---> Trouvé subsubitem: ', subsubitem)\n                foundItem = subitem\n              }\n            })\n\n          }\n\n          if (subitem.ElementId === pElementID) {\n            // console.log('---> Trouvé subitem: ', subitem)\n            foundItem = item\n          }\n\n        })\n      }\n\n      if (item.ElementId === pElementID) {\n        // console.log('---> Trouvé item: ', item)\n        foundItem = currentSection.Elements\n      }\n\n    })\n    return foundItem\n  }\n\n  function validateId(pID) {\n    if (getElementsFromId(pID).length > 0) setIsValidId(false)\n    else setIsValidId(true)\n  }\n\n  function initButtonsProperty(pElement) {\n    const buttons = [{\n      Button: \"Yes\",\n      Label: \"Yes\",\n      BackgroundColor: \"#D3D3D3\",\n      BackgroundColorSelected: \"#66ff33\"\n    }, {\n      Button: \"No\",\n      Label: \"No\",\n      BackgroundColor: \"#D3D3D3\",\n      BackgroundColorSelected: \"#d63a3a\"\n    }, {\n      Button: \"NA\",\n      Label: \"Not Applicable\",\n      BackgroundColor: \"#D3D3D3\",\n      BackgroundColorSelected: \"#808080\"\n    }]\n    pElement.Buttons = buttons\n  }\n\n  function initFormatProperty(pElement) {\n    pElement.Format = {}\n  }\n  function initDefaultValues(pElement) {\n    if (pElement.Type === \"Trilean.Label\") {\n      pElement.Title = \"comment\"\n      pElement.CommentValue = \"comment written here\"\n    }\n  }\n\n  function registerControlId(pControl) {\n    // console.log('registerControlId: --> [', pControl.Id, '(new value: ', pValue, ')]')\n\n    if (idsCollection[pControl.Type] === undefined) {\n      idsCollection[pControl.Type] = { collection: [] }\n    }\n\n    const idIndex = idsCollection[pControl.Type].collection.findIndex(item => item.ElementId === pControl.ElementId)\n\n    let idObject = { ElementId: pControl.ElementId, Id: pControl.Id }\n    if (idIndex > -1) {\n      // console.log('ID exists at pos: ', idIndex)\n      idsCollection[pControl.Type].collection[idIndex] = idObject\n    }\n    else idsCollection[pControl.Type].collection.push(idObject)\n    // console.log(`--->: registerControlId -> idsCollection: `, idsCollection)\n  }\n\n  function unregisterControlId(pElementId) {\n    // console.log(`--->: unregisterControlId: `, pElementId, ' inside: ', idsCollection)\n\n    let foundItem\n    for (const type in idsCollection) {\n      idsCollection[type].collection.forEach(item => {\n        if (item.ElementId === pElementId) foundItem = item.Id\n      })\n\n      idsCollection[type].collection = idsCollection[type].collection.filter(item => item.ElementId !== pElementId)\n    }\n    // console.log('foundItem: ', foundItem)\n    idsLoadedList.delete(foundItem)\n\n    // console.log(`--->: unregisterControlId -> idsCollection[type].collection`, idsCollection[type].collection)\n  }\n\n  function unregisterControlChildrenId(pElementId) {\n    const element = getElementFromElementId(pElementId)\n\n    if (element.hasOwnProperty('Elements')) {\n\n      element.Elements.forEach(item => {\n        if (item.Id !== undefined) {\n          console.log('unregister child: ', item.Id)\n          unregisterControlId(item.ElementId)\n        }\n\n        if (item.hasOwnProperty('Elements')) {\n\n          item.Elements.forEach((subitem, subindex) => {\n            if (subitem.Id !== undefined) {\n              console.log('unregister subchild: ', subitem.Id)\n              unregisterControlId(subitem.ElementId)\n            }\n          })\n        }\n\n      })\n\n    }\n  }\n\n  function unregisterSectionControls(pSection) {\n\n    // console.log('---> unregister controls: ', pSection.Elements)\n    pSection.Elements.forEach((item, index) => {\n      // console.log(' --> delete id on: ', item.Id)\n      unregisterControlId(item.ElementId)\n      if (item.hasOwnProperty('Elements')) {\n        item.Elements.forEach((subitem, subindex) => {\n          if (subitem.Type !== 'GridRow') {\n            // console.log(' ----> delete subid on: ', subitem.Id)\n            unregisterControlId(subitem.ElementId)\n          }\n          if (subitem.hasOwnProperty('Elements')) {\n            subitem.Elements.forEach((subsubitem, subsubindex) => {\n              // console.log(' ------> delete subsubid on: ', subsubitem.Id)\n              unregisterControlId(subsubitem.ElementId)\n            })\n          }\n        })\n      }\n    })\n\n  }\n\n  function getDefaultID(pType) {\n    // console.log(`--->: getDefaultID -> pType: `, pType)\n    // console.log('idsCollection: ', idsCollection)\n\n    const idPosition = (idsCollection[pType] === undefined) ? 1 : idsCollection[pType].collection.length + 1\n    const positionNumber = idPosition < 10 ? '00' + idPosition : idPosition < 100 ? '0' + idPosition : idPosition\n\n    let prefix\n    if (pType.includes('.')) prefix = `${pType.slice(0, 3).toUpperCase()}.${pType.slice(pType.indexOf('.') + 1, pType.indexOf('.') + 4).toUpperCase()}`\n    else prefix = `${pType.slice(0, 3).toUpperCase()}`\n\n    let newId = `${prefix}-${positionNumber}`\n\n    // Check for duplicates\n    if (Array.from(idsLoadedList).findIndex(item => item === newId) > -1) newId += '-copy'\n\n    // idsCollection[pType].collection.push(newId)\n\n    // setIdList([...idList, newId])\n    // validateId(newId)\n\n    return newId\n  }\n\n\n  function renameSectionTitle(pTitle) {\n    switch (pTitle) {\n      case 'Emailregister':\n        return 'Email Register'\n      case 'Smsregister':\n        return 'SMS Register'\n      default:\n        break\n    }\n  }\n\n  /**--------------------------------------------------**\n   * @desc - Return building Panel                 -----*\n   *----------------------------------------------------*/\n\n  // ---> ENTRY POINT\n  function getHTML() {\n    if (json.Sections.length > 0) {\n\n      // Browse the json to register every Ids\n      json.Sections.forEach(section => {\n        // console.log('section elements: ', section.Title, elements)\n        if (section.hasOwnProperty('Elements')) {\n          section.Elements.forEach((item, index) => {\n            // console.log('item: ', item)\n            if (item.Id !== undefined) registerControlId(item)\n            if (item.hasOwnProperty('Elements')) {\n              item.Elements.forEach((subitem, index) => {\n                // console.log('subitem: ', subitem)\n                if (subitem.Id !== undefined) registerControlId(subitem)\n                if (subitem.hasOwnProperty('Elements')) {\n                  subitem.Elements.forEach((subsubitem, subsubindex) => {\n                    // console.log('subsubitem: ', subsubitem)\n                    if (subsubitem.Id !== undefined) registerControlId(subsubitem)\n                  })\n                }\n              })\n            }\n          })\n        }\n      })\n\n      // Get controls for the active section\n      let currentSectionToRender = json.Sections[currentSectionIndex]\n      if (currentSectionToRender.Elements.length > 0) return currentSectionToRender.Elements.map(item => {\n        // Build list of Ids at load time\n        idsLoadedList.add(item.Id)\n        return getControl(item)\n      })\n    }\n  }\n\n  function getControl(pItem) {\n    let id = pItem.ElementId\n    // registerControlId(pItem)\n\n    if (pItem.DatabaseField === 'ValidFrom') {\n      console.log('DatabaseField FROM found here: ', id)\n      databaseFieldLocation.from = id\n    }\n    if (pItem.DatabaseField === 'ValidTo') {\n      console.log('DatabaseField TO found here: ', id)\n      databaseFieldLocation.to = id\n    }\n    return <Control\n      controlObj={pItem}\n      selectedControl={selectedControl}\n      onClickHandler={(control) => {\n        // Select control from control's child\n        if (control.ElementId) onSelectControlHandler(control)\n        // Select control\n        else onSelectControlHandler(pItem)\n      }}\n      moveUp={(control, pIsSubControl) => moveUpHandler(control, pIsSubControl)}\n      moveDown={(control, pIsSubControl) => moveDownHandler(control, pIsSubControl)}\n      delete={(control) => deleteHandler(control)}\n      key={id} />\n  }\n\n  function onSelectControlHandler(pControl) {\n    // console.log(`--->: pControl selected: `, pControl)\n    setCurrentKeyword('')\n    setSelectedControl(pControl)\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Build the HTML from JSON              -----*\n  *----------------------------------------------------*/\n  function onJsonChangeHandler(e) {\n    let currentValue = JSON.parse(document.getElementById('json-output').value)\n    setJson(currentValue)\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Build the Panels tabs                 -----*\n  *----------------------------------------------------*/\n  let sectionNavigation = () => {\n    if (json.Sections.length > 0) {\n      return json.Sections.map((section, index) => {\n        let sectionTitle = (json.Sections[index] !== undefined) ? json.Sections[index].Title : ''\n        return <button\n          key={index}\n          onClick={() => setCurrentSectionIndex(index)}\n          className={`tab-section ${currentSectionIndex === index ? 'tab-active' : ''}`}\n        >{sectionTitle}</button>\n      })\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Manipulate the JSON                   -----*\n  *----------------------------------------------------*/\n\n  function moveUpHandler(pControl, pIsSubControl) {\n    const parentElement = getParentElementFromId(pControl.ElementId)\n    moveElement(pControl, parentElement, 'moveUp', pIsSubControl)\n\n  }\n  function moveDownHandler(pControl, pIsSubControl) {\n    const parentElement = getParentElementFromId(pControl.ElementId)\n    moveElement(pControl, parentElement, 'moveDown', pIsSubControl)\n  }\n\n  function moveElement(pControl, pParentElement, pDirection, pIsSubControl) {\n    const container = (!pIsSubControl) ? pParentElement : pParentElement.Elements\n\n    const position = container.findIndex(item => item.ElementId === pControl.ElementId)\n    switch (pDirection) {\n      case 'moveUp':\n        if (position > 0) {\n          container.splice(position - 1, 0, container.splice(position, 1)[0])\n        }\n        break\n      case 'moveDown':\n        if (position < container.length - 1) {\n          container.splice(position + 1, 0, container.splice(position, 1)[0])\n        }\n        break\n      default:\n        break\n    }\n    setJson({ ...json })\n  }\n\n  function deleteHandler(pControl) {\n    deleteElementFromId(pControl.ElementId)\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Build the properties Panel            -----*\n  *----------------------------------------------------*/\n\n  function getPropertiesPanel(pSelectedControl) {\n    // console.log(`--->: getPropertiesPanel -> pSelectedControl`, pSelectedControl)\n\n    const basicPropertiesIDs = [\"DocumentSummaryGrid\",\n      \"Register.Signatures\",\n      \"Button.Add.DocketNumber\"\n    ]\n\n    const buttonPropertiesIDs = [\"Button.Submit.Register\",\n      \"Button.View.Document\",\n      \"Button.Closeout\",\n      \"Button.Send.SMS\",\n      \"Button.Send.Email\",\n      \"Button.Add.Signature\",\n      // \"Button.Add.Email\",\n      // \"Button.Add.SMS\",\n      \"Button.Add.ReportDate\"\n    ]\n\n    const signaturePropertiesIDs = [\"Signature\",\n      \"Signature.Date\",\n      \"Signature.DateTime\"\n    ]\n\n    const booleanPropertiesIDs = [\"SingleBoolean\",\n      \"Boolean\"\n    ]\n\n    const imagePropertiesIDs = [\"Image\",\n      \"Image.Single\"\n    ]\n\n    const qrscannerPropertiesIDs = [\"QRScanner\",\n      \"QRScanner.List\"\n    ]\n\n    let keyWordsList = []\n\n    const globalProperties = <>\n      <div className=\"properties-form-row\">\n        <label htmlFor=\"identifier\">ID</label>\n        <input type=\"text\" name=\"identifier\" id=\"identifier\" value={selectedControl.Id || ''} onChange={(e) => setControlID(e)} />\n      </div>\n      <div className=\"properties-form-row\">\n        <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} />\n      </div>\n      <div className=\"properties-form-row\">\n        <label htmlFor=\"isvisible\">Is Visible</label>\n        <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n      </div>\n    </>\n\n    if (pSelectedControl.Type === \"Repeatable\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n      </div>\n    }\n\n    // PANEL FOR SECTION\n    if (pSelectedControl.Type === undefined) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"title\">Title</label>\n          <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} />\n        </div>\n      </div>\n    }\n\n    if (basicPropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n        {globalProperties}\n      </div>\n    }\n\n    if (booleanPropertiesIDs.includes(pSelectedControl.Type)) {\n      const defaultValue = pSelectedControl.Type !== 'SingleBoolean' ? <div className=\"properties-form-row-elements\">\n        <label htmlFor=\"yes\">Yes</label>\n        <input type=\"radio\" name=\"value\" id=\"yes\" value=\"Y\" checked={selectedControl.Value === \"Y\"} onChange={(e) => setControlValue(e)} />\n        <label htmlFor=\"no\">No</label>\n        <input type=\"radio\" name=\"value\" id=\"no\" value=\"N\" checked={selectedControl.Value === \"N\"} onChange={(e) => setControlValue(e)} />\n      </div> :\n        <div className=\"properties-form-row-elements\">\n          <input type=\"checkbox\" name=\"value\" id=\"yes\" value=\"Y\" checked={selectedControl.Value === \"Y\"} onChange={(e) => setControlUniqueValue(e)} />\n          <label htmlFor=\"yes\">Yes</label>\n        </div>\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hasunderLine\">Has UnderLine</label>\n          <input type=\"checkbox\" name=\"hasunderLine\" id=\"hasunderLine\" checked={Boolean(selectedControl.HasUnderLine) || false} onChange={(e) => setControlHasUnderLine(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n            {defaultValue}\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"collapsible\">Details Collapsible</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n            <label htmlFor=\"iscollapsed\">Details Is Collapsed</label>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">Comment Title</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n      </div>\n    }\n\n    if (buttonPropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n        {/* <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} /> */}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isvisible\">IsVisible</label>\n          <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isbuttondisabled\">IsButtonDisabled</label>\n          <input type=\"checkbox\" name=\"isbuttondisabled\" id=\"isbuttondisabled\" checked={Boolean(selectedControl.IsButtonDisabled) || false} onChange={(e) => setControlIsButtonDisabled(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Button.Add.Email\" || pSelectedControl.Type === \"Button.Add.SMS\") {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"title\">Title</label>\n          <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"title2\">Title 2</label>\n          <input type=\"text\" name=\"title2\" id=\"title2\" value={selectedControl.Title2 || ''} onChange={(e) => setControlTitle2(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isvisible\">IsVisible</label>\n          <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isbuttondisabled\">IsButtonDisabled</label>\n          <input type=\"checkbox\" name=\"isbuttondisabled\" id=\"isbuttondisabled\" checked={Boolean(selectedControl.IsButtonDisabled) || false} onChange={(e) => setControlIsButtonDisabled(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Matrix\") {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"identifier\">ID</label>\n          <input type=\"text\" name=\"identifier\" id=\"identifier\" value={selectedControl.Id} onChange={(e) => setControlID(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"columns\">Columns</label>\n          <input type=\"number\" name=\"columns\" id=\"columns\" max=\"10\" min=\"0\" value={selectedControl.Columns || ''} onChange={(e) => setControlColumns(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"rows\">Rows</label>\n          <input type=\"number\" name=\"rows\" id=\"rows\" min=\"0\" value={selectedControl.Rows || ''} onChange={(e) => setControlRows(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isvisible\">IsVisible</label>\n          <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Matrix.Button\") {\n\n      const legendValuesX = []\n      const legendValuesY = []\n\n      for (let i = 0; i < selectedControl.Columns; i++) {\n        const value = selectedControl.Legend.LegendValuesX.Values[i]\n        legendValuesX.push(<input key={i} type=\"text\" name={`legendx-${i}`} id={`legendx-${i}`} placeholder={`Row ${i + 1} legend`} className=\"properties-form-row-legend\" defaultValue={i < selectedControl.Columns ? value : ''} onChange={(e) => setControlLegendValuesX(e, i)}></input>)\n      }\n\n      for (let j = 0; j < selectedControl.Rows; j++) {\n        const value = selectedControl.Legend.LegendValuesY.Values[j]\n        legendValuesY.push(<input key={j} type=\"text\" name={`legendy-${j}`} id={`legendy-${j}`} placeholder={`Col ${j + 1} legend`} className=\"properties-form-row-legend\" defaultValue={j < selectedControl.Rows ? value : ''} onChange={(e) => setControlLegendValuesY(e, j)}></input>)\n      }\n\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"identifier\">ID</label>\n          <input type=\"text\" name=\"identifier\" id=\"identifier\" value={selectedControl.Id} onChange={(e) => setControlID(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"title\">Title</label>\n          <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"columns\">Columns</label>\n          <input type=\"number\" name=\"columns\" id=\"columns\" max=\"10\" min=\"0\" value={selectedControl.Columns || ''} onChange={(e) => setControlColumnsLegend(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"rows\">Rows</label>\n          <input type=\"number\" name=\"rows\" id=\"rows\" min=\"0\" value={selectedControl.Rows || ''} onChange={(e) => setControlRowsLegend(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"xaxisname\">X Axis Name</label>\n          <input type=\"text\" name=\"xaxisname\" id=\"xaxisname\" value={selectedControl.XAxisName || ''} onChange={(e) => setControlXAxisName(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"yaxisname\">Y Axis Name</label>\n          <input type=\"text\" name=\"yaxisname\" id=\"yaxisname\" value={selectedControl.YAxisName || ''} onChange={(e) => setControlYAxisName(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"selection\">Selection</label>\n          <select name=\"selection\" id=\"selection\" value={selectedControl.Selection || 0} onChange={(e) => setControlSelection(e)}>\n            <option value=\"single\">Single</option>\n            <option value=\"multiple\">Multiple</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isvisible\">IsVisible</label>\n          <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showlegend\">Show Legend</label>\n          <input type=\"checkbox\" name=\"showlegend\" id=\"showlegend\" checked={Boolean(selectedControl.Legend.ShowLegend) || false} onChange={(e) => setControlShowLegend(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <hr />\n          <h3>Legend Values X</h3>\n        </div>\n        <div className=\"properties-form-row\">\n          {legendValuesX}\n        </div>\n        <div className=\"properties-form-row\">\n          <hr />\n          <h3>Legend Values Y</h3>\n        </div>\n        <div className=\"properties-form-row\">\n          {legendValuesY}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"M.Button\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolor\">Background Color</label>\n          <input type=\"color\" name=\"bgcolor\" id=\"bgcolor\" value={selectedControl.BackgroundColor || ''} onChange={(e) => setControlMatrixBackgroundColor(e)} />\n          <input type=\"text\" name=\"\" id=\"\" className=\"input-hexa\" value={selectedControl.BackgroundColor || ''} onChange={(e) => setControlMatrixBackgroundColor(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolorselected\">Background Color Selected</label>\n          <input type=\"color\" name=\"bgcolorselected\" id=\"bgcolorselected\" value={selectedControl.BackgroundColorSelected || ''} onChange={(e) => setControlMatrixBackgroundColorSelected(e)} />\n          <input type=\"text\" name=\"\" id=\"\" className=\"input-hexa\" value={selectedControl.BackgroundColorSelected || ''} onChange={(e) => setControlMatrixBackgroundColorSelected(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Document.TableOfContents\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"API\") {\n      if (selectedControl.Keywords !== undefined) {\n        keyWordsList = selectedControl.Keywords.Keys.map((keyword, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{keyword}</div>\n            <div onClick={() => deleteKeyword(keyword)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <select name=\"api\" id=\"api\" value={selectedControl.Api || 0} onChange={(e) => setControlApi(e)}>\n            <option value=\"Select an Api\">Select an Api</option>\n            <option value=\"ProjectContacts\">- Project Contacts</option>\n            <option value=\"GlobalContacts\">- Global Contacts</option>\n            <option value=\"ProjectCompany\">- Project Company</option>\n            <option value=\"ABS\">- ABS</option>\n            <option value=\"CBS\">- CBS</option>\n            <option value=\"DBS\">- DBS</option>\n            <option value=\"FBS\">- FBS</option>\n            <option value=\"TBS\">- TBS</option>\n            <option value=\"PBS\">- PBS</option>\n            <option value=\"PCBS\">- PCBS</option>\n            <option value=\"WBS\">- WBS</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\" && selectedControl.Api !== \"GlobalContacts\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includephonenumber\">Include Phone Number</label>\n            <input type=\"checkbox\" name=\"includephonenumber\" id=\"includephonenumber\" checked={Boolean(selectedControl.IncludePhoneNumber) || false} onChange={(e) => setControlIncludePhoneNumber(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\" && selectedControl.Api !== \"GlobalContacts\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includeemail\">Include Email</label>\n            <input type=\"checkbox\" name=\"includeemail\" id=\"includeemail\" checked={Boolean(selectedControl.IncludeEmail) || false} onChange={(e) => setControlIncludeEmail(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectCompany\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includetitle\">Include Title</label>\n            <input type=\"checkbox\" name=\"includetitle\" id=\"includetitle\" checked={Boolean(selectedControl.IncludeTitle) || false} onChange={(e) => setControlIncludeTitle(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectCompany\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includebusinessnumber\">Include Business Number</label>\n            <input type=\"checkbox\" name=\"includebusinessnumber\" id=\"includebusinessnumber\" checked={Boolean(selectedControl.IncludeBusinessNumber) || false} onChange={(e) => setControlIncludeBusinessNumber(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectCompany\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includeabbreviation\">Include Abbreviation</label>\n            <input type=\"checkbox\" name=\"includeabbreviation\" id=\"includeabbreviation\" checked={Boolean(selectedControl.IncludeAbbreviation) || false} onChange={(e) => setControlIncludeAbbreviation(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\" && selectedControl.Api !== \"ProjectCompany\" && selectedControl.Api !== \"GlobalContacts\") ? '' : 'hidden'}`}>\n            <label htmlFor=\"includetitle\">Include Title</label>\n            <input type=\"checkbox\" name=\"includetitle\" id=\"includetitle\" checked={Boolean(selectedControl.IncludeTitle) || false} onChange={(e) => setControlIncludeTitle(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\" && selectedControl.Api !== \"ProjectCompany\" && selectedControl.Api !== \"GlobalContacts\") ? '' : 'hidden'}`}>\n            <label htmlFor=\"includecode\">Include Code</label>\n            <input type=\"checkbox\" name=\"includecode\" id=\"includecode\" checked={Boolean(selectedControl.IncludeCode) || false} onChange={(e) => setControlIncludeCode(e)} />\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"keywords\">Voice Keywords</label>\n          <div className=\"properties-form-row-container\">\n            <div>\n              <input type=\"text\" name=\"keywords\" id=\"keywords\" value={currentKeyword || ''} onChange={(e) => setCurrentKeyword(e.target.value)} />\n            </div>\n            <div>\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlKeywords()}>Add</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {keyWordsList}\n        </div>\n        <div className={`properties-form-row ${(selectedControl.Api !== \"ProjectCompany\") ? 'hidden' : ''}`}>\n          <label htmlFor=\"includedocket\">Set Docket Number</label>\n          <input type=\"checkbox\" name=\"includedocket\" id=\"includedocket\" checked={Boolean(selectedControl.DocketID !== undefined)} onChange={(e) => isDocketNumberButton().length ? setApiDocketNumber(e) : setIsModalDocketVisible(!isModalDocketVisible)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"SearchableSMSListView\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <input type=\"text\" name=\"api\" id=\"api\" value={selectedControl.Api || ''} onChange={(e) => setControlApiValue(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"SearchableEmailListView\" || pSelectedControl.Type === \"SearchableSMSListView\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"title2\">Title 2</label>\n          <input type=\"text\" name=\"title2\" id=\"title2\" value={selectedControl.Title2 || ''} onChange={(e) => setControlTitle2(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <input type=\"text\" name=\"api\" id=\"api\" value={selectedControl.Api || ''} onChange={(e) => setControlApiValue(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"SearchableListEntryDialogEmail\") {\n\n      let associatedIds\n      if (selectedControl.AssociatedId !== undefined) {\n        associatedIds = selectedControl.AssociatedId.names.map((id, index) => {\n          return <div className=\"properties-form-row-container key©-row\" key={index}>\n            <div>{id}</div>\n            <div onClick={() => deleteIdValue(id)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      let idsList = idList.map((id, index) => {\n        return <option value={id} key={id}>{id}</option>\n      })\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <input type=\"text\" name=\"api\" id=\"api\" value={selectedControl.Api || ''} onChange={(e) => setControlApiValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Associated Id</label>\n          <div className=\"properties-form-row-container\">\n            <select name=\"defaultvalue\" id=\"defaultvalue\" value={0} onChange={(e) => setControlAssociatedId(e)}>\n              <option value=\"\" key=\"none\">Select Dependancy</option>\n              {idsList}\n            </select>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {associatedIds}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"SearchableListEntryDialogSMS\") {\n\n      let associatedIds\n      if (selectedControl.AssociatedId !== undefined) {\n        associatedIds = selectedControl.AssociatedId.names.map((id, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{id}</div>\n            <div onClick={() => deleteIdValue(id)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      let idsList = idList.map((id, index) => {\n        return <option value={id} key={id}>{id}</option>\n      })\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <input type=\"text\" name=\"api\" id=\"api\" value={selectedControl.Api || ''} onChange={(e) => setControlApiValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Associated Id</label>\n          <div className=\"properties-form-row-container\">\n            <select name=\"defaultvalue\" id=\"defaultvalue\" value={0} onChange={(e) => setControlAssociatedId(e)}>\n              <option value=\"\" key=\"none\">Select Dependancy</option>\n              {idsList}\n            </select>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {associatedIds}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Checkbox\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n            <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">True</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"Y\" checked={selectedControl.Value === \"Y\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">False</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"N\" checked={selectedControl.Value === \"N\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">Comment Title</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hasunderLine\">Has UnderLine</label>\n          <input type=\"checkbox\" name=\"hasunderLine\" id=\"hasunderLine\" checked={Boolean(selectedControl.HasUnderLine) || false} onChange={(e) => setControlHasUnderLine(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"collapsible\">Details Collapsible</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n            <label htmlFor=\"iscollapsed\">Details Is Collapsed</label>\n          </div>\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"List.Multicontrol\") {\n      let dataList = []\n      if (selectedControl.Data !== undefined) {\n        dataList = selectedControl.Data.map((data, index) => {\n          let selectedIds = []\n          let optionedControlIndex\n\n          if (selectedControl.OptionedControls !== undefined) {\n            // console.log('OptionedControls existing: ', selectedControl.OptionedControls)\n            optionedControlIndex = selectedControl.OptionedControls.findIndex(item => item.SelectedString === data)\n            if (optionedControlIndex > -1) selectedIds = selectedControl.OptionedControls[optionedControlIndex].Controls\n          }\n          return <div key={index}>\n            <div id={index} className=\"properties-form-row-container keyword-row\" onClick={(e) => keywordClickHandler(e)}>\n              <div>{data}</div>\n              <div onClick={() => deleteData(data)}><FontAwesomeIcon\n                icon={faTrashAlt}\n                title=\"Remove\"\n              /></div>\n            </div>\n            <div id={`options-${index}`} className='properties-form-row keywords-container'>\n              <SelectSearchable items={Array.from(idsLoadedList).filter(item => item !== selectedControl.Id)} selectedItems={selectedIds} onSelectItem={(pItems) => setControlOptionedControls(pItems, data)} />\n\n              {/* <div id={`options-${index}`} className={`properties-form-row keywords-container ${index === selectedListDataIndex ? 'keywords-open' : ''}`}>\n            <div className=\"keywords-content\">\n                {selectedIds.map((item, index) => <div className=\"keyword-selected\" key={index}>{item}</div>)}\n              </div>\n              <div className=\"keywords-panel\">\n                {Array.from(idsLoadedList).map((item, index) => <div className=\"keyword-toggle\" key={index}>\n                  {item}\n                  <input type=\"checkbox\" id={item} onChange={(e) => setControlOptionedControls(e, data)}></input></div>)}\n              </div> */}\n\n            </div>\n          </div>\n        })\n      }\n      else selectedControl.Data = []\n\n      function keywordClickHandler(pEvent) {\n        const keywordId = Number(pEvent.target.id)\n        setSelectedListDataIndex(keywordId)\n        // console.log(`--->: keyword id: ${keywordId} list of IDs: `, idsLoadedList)\n      }\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        {/* <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n          <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"Y\" checked={selectedControl.Value === \"Y\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"N\" checked={selectedControl.Value === \"N\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div> */}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"data\">Data</label>\n          <div className=\"properties-form-row-container\">\n            <form action=\"#\" onSubmit={() => setControlData()}>\n              <input type=\"text\" name=\"data\" id=\"data\" value={currentData || ''} onChange={(e) => setCurrentData(e.target.value)} />\n              <button className=\"btn btn-primary no-margin\">Add</button>\n            </form>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {dataList}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"List.Single\") {\n      let dataList = []\n      if (selectedControl.Data !== undefined) {\n        dataList = selectedControl.Data.map((data, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{data}</div>\n            <div onClick={() => deleteData(data)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      else selectedControl.Data = []\n\n      const defaultValueList = selectedControl.Data.map((data, index) => <option value={data} key={index}>{data}</option>)\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n            <select name=\"defaultvalue\" id=\"defaultvalue\" value={selectedControl.Value || 0} onChange={(e) => setControlValue(e)}>\n              <option value=\"\" key=\"none\">---</option>\n              {defaultValueList}\n            </select>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"data\">Data</label>\n          <div className=\"properties-form-row-container\">\n            <input type=\"text\" name=\"data\" id=\"data\" value={currentData || ''} onChange={(e) => setCurrentData(e.target.value)} />\n            <button className=\"btn btn-primary no-margin\" onClick={() => setControlData()}>Add</button>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {dataList}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"List.Multiple\") {\n      let dataList = []\n      if (selectedControl.Data !== undefined) {\n        dataList = selectedControl.Data.map((data, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{data}</div>\n            <div onClick={() => deleteData(data)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      else selectedControl.Data = []\n\n      const defaultValueList = selectedControl.Data.map((data, index) => <option value={data} key={index}>{data}</option>)\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n            <select name=\"defaultvalue\" id=\"defaultvalue\" value={currentSelectedValue || ''} onChange={(e) => setControlSelectedValue(e)}>\n              <option value=\"\" key=\"none\">---</option>\n              {defaultValueList}\n            </select>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"data\">Data</label>\n          <div className=\"properties-form-row-container\">\n            <input type=\"text\" name=\"data\" id=\"data\" value={currentData || ''} onChange={(e) => setCurrentData(e.target.value)} />\n            <button className=\"btn btn-primary no-margin\" onClick={() => setControlData()}>Add</button>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {dataList}\n        </div>\n      </div>\n    }\n\n    if (imagePropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"size\">Size</label>\n          <select name=\"size\" id=\"size\" value={selectedControl.Size || 0} onChange={(e) => setControlSize(e)}>\n            <option value=\"\"></option>\n            <option value=\"Thumbnail\">Thumbnail</option>\n            <option value=\"Small\">Small</option>\n            <option value=\"Medium\">Medium</option>\n            <option value=\"Large\">Large</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"galleryextrack\">GalleryExtrack</label>\n          <input type=\"checkbox\" name=\"galleryextrack\" id=\"galleryextrack\" checked={Boolean(selectedControl.GalleryExtrack) || false} onChange={(e) => setControlGalleryExtrack(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"galleryphone\">GalleryPhone</label>\n          <input type=\"checkbox\" name=\"galleryphone\" id=\"galleryphone\" checked={Boolean(selectedControl.GalleryPhone) || false} onChange={(e) => setControlGalleryPhone(e)} />\n        </div>\n      </div>\n    }\n\n    // QRScanner.List is a control itself...\n    if (qrscannerPropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Label\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"fontsize\">Font Size</label>\n          <input type=\"number\" name=\"fontsize\" id=\"fontsize\" value={selectedControl.FontSize || 0} onChange={(e) => setControlFontSize(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"margin\">Margin</label>\n          <input type=\"number\" name=\"margin\" id=\"margin\" value={selectedControl.Margin || 0} onChange={(e) => setControlMargin(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"fontattribute\">Font Attributes</label>\n          <select name=\"fontattribute\" id=\"fontattribute\" value={selectedControl.FontAttributes || 0} onChange={(e) => setControlFontAttributes(e)}>\n            <option value=\"\"></option>\n            <option value=\"Bold\">Bold</option>\n            <option value=\"Italic\">Italic</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hasunderLine\">Has UnderLine</label>\n          <input type=\"checkbox\" name=\"hasunderLine\" id=\"hasunderLine\" checked={Boolean(selectedControl.HasUnderLine) || false} onChange={(e) => setControlHasUnderLine(e)} />\n        </div>\n      </div>\n    }\n    if (pSelectedControl.Type === \"Text\") {\n      if (selectedControl.Keywords !== undefined) {\n        keyWordsList = selectedControl.Keywords.Keys.map((keyword, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{keyword}</div>\n            <div onClick={() => deleteKeyword(keyword)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n\n      let keyboardOptions\n\n      const kbVarChar = selectedControl.Format !== undefined ? <div className=\"properties-form-row\">\n        <label htmlFor=\"varchar\">Restricted Number of Character</label>\n        <input type=\"number\" name=\"varchar\" id=\"varchar\" value={selectedControl.Format.VarChar || 0} onChange={(e) => setControlVarChar(e)} />\n      </div> : ''\n\n      const kbLines = selectedControl.Format !== undefined ? <div className=\"properties-form-row\">\n        <label htmlFor=\"lines\">Lines to Display</label>\n        <input type=\"number\" name=\"lines\" id=\"lines\" value={selectedControl.Format.Lines || 0} onChange={(e) => setControlLines(e)} />\n      </div> : ''\n\n      const kbDecimal = selectedControl.Format !== undefined ? <div className=\"properties-form-row\">\n        <label htmlFor=\"lines\">Decimal</label>\n        <input type=\"number\" name=\"lines\" id=\"lines\" value={selectedControl.Format.Decimal || 0} onChange={(e) => setControlDecimal(e)} />\n      </div> : ''\n\n      const kbMin = selectedControl.Format !== undefined ? <div className=\"properties-form-row\">\n        <label htmlFor=\"lines\">Minimum</label>\n        <input type=\"number\" name=\"lines\" id=\"lines\" value={selectedControl.Format.Min || 0} onChange={(e) => setControlMin(e)} />\n      </div> : ''\n\n      const kbMax = selectedControl.Format !== undefined ? <div className=\"properties-form-row\">\n        <label htmlFor=\"maximum\">maximum</label>\n        <input type=\"number\" name=\"maximum\" id=\"maximum\" value={selectedControl.Format.Max || 0} onChange={(e) => setControlMax(e)} />\n      </div> : ''\n\n\n      if (selectedControl.Format === undefined) selectedControl.Format = {}\n      else {\n        switch (selectedControl.Format.Keyboard) {\n          case 'Chat':\n          case 'Default':\n          case 'Plain':\n          case 'Text':\n            keyboardOptions = <>{kbVarChar} {kbLines}</>\n            break\n          case 'Numeric':\n            keyboardOptions = <>{kbVarChar} {kbLines} {kbDecimal} {kbMin} {kbMax}</>\n            break\n          case 'Email':\n          case 'Telephone':\n          case 'Url':\n            keyboardOptions = <></>\n            break\n          default:\n            break\n        }\n      }\n\n      const docketValue = (selectedControl.DocketID !== undefined) ? selectedControl.DocketID.includes('Docket') ? 'DocketNumber' : 'Text' : ''\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"value\">Value</label>\n          <input type=\"text\" name=\"value\" id=\"value\" value={selectedControl.Value || ''} onChange={(e) => setControlValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isenabled\">Read Only</label>\n          <input type=\"checkbox\" name=\"isenabled\" id=\"isenabled\" checked={selectedControl.IsEnabled !== undefined ? Boolean(!selectedControl.IsEnabled) : false} onChange={(e) => setControlIsEnabled(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"warningmessage\">Warning Message</label>\n          <input type=\"text\" name=\"warningmessage\" id=\"warningmessage\" value={selectedControl.WarningMessage || ''} disabled={Boolean(!selectedControl.Warning) || false} onChange={(e) => setControlWarningMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"warningvalue\">Warning</label>\n          <input type=\"checkbox\" name=\"warningvalue\" id=\"warningvalue\" checked={Boolean(selectedControl.Warning) || false} onChange={(e) => setControlWarning(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <hr />\n          <h3>Format</h3>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"keyboard\">Keyboard</label>\n          <select name=\"keyboard\" id=\"keyboard\" value={selectedControl.Format.Keyboard || 0} onChange={(e) => setControlKeyboard(e)}>\n            <option value=\"\"></option>\n            <option value=\"Chat\">Chat</option>\n            <option value=\"Default\">Default</option>\n            <option value=\"Email\">Email</option>\n            <option value=\"Numeric\">Numeric</option>\n            <option value=\"Plain\">Plain</option>\n            <option value=\"Telephone\">Telephone</option>\n            <option value=\"Text\">Text</option>\n            <option value=\"Url\">Url</option>\n          </select>\n        </div>\n\n        {keyboardOptions}\n        {/* <div className=\"properties-form-row\">\n          <label htmlFor=\"varchar\">Restricted Number of Character</label>\n          <input type=\"number\" name=\"varchar\" id=\"varchar\" value={selectedControl.Format.VarChar || 0} onChange={(e) => setControlVarChar(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"lines\">Lines to Display</label>\n          <input type=\"number\" name=\"lines\" id=\"lines\" value={selectedControl.Format.Lines || 0} onChange={(e) => setControlLines(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"lines\">Decimal</label>\n          <input type=\"number\" name=\"lines\" id=\"lines\" value={selectedControl.Format.Decimal || 0} onChange={(e) => setControlDecimal(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"lines\">Minimum</label>\n          <input type=\"number\" name=\"lines\" id=\"lines\" value={selectedControl.Format.Min || 0} onChange={(e) => setControlMin(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"maximum\">maximum</label>\n          <input type=\"number\" name=\"maximum\" id=\"maximum\" value={selectedControl.Format.Max || 0} onChange={(e) => setControlMax(e)} />\n        </div> */}\n\n\n        <div className=\"properties-form-row\">\n          <hr />\n          <label htmlFor=\"keywords\">Voice Keywords</label>\n          <div className=\"properties-form-row-container\">\n            <div>\n              <input type=\"text\" name=\"keywords\" id=\"keywords\" value={currentKeyword || ''} onChange={(e) => setCurrentKeyword(e.target.value)} />\n            </div>\n            <div>\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlKeywords()}>Add</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {keyWordsList}\n        </div>\n\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"includedocket\">Set Docket Number</label>\n          <select name=\"docket\" id=\"docket\" value={docketValue} onChange={(e) => isDocketNumberButton().length ? setTextDocketNumber(e) : setIsModalDocketVisible(!isModalDocketVisible)} >\n            <option value=\"\">---</option>\n            <option value=\"DocketNumber\">DocketNumber</option>\n            <option value=\"Text\">Text</option>\n          </select>\n        </div>\n\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Trilean\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hasunderLine\">Has UnderLine</label>\n          <input type=\"checkbox\" name=\"hasunderLine\" id=\"hasunderLine\" checked={Boolean(selectedControl.HasUnderLine) || false} onChange={(e) => setControlHasUnderLine(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"collapsible\">Details Collapsible</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n            <label htmlFor=\"iscollapsed\">Details Is Collapsed</label>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n            <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"Y\" checked={selectedControl.Value === \"Y\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"N\" checked={selectedControl.Value === \"N\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"na\">Na</label>\n              <input type=\"radio\" name=\"value\" id=\"na\" value=\"NA\" checked={selectedControl.Value === \"NA\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hidena\">Hide N/A</label>\n          <input type=\"checkbox\" name=\"hidena\" id=\"hidena\" checked={Boolean(selectedControl.HideNA) || false} onChange={(e) => setControlHideNA(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">Comment Title</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Trilean.Label\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hasunderLine\">Has UnderLine</label>\n          <input type=\"checkbox\" name=\"hasunderLine\" id=\"hasunderLine\" checked={Boolean(selectedControl.HasUnderLine) || false} onChange={(e) => setControlHasUnderLine(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <hr />\n          <h3>Button Yes</h3>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"buttonyeslabel\">Label</label>\n          <input type=\"text\" name=\"buttonyeslabel\" id=\"buttonyeslabel\" value={selectedControl.Buttons[0].Label || ''} onChange={(e) => setControlButtonLabel(e, 0)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolor\">Background Color</label>\n          <input type=\"color\" name=\"bgcolor\" id=\"bgcolor\" value={selectedControl.Buttons[0].BackgroundColor || ''} onChange={(e) => setControlBackgroundColor(e, 0)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolorselected\">Background Color Selected</label>\n          <input type=\"color\" name=\"bgcolorselected\" id=\"bgcolorselected\" value={selectedControl.Buttons[0].BackgroundColorSelected || ''} onChange={(e) => setControlBackgroundColorSelected(e, 0)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <hr />\n          <h3>Button No</h3>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"buttonyeslabel\">Label</label>\n          <input type=\"text\" name=\"buttonyeslabel\" id=\"buttonyeslabel\" value={selectedControl.Buttons[1].Label || ''} onChange={(e) => setControlButtonLabel(e, 1)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolor\">Background Color</label>\n          <input type=\"color\" name=\"bgcolor\" id=\"bgcolor\" value={selectedControl.Buttons[1].BackgroundColor || ''} onChange={(e) => setControlBackgroundColor(e, 1)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolorselected\">Background Color Selected</label>\n          <input type=\"color\" name=\"bgcolorselected\" id=\"bgcolorselected\" value={selectedControl.Buttons[1].BackgroundColorSelected || ''} onChange={(e) => setControlBackgroundColorSelected(e, 1)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <hr />\n          <h3>Button NA</h3>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"buttonyeslabel\">Label</label>\n          <input type=\"text\" name=\"buttonyeslabel\" id=\"buttonyeslabel\" value={selectedControl.Buttons[2].Label || ''} onChange={(e) => setControlButtonLabel(e, 2)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolor\">Background Color</label>\n          <input type=\"color\" name=\"bgcolor\" id=\"bgcolor\" value={selectedControl.Buttons[2].BackgroundColor || ''} onChange={(e) => setControlBackgroundColor(e, 2)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolorselected\">Background Color Selected</label>\n          <input type=\"color\" name=\"bgcolorselected\" id=\"bgcolorselected\" value={selectedControl.Buttons[2].BackgroundColorSelected || ''} onChange={(e) => setControlBackgroundColorSelected(e, 2)} />\n        </div>\n\n        <div className=\"properties-form-row\">\n          <hr />\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"collapsible\">Details Collapsible</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n            <label htmlFor=\"iscollapsed\">Details Is Collapsed</label>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n            <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"Y\" checked={selectedControl.Value === \"Y\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"N\" checked={selectedControl.Value === \"N\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"na\">Na</label>\n              <input type=\"radio\" name=\"value\" id=\"na\" value=\"NA\" checked={selectedControl.Value === \"NA\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hidena\">Hide N/A</label>\n          <input type=\"checkbox\" name=\"hidena\" id=\"hidena\" checked={Boolean(selectedControl.HideNA) || false} onChange={(e) => setControlHideNA(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">Comment Title</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n      </div>\n    }\n\n    if (signaturePropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">ValidationMessage</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Date\") {\n\n      // console.log('pSelectedControl: ', pSelectedControl)\n      // if (pSelectedControl.DatabaseField) setIsDatabaseFieldSet(true)\n      console.log('databaseFieldLocation: ', databaseFieldLocation)\n\n      // (databaseFieldLocation.from !== pSelectedControl.ElementId && databaseFieldLocation.from !== '')\n\n      const databasefieldFrom = (databaseFieldLocation.from === '' || databaseFieldLocation.from === pSelectedControl.ElementId) ? <div>\n        <label htmlFor=\"validfrom\">Valid From</label><br />\n        <input type=\"checkbox\" name=\"validfrom\" id=\"validfrom\" checked={Boolean(pSelectedControl.DatabaseField === 'ValidFrom') || false} onChange={(e) => setControlValidFrom(e)} />\n      </div> : <div>\n          Valid From<br />\n          <div className=\"properties-infomsg\"> has already been set</div>\n        </div>\n\n      const databasefieldTo = (databaseFieldLocation.to === '' || databaseFieldLocation.to === pSelectedControl.ElementId) ? <div>\n        <label htmlFor=\"validto\">Valid To</label><br />\n        <input type=\"checkbox\" name=\"validto\" id=\"validto\" checked={Boolean(pSelectedControl.DatabaseField === 'ValidTo') || false} onChange={(e) => setControlValidTo(e)} />\n      </div> : <div>\n          Valid To<br />\n          <div className=\"properties-infomsg\"> has already been set</div>\n        </div>\n\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Day</label>\n          <input type=\"number\" name=\"Addday\" id=\"addday\" value={selectedControl.AddDay || 0} onChange={(e) => setControlAddDay(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Month</label>\n          <input type=\"number\" name=\"addmonth\" id=\"addmonth\" value={selectedControl.AddMonth || 0} onChange={(e) => setControlAddMonth(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"datevalue\">Date Value</label>\n          <input type=\"date\" name=\"datevalue\" id=\"datevalue\" value={selectedControl.DateValue || ''} onChange={(e) => setControlDateValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isBlank\">Is Blank</label>\n          <input type=\"checkbox\" name=\"isBlank\" id=\"isBlank\" checked={Boolean(selectedControl.IsBlank) || false} onChange={(e) => setControlDateIsBlank(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"formatdatetime\">Format DateTime</label>\n          <select name=\"formatdatetime\" id=\"formatdatetime\" value={selectedControl.FormatDateTime || 0} onChange={(e) => setControlFormatDateTime(e)}>\n            <option value=\"\"></option>\n            <option value=\"yyyy-MM-dd\">yyyy-MM-dd</option>\n            <option value=\"yyyy-MM-dd, ddd\">yyyy-MM-dd, ddd</option>\n            <option value=\"yyyy-MMM-dd\">yyyy-MMM-dd</option>\n            <option value=\"yyyy-MMM-dd, ddd\">yyyy-MMM-dd, ddd</option>\n            <option value=\"dd-MM-yyyy\">dd-MM-yyyy</option>\n            <option value=\"ddd, dd-MM-yyyy\">ddd, dd-MM-yyyy</option>\n            <option value=\"dd-MMM-yyyy\">dd-MMM-yyyy</option>\n            <option value=\"ddd, dd-MMM-yyyy\">ddd, dd-MMM-yyyy</option>\n            <option value=\"yy-MM-dd\">yy-MM-dd</option>\n            <option value=\"yy-MM-dd, ddd\">yy-MM-dd, ddd</option>\n            <option value=\"yy-MMM-dd\">yy-MMM-dd</option>\n            <option value=\"yy-MMM-dd, ddd\">yy-MMM-dd, ddd</option>\n            <option value=\"dd-MM-yy\">dd-MM-yy</option>\n            <option value=\"ddd, dd-MM-yy\">ddd, dd-MM-yy</option>\n            <option value=\"dd-MMM-yy\">dd-MMM-yy</option>\n            <option value=\"ddd, dd-MMM-yy\">ddd, dd-MMM-yy</option>\n            <option value=\"MMM-dd\">MMM-dd</option>\n            <option value=\"MMM-dd, ddd\">MMM-dd, ddd</option>\n            <option value=\"dd-MMM\">dd-MMM</option>\n            <option value=\"ddd, dd-MMM\">ddd, dd-MMM</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"islabelvisible\">Is Label Visible</label>\n          <input type=\"checkbox\" name=\"islabelvisible\" id=\"islabelvisible\" checked={Boolean(selectedControl.IsLabelVisible) || false} onChange={(e) => setControlIsLabelVisible(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <hr />\n          <h3>Database Field</h3>\n        </div>\n        {databasefieldFrom}<br />\n        {databasefieldTo}\n      </div>\n    }\n    if (pSelectedControl.Type === \"Time\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Hour</label>\n          <input type=\"number\" name=\"addhour\" id=\"addhour\" value={selectedControl.AddHour || 0} onChange={(e) => setControlAddHour(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"timevalue\">Time Value</label>\n          <input type=\"time\" name=\"timevalue\" id=\"timevalue\" value={selectedControl.TimeValue || ''} onChange={(e) => setControlTimeValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isBlank\">Is Blank</label>\n          <input type=\"checkbox\" name=\"isBlank\" id=\"isBlank\" checked={Boolean(selectedControl.IsBlank) || false} onChange={(e) => setControlTimeIsBlank(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"formatdatetime\">Format DateTime</label>\n          <select name=\"formatdatetime\" id=\"formatdatetime\" value={selectedControl.FormatDateTime || 0} onChange={(e) => setControlFormatDateTime(e)}>\n            <option value=\"\"></option>\n            <option value=\"hh:mm tt\">hh:mm tt</option>\n            <option value=\"HH:mm\">HH:mm</option>\n            <option value=\"HH:mm:ss\">HH:mm:ss</option>\n            <option value=\"hh:mm:ss tt\">hh:mm:ss tt</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"islabelvisible\">Is Label Visible</label>\n          <input type=\"checkbox\" name=\"islabelvisible\" id=\"islabelvisible\" checked={Boolean(selectedControl.IsLabelVisible) || false} onChange={(e) => setControlIsLabelVisible(e)} />\n        </div>\n      </div>\n    }\n    if (pSelectedControl.Type === \"DateTime\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Hour</label>\n          <input type=\"number\" name=\"addhour\" id=\"addhour\" value={selectedControl.AddHour || 0} onChange={(e) => setControlAddHour(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Day</label>\n          <input type=\"number\" name=\"Addday\" id=\"addday\" value={selectedControl.AddDay || 0} onChange={(e) => setControlAddDay(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Month</label>\n          <input type=\"number\" name=\"addmonth\" id=\"addmonth\" value={selectedControl.AddMonth || 0} onChange={(e) => setControlAddMonth(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"datetimevalue\">DateTime Value</label>\n          <input type=\"date\" name=\"datetimevalue\" id=\"datetimevalue\" value={selectedControl.DateValue || ''} onChange={(e) => setControlDateTimeDateValue(e)} />\n          <input type=\"time\" name=\"timevalue\" id=\"timevalue\" value={selectedControl.TimeValue || ''} onChange={(e) => setControlDateTimeTimeValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isBlank\">Is Blank</label>\n          <input type=\"checkbox\" name=\"isBlank\" id=\"isBlank\" checked={Boolean(selectedControl.IsBlank) || false} onChange={(e) => setControlDateTimeIsBlank(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"formatdatetime\">Format DateTime</label>\n          <select name=\"formatdatetime\" id=\"formatdatetime\" value={selectedControl.FormatDateTime || 0} onChange={(e) => setControlFormatDateTime(e)}>\n            <option value=\"\"></option>\n            <option value=\"yyyy-MM-dd hh:mm tt\">yyyy-MM-dd hh:mm tt</option>\n            <option value=\"yyyy-MM-dd HH:mm\">yyyy-MM-dd HH:mm</option>\n            <option value=\"yyyy-MMM-dd hh:mm tt\">yyyy-MMM-dd hh:mm tt</option>\n            <option value=\"yyyy-MMM-dd HH:mm\">yyyy-MMM-dd HH:mm</option>\n            <option value=\"yy-MM-dd hh:mm tt\">yy-MM-dd hh:mm tt</option>\n            <option value=\"yy-MM-dd HH:mm\">yy-MM-dd HH:mm</option>\n            <option value=\"yy-MMM-dd hh:mm tt\">yy-MMM-dd hh:mm tt</option>\n            <option value=\"yy-MMM-dd HH:mm\">yy-MMM-dd HH:mm</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"islabelvisible\">Is Label Visible</label>\n          <input type=\"checkbox\" name=\"islabelvisible\" id=\"islabelvisible\" checked={Boolean(selectedControl.IsLabelVisible) || false} onChange={(e) => setControlIsLabelVisible(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">ValidationMessage</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n      </div>\n    }\n  }\n\n  function deleteKeyword(pKeyword) {\n    const keywordIndex = selectedControl.Keywords.findIndex(item => item === pKeyword)\n    delete selectedControl.Keywords[keywordIndex]\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function deleteIdValue(pKeyword) {\n    const keywordIndex = selectedControl.AssociatedId.names.findIndex(item => item === pKeyword)\n    delete selectedControl.AssociatedId.names[keywordIndex]\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function deleteData(pData) {\n    const dataIndex = selectedControl.Data.findIndex(item => item === pData)\n    console.log('---> selectedControl.OptionedControls: ', selectedControl.OptionedControls)\n\n    const optionIndex = selectedControl.OptionedControls.findIndex(item => item.SelectedString === pData)\n\n    if (dataIndex > -1) selectedControl.Data = selectedControl.Data.filter((item, index) => index !== dataIndex)\n    if (optionIndex > -1) selectedControl.OptionedControls = selectedControl.OptionedControls.filter((item, index) => index !== optionIndex)\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function setControlID(pEvent) {\n    const IDvalue = pEvent.target.value\n    setIdList([...idList, IDvalue])\n    // console.log('---> setControlID ID:', IDvalue)\n    validateId(IDvalue)\n\n\n    // selectedControl is not attached to the global object??\n    selectedControl.Id = IDvalue\n    // console.log(`--->: setControlID -> selectedControl`, selectedControl)\n    let jsonToUpdate = { ...json }\n    // let jsonToUpdate = JSON.parse(JSON.stringify(json))\n    // console.log(`--->: setControlID -> jsonToUpdate`, jsonToUpdate)\n    setJson(jsonToUpdate)\n  }\n  function setControlTitle(pEvent) {\n    selectedControl.Title = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlTitle2(pEvent) {\n    selectedControl.Title2 = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function setControlVarChar(pEvent) {\n    selectedControl.Format.VarChar = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlLines(pEvent) {\n    selectedControl.Format.Lines = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDecimal(pEvent) {\n    selectedControl.Format.Decimal = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMin(pEvent) {\n    selectedControl.Format.Min = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMax(pEvent) {\n    selectedControl.Format.Max = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlHasUnderLine(pEvent) {\n    selectedControl.HasUnderLine = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsVisible(pEvent) {\n    selectedControl.IsVisible = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlFontSize(pEvent) {\n    selectedControl.FontSize = Number(pEvent.target.value)\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMargin(pEvent) {\n    selectedControl.Margin = Number(pEvent.target.value)\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlFontAttributes(pEvent) {\n    if (pEvent.target.value !== '') selectedControl.FontAttributes = pEvent.target.value\n    else delete selectedControl.FontAttributes\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlSize(pEvent) {\n    selectedControl.Size = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlApi(pEvent) {\n    [\"IncludeAbbreviation\",\n      \"IncludePhoneNumber\",\n      \"IncludeEmail\",\n      \"IncludeTitle\",\n      \"IncludeBusinessNumber\",\n      \"IncludeTitle\",\n      \"IncludeCode\"\n    ].forEach(option => {\n      if (selectedControl[option]) delete selectedControl[option]\n    })\n\n    const apiName = pEvent.target.value\n    if (apiName !== \"ProjectCompany\" && selectedControl.DocketID !== undefined) delete selectedControl.DocketID\n\n    selectedControl.Api = apiName\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlApiValue(pEvent) {\n    selectedControl.Api = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlSelection(pEvent) {\n    selectedControl.Selection = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlEntryTitle(pEvent) {\n    selectedControl.EntryTitle = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlCommentValue(pEvent) {\n    selectedControl.CommentValue = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlButtonLabel(pEvent, btnIndex) {\n    selectedControl.Buttons[btnIndex].Label = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlBackgroundColor(pEvent, btnIndex) {\n    selectedControl.Buttons[btnIndex].BackgroundColor = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlBackgroundColorSelected(pEvent, btnIndex) {\n    selectedControl.Buttons[btnIndex].BackgroundColorSelected = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMatrixBackgroundColor(pEvent) {\n    console.log(`--->: setControlMatrixBackgroundColor -> pEvent.target.value`, pEvent.target.value)\n    selectedControl.BackgroundColor = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMatrixBackgroundColorSelected(pEvent) {\n    selectedControl.BackgroundColorSelected = pEvent.target.value\n    // console.log(`--->: setControlMatrixBackgroundColorSelected -> selectedControl`, selectedControl)\n    let jsonToUpdate = { ...json }\n    // console.log(`--->: setControlMatrixBackgroundColorSelected -> jsonToUpdate`, jsonToUpdate)\n    setJson(jsonToUpdate)\n  }\n  function setControlValidationMessage(pEvent, btnIndex) {\n    selectedControl.ValidationMessage = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMandatory(pEvent) {\n    selectedControl.Mandatory = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlAddHour(pEvent) {\n    if (pEvent.target.value > 0) selectedControl.AddHour = pEvent.target.value\n    else delete selectedControl.AddHour\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlAddDay(pEvent) {\n    if (pEvent.target.value > 0) selectedControl.AddDay = pEvent.target.value\n    else delete selectedControl.AddDay\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlAddMonth(pEvent) {\n    if (pEvent.target.value > 0) selectedControl.AddMonth = pEvent.target.value\n    else delete selectedControl.AddMonth\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlFormatDateTime(pEvent) {\n    selectedControl.FormatDateTime = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlKeyboard(pEvent) {\n    if (selectedControl.Format === undefined) initFormatProperty(selectedControl)\n    selectedControl.Format.Keyboard = pEvent.target.value\n\n    setCurrentKeyboard(pEvent.target.value)\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlAssociatedId(pEvent) {\n    const idList = selectedControl.AssociatedId.names\n    if (idList.findIndex(id => id === pEvent.target.value) < 0) idList.push(pEvent.target.value)\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsLabelVisible(pEvent) {\n    selectedControl.IsLabelVisible = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  // function setControlDateTimeValue(pEvent) {\n  //   selectedControl.DateTimeValue = pEvent.target.value\n  //   selectedControl.IsBlank = false\n  //   let jsonToUpdate = { ...json }\n  //   setJson(jsonToUpdate)\n  // }\n  function setControlDateTimeDateValue(pEvent) {\n    selectedControl.DateValue = pEvent.target.value\n    selectedControl.DateTimeValue = `${pEvent.target.value} ${selectedControl.TimeValue}`\n    selectedControl.IsBlank = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateTimeTimeValue(pEvent) {\n    selectedControl.TimeValue = pEvent.target.value\n    selectedControl.DateTimeValue = `${selectedControl.DateValue} ${pEvent.target.value}`\n    selectedControl.IsBlank = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateValue(pEvent) {\n    selectedControl.DateValue = pEvent.target.value\n    selectedControl.IsBlank = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlTimeValue(pEvent) {\n    selectedControl.TimeValue = pEvent.target.value\n    selectedControl.IsBlank = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateIsBlank(pEvent) {\n    selectedControl.DateValue = \"\"\n    selectedControl.IsBlank = true\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlTimeIsBlank(pEvent) {\n    selectedControl.TimeValue = \"\"\n    selectedControl.IsBlank = true\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateTimeIsBlank(pEvent) {\n    selectedControl.DateValue = \"\"\n    selectedControl.TimeValue = \"\"\n    selectedControl.DateTimeValue = \"\"\n    selectedControl.IsBlank = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsButtonDisabled(pEvent) {\n    selectedControl.IsButtonDisabled = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlShowComment(pEvent) {\n    selectedControl.ShowComment = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function setControlCollapsible(pEvent) {\n    selectedControl.Collapsible = pEvent.target.checked\n    selectedControl.IsCollapsed = false\n    if (!selectedControl.Collapsible) {\n      delete selectedControl.Collapsible\n      delete selectedControl.IsCollapsed\n    }\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsCollapsed(pEvent) {\n    selectedControl.IsCollapsed = pEvent.target.checked\n    if (selectedControl.IsCollapsed) selectedControl.Collapsible = true\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlValue(pEvent) {\n    selectedControl.Value = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlUniqueValue(pEvent) {\n    if (pEvent.target.checked) {\n      selectedControl.Value = 'Y'\n    }\n    else delete selectedControl.Value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlSelectedValue(pEvent) {\n    if (selectedControl.SelectedValue === undefined || selectedControl.SelectedValue.length === 0) {\n      selectedControl.SelectedValue = []\n    }\n    selectedControl.SelectedValue[0] = pEvent.target.value\n    setCurrentSelectedValue(pEvent.target.value)\n\n    // setCurrentSelectedValue('')\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludePhoneNumber(pEvent) {\n    selectedControl.IncludePhoneNumber = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlWarningMessage(pEvent) {\n    selectedControl.WarningMessage = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlWarning(pEvent) {\n    selectedControl.Warning = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsEnabled(pEvent) {\n    selectedControl.IsEnabled = !pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeEmail(pEvent) {\n    selectedControl.IncludeEmail = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeTitle(pEvent) {\n    selectedControl.IncludeTitle = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeBusinessNumber(pEvent) {\n    selectedControl.IncludeBusinessNumber = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeAbbreviation(pEvent) {\n    selectedControl.IncludeAbbreviation = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeCode(pEvent) {\n    selectedControl.IncludeCode = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlGalleryExtrack(pEvent) {\n    selectedControl.GalleryExtrack = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlGalleryPhone(pEvent) {\n    selectedControl.GalleryPhone = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlHideNA(pEvent) {\n    selectedControl.HideNA = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlOptionedControls(pSelected, pKeyword) {\n\n    if (selectedControl.OptionedControls === undefined) selectedControl.OptionedControls = []\n\n    // Find the keyword index\n    const optionedControlIndex = selectedControl.OptionedControls.findIndex(item => item.SelectedString === pKeyword)\n    // console.log(`--->: setControlOptionedControls -> optionedControlIndex`, optionedControlIndex)\n\n    if (optionedControlIndex < 0) {\n      const optionValueIndex = selectedControl.Data.findIndex(item => item === pKeyword)\n      const optionValue = {\n        Controls: pSelected,\n        Index: optionValueIndex,\n        SelectedString: pKeyword\n      }\n      selectedControl.OptionedControls.push(optionValue)\n    }\n    // Find the matching optioned control\n    else {\n      selectedControl.OptionedControls[optionedControlIndex].Controls = pSelected\n    }\n\n    // console.log('---> OptionedControls inJSON: ', selectedControl.OptionedControls)\n    // console.log(`--->: setControlOptionedControls -> pSelected, pKeyword`, pSelected, pKeyword)\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  // function setControlOptionedControls(pEvent, pKeyword) {\n  //   if (selectedControl.OptionedControls === undefined) selectedControl.OptionedControls = []\n  //   const optionedControlIndex = selectedControl.OptionedControls.findIndex(item => item.SelectedString === pKeyword)\n  //   console.log(`--->: setControlOptionedControls -> optionedControlIndex`, optionedControlIndex)\n\n  //   if (optionedControlIndex < 0) {\n  //     const optionValueIndex = selectedControl.Data.findIndex(item => item === pKeyword)\n  //     const optionValue = {\n  //       Controls: [pEvent.target.id],\n  //       Index: optionValueIndex,\n  //       SelectedString: pKeyword\n  //     }\n  //     selectedControl.OptionedControls.push(optionValue)\n  //   }\n  //   else {\n  //     const optionedControlIdIndex = selectedControl.OptionedControls[optionedControlIndex].Controls.findIndex(item => {\n  //       console.log(`--->: setControlOptionedControls -> pEvent.target.id`, pEvent.target.id)\n  //       console.log(`--->: setControlOptionedControls -> item`, item)\n  //       return item === pEvent.target.id\n  //     })\n  //     if (optionedControlIdIndex === -1) selectedControl.OptionedControls[optionedControlIndex].Controls.push(pEvent.target.id)\n  //   }\n\n  //   if (pEvent.target.checked) {\n  //     console.log('---> OptionedControls: ',pEvent.target.id, ' on: ',pKeyword)\n\n  //   }\n  //   let jsonToUpdate = { ...json }\n  //   setJson(jsonToUpdate)\n  // }\n  function setApiDocketNumber(pEvent) {\n    if (pEvent.target.checked) {\n      selectedControl.DocketID = `ProjectCompany${getElementsFromType(\"Button.Add.DocketNumber\")[0].Id}`\n    }\n    else delete selectedControl.DocketID\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setTextDocketNumber(pEvent) {\n    const selectedType = pEvent.target.value\n    console.log(`--->: setTextDocketNumber -> selectedType`, selectedType)\n\n    if (selectedType === \"DocketNumber\" || selectedType === \"Text\") {\n      selectedControl.DocketID = `${selectedType}${getElementsFromType(\"Button.Add.DocketNumber\")[0].Id}`\n    }\n    else if (selectedControl.DocketID !== undefined) delete selectedControl.DocketID\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlValidFrom(pEvent) {\n    if (pEvent.target.checked) {\n      selectedControl.DatabaseField = \"ValidFrom\"\n      databaseFieldLocation = pEvent.target.ElementId\n    }\n    else {\n      delete selectedControl.DatabaseField\n      databaseFieldLocation = ''\n    }\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlValidTo(pEvent) {\n    if (pEvent.target.checked) {\n      selectedControl.DatabaseField = \"ValidTo\"\n      databaseFieldLocation = pEvent.target.ElementId\n    }\n    else {\n      delete selectedControl.DatabaseField\n      databaseFieldLocation = ''\n    }\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlKeywords(pEvent) {\n    if (selectedControl.Keywords === undefined || selectedControl.Keywords.length === 0) {\n      selectedControl.Keywords = { keys: [] }\n    }\n    selectedControl.Keywords.keys.push(currentKeyword)\n    setCurrentKeyword('')\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlData(pEvent) {\n    if (selectedControl.Data === undefined || selectedControl.Data.length === 0) {\n      selectedControl.Data = []\n    }\n    selectedControl.Data.push(currentData)\n    setCurrentData('')\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlXAxisName(pEvent) {\n    selectedControl.XAxisName = pEvent.target.value\n    selectedControl.Legend.LegendValuesX.Name = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlYAxisName(pEvent) {\n    selectedControl.YAxisName = pEvent.target.value\n    selectedControl.Legend.LegendValuesY.Name = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDetails(pEvent) {\n    selectedControl.Details = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  // MATRIX\n  function setControlColumns(pEvent) {\n    selectedControl.Columns = pEvent.target.value\n\n    setMatrixSize()\n\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlRows(pEvent) {\n    selectedControl.Rows = pEvent.target.value\n    setMatrixSize()\n\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  // MATRIX BUTTON\n  function setControlColumnsLegend(pEvent) {\n    selectedControl.Columns = pEvent.target.value\n    // console.log(`--->: setControlColumnsLegend -> selectedControl.Columns`, selectedControl.Columns)\n    // console.log('---> Let\\'s compare:', selectedControl.Columns,selectedControl.Legend.LegendValuesX.Values.length)\n\n    for (let i = 0; i < selectedControl.Columns; i++) {\n      if (selectedControl.Legend.LegendValuesX.Values[i] === undefined) selectedControl.Legend.LegendValuesX.Values[i] = ''\n    }\n    for (let i = selectedControl.Columns; i < selectedControl.Legend.LegendValuesX.Values.length; i++) {\n      selectedControl.Legend.LegendValuesX.Values.pop()\n    }\n    setMatrixSize()\n\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlRowsLegend(pEvent) {\n    selectedControl.Rows = pEvent.target.value\n    for (let i = 0; i < selectedControl.Rows; i++) {\n      if (selectedControl.Legend.LegendValuesY.Values[i] === undefined) selectedControl.Legend.LegendValuesY.Values[i] = ''\n    }\n    for (let i = selectedControl.Rows; i < selectedControl.Legend.LegendValuesY.Values.length; i++) {\n      selectedControl.Legend.LegendValuesY.Values.pop()\n    }\n    setMatrixSize()\n\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlLegendValuesX(pEvent, pPos) {\n    selectedControl.Legend.LegendValuesX.Values[pPos] = pEvent.target.value\n\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlLegendValuesY(pEvent, pPos) {\n    selectedControl.Legend.LegendValuesY.Values[pPos] = pEvent.target.value\n\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlShowLegend(pEvent) {\n    selectedControl.Legend.ShowLegend = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function setMatrixSize(pSize) {\n    if (selectedControl.Elements === undefined) selectedControl.Elements = []\n\n    for (let row = 0; row < selectedControl.Rows; row++) {\n      const gridRowElement = { Type: \"GridRow\", ElementId: getUniqID(), Elements: [] }\n\n      let isRowEmpty = false\n      if (selectedControl.Elements[row] !== undefined) {\n        if (Object.entries(selectedControl.Elements[row]).length === 0) isRowEmpty = true\n      }\n      if (isRowEmpty || selectedControl.Elements[row] === undefined) selectedControl.Elements[row] = gridRowElement\n\n      for (let col = 0; col < selectedControl.Columns; col++) {\n        if (selectedControl.Elements[row].Elements[col] === undefined) selectedControl.Elements[row].Elements[col] = {}\n\n      }\n    }\n\n    // Remove unwanted Gridrows\n    if (selectedControl.Elements.length > selectedControl.Rows) {\n      const activeRows = selectedControl.Elements.slice(0, selectedControl.Rows)\n      selectedControl.Elements = activeRows\n    }\n    // Remove unwanted items in Gridrows\n    selectedControl.Elements.forEach(gridrow => {\n      const activeCols = gridrow.Elements.slice(0, selectedControl.Columns)\n      gridrow.Elements = activeCols\n    })\n  }\n\n  /**-------------------------------------------------**\n  * @desc - JSON utilities functions              -----*\n  *----------------------------------------------------*/\n  function copyJsonHandler() {\n    document.getElementById('json-output').select()\n    document.execCommand('copy')\n  }\n\n  function pasteJsonHandler() {\n    const jsonOutput = document.getElementById('json-output')\n\n    navigator.clipboard.readText()\n      .then(text => {\n        jsonOutput.value = text\n\n        let pasteEvent = new Event('paste')\n        onJsonChangeHandler(pasteEvent)\n      })\n      .catch(err => {\n        // User didn't grant access to read from clipboard\n        console.log('Something went wrong', err)\n      })\n  }\n\n  function loadJsonHandler(pEvent) {\n    let file = pEvent.target.files[0]\n    let reader = new FileReader()\n\n    reader.onloadend = function () {\n      try {\n        let source = reader.result\n        let newData = null\n        let newSource = source.replace(\"data:application/json;base64,\", \"\")\n\n        newData = JSON.parse(Base64.decode(newSource))\n        newData.IsEnableToImport = false\n        newData.isInValidFile = false\n        setJson({ ...newData })\n      }\n      catch (err) {\n        // error loading the json file\n        console.log('---> ', err)\n      }\n    }\n    if (file) {\n      reader.readAsDataURL(file)\n    }\n  }\n\n  function saveJsonHandler() {\n    if (isValidId) {\n      let element = document.createElement('a')\n      element.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(json)))\n      let jsonFileName = \"new_form\"\n      element.setAttribute('download', jsonFileName + '.json')\n      element.style.display = 'none'\n      document.body.appendChild(element)\n\n      element.click()\n      document.body.removeChild(element)\n    }\n  }\n\n  function deleteJsonHandler() {\n    if (window.confirm('Are you sure to remove all?')) {\n      setCurrentSectionIndex(0)\n      setUsedTemplateList([])\n      json.Sections = {}\n      idsCollection = {}\n      idsLoadedList = new Set()\n      const newSection = getNewSection()\n      setJson({ Sections: [newSection] })\n      setSelectedControl(newSection)\n    }\n  }\n\n  const isDocketNumberButton = () => getElementsFromType('Button.Add.DocketNumber')\n\n  /**-------------------------------------------------**\n  * @desc - UI methods                            -----*\n  *----------------------------------------------------*/\n\n  function simpleTabsHandler(pIndex) {\n    switch (pIndex) {\n      case 0:\n        setMode('board')\n        break\n      case 1:\n        setMode('preview')\n        break\n      default:\n        break\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Render the App                        -----*\n  *----------------------------------------------------*/\n\n  const boardEdit =\n    <>\n      <div className=\"section-controls\">\n        <div className=\"section-controls-group\">\n          <button onClick={() => addNewSection()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faFolderPlus} />ADD SECTION</button>\n          <button onClick={() => duplicateSection()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faClone} />DUPLICATE SECTION</button>\n          <button onClick={() => deleteJsonHandler()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faExclamationTriangle} />CLEAR BOARD</button>\n        </div>\n      </div>\n      <div className=\"section-tabs\">\n        {sectionNavigation()}\n      </div>\n      <div id=\"board-edit\" onDragOver={onDragOverHandler} onDrop={onDropHandler}>\n        <div className=\"section-inner-header\">\n          <div>\n            <input\n              type=\"text\"\n              onClick={() => onSelectControlHandler(getCurrentSection())}\n              className=\"section-title\" value={getCurrentSection().Title}\n              readOnly\n              placeholder=\"Section title\"></input>\n          </div>\n          <div className=\"section-btn-group\">\n            <button onClick={() => moveSectionLeft()} className=\"btn btn-primary btn-small\"><FontAwesomeIcon icon={faArrowLeft} />Move LEFT</button>\n            <button onClick={() => removeSection()} className=\"btn btn-tertiary btn-small\" disabled={!currentSectionIndex > 0}><FontAwesomeIcon icon={faTrash} />REMOVE SECTION</button>\n            {/* {currentSectionIndex> 0 ? <button onClick={() => removeSection()} className=\"btn btn-tertiary btn-small\"><FontAwesomeIcon icon={faTrash}/>REMOVE SECTION</button> : ''} */}\n            <button onClick={() => moveSectionRight()} className=\"btn btn-primary btn-small btn-right-icon\">Move RIGHT<FontAwesomeIcon icon={faArrowRight} /></button>\n          </div>\n        </div>\n        {\n          getHTML()\n        }\n      </div>\n\n    </>\n\n  const jsonPreview =\n    <div id=\"json-preview\">\n      <ReactJson src={json} theme=\"monokai\" displayDataTypes={false} iconStyle=\"square\" enableClipboard={false} />\n    </div>\n\n  const errorDuplicate = (!isValidId) ? <div className=\"error-message\">\n    <FontAwesomeIcon icon={faExclamationCircle} />\n    Duplicate ID detected. Control's ID value must be unique. Modify the duplicate ID to enable the Export Json option.\n  </div> : ''\n\n  let propertiesPanel =\n    (mode === 'board') ?\n      <div className=\"properties-panel-container\">\n        <h2>PROPERTIES</h2>\n        {errorDuplicate}\n        <div>{getPropertiesPanel(selectedControl)}</div>\n      </div>\n      : (mode === 'preview') ?\n        <div id=\"edit-controls\">\n          <button onClick={() => document.getElementById('fileInput').click()} className=\"btn btn-primary\"><FontAwesomeIcon icon={faUpload} />Import JSON</button>\n          <button onClick={() => saveJsonHandler()} className=\"btn btn-tertiary\"><FontAwesomeIcon icon={faFileCode} />Export JSON</button>\n          <div>\n            <input type=\"file\"\n              id=\"fileInput\"\n              className=\"custom-file-input\"\n              accept=\"application/JSON\"\n              onChange={e => loadJsonHandler(e)} />\n          </div>\n          <button onClick={() => copyJsonHandler()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faCopy} />Copy JSON</button>\n          <button onClick={() => pasteJsonHandler()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faPaste} />Paste JSON</button>\n        </div>\n        :\n        ''\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1 title=\"v20.10.19\">JSON Generator</h1>\n      </header>\n      <div id=\"page\" className=\"page\">\n\n        <nav id=\"navigation\" className=\"navigation\">\n          <div className=\"navigation-container\">\n            <div className=\"navigation-section\">\n              <div className=\"navigation-section-title\">\n                <FontAwesomeIcon icon={faCog} /><h2>Section Controls</h2>\n              </div>\n              <ul className=\"navigation-section-items\" onDragStart={controlsHandler}>\n                <li draggable id=\"Matrix\">Matrix</li>\n                <li draggable id=\"Matrix.Button\">Matrix Button</li>\n                <li draggable id=\"Repeatable\">Repeatable</li>\n              </ul>\n            </div>\n\n            <div className=\"navigation-section\">\n              <div className=\"navigation-section-title\">\n                <FontAwesomeIcon icon={faStream} /><h2>Template Controls</h2>\n              </div>\n              <ul className=\"navigation-section-items\" onDragStart={controlsHandler}>\n                <li draggable={usedTemplateList.indexOf('Document.TableOfContents') < 0} className={usedTemplateList.indexOf('Document.TableOfContents') > -1 ? 'disabled' : ''} id=\"Document.TableOfContents\">Table of content</li>\n                <li draggable={usedTemplateList.indexOf('Document.Summary') < 0} className={usedTemplateList.indexOf('Document.Summary') > -1 ? 'disabled' : ''} id=\"Document.Summary\">D.Summary</li>\n                <li draggable={usedTemplateList.indexOf('Document.Summary2') < 0} className={usedTemplateList.indexOf('Document.Summary2') > -1 ? 'disabled' : ''} id=\"Document.Summary2\">D.Summary (with Close)</li>\n                <li draggable={usedTemplateList.indexOf('Document.Summary3') < 0} className={usedTemplateList.indexOf('Document.Summary3') > -1 ? 'disabled' : ''} id=\"Document.Summary3\">D.Summary (with Registers)</li>\n                <li draggable={usedTemplateList.indexOf('Document.Summary4') < 0} className={usedTemplateList.indexOf('Document.Summary4') > -1 ? 'disabled' : ''} id=\"Document.Summary4\">D.Summary (Registers/Close)</li>\n                <li draggable={usedTemplateList.indexOf('Emailregister') < 0} className={usedTemplateList.indexOf('Emailregister') > -1 ? 'disabled' : ''} id=\"Emailregister\">Email Register</li>\n                <li draggable={usedTemplateList.indexOf('Smsregister') < 0} className={usedTemplateList.indexOf('Smsregister') > -1 ? 'disabled' : ''} id=\"Smsregister\">SMS Register</li>\n                <li draggable={usedTemplateList.indexOf('QRScanner.List') < 0} className={usedTemplateList.indexOf('QRScanner.List') > -1 ? 'disabled' : ''} id=\"QRScanner.List\">QR Scanner List</li>\n                <li draggable={usedTemplateList.indexOf('SignatureSignOnOff') < 0} className={usedTemplateList.indexOf('SignatureSignOnOff') > -1 ? 'disabled' : ''} id=\"SignatureSignOnOff\">Signature SignOnOff</li>\n              </ul>\n            </div>\n\n            <div className=\"navigation-section\">\n              <div className=\"navigation-section-title\">\n                <FontAwesomeIcon icon={faLightbulb} /><h2>Type controls</h2>\n              </div>\n              <ul className=\"navigation-section-items\" onDragStart={controlsHandler}>\n                <li draggable id=\"API\">API</li>\n                <li draggable id=\"SingleBoolean\">Boolean Single</li>\n                <li draggable id=\"Boolean\">Boolean Double</li>\n                <li draggable id=\"Button.Add.ReportDate\">Button Add Report Date</li>\n                <li draggable id=\"Button.Add.DocketNumber\">Button Add Docket Number</li>\n                <li draggable id=\"Checkbox\">Checkbox</li>\n                <li draggable id=\"List.Multicontrol\">Conditional Response</li>\n                <li draggable id=\"Date\">Date</li>\n                <li draggable id=\"DateTime\">DateTime</li>\n                <li draggable id=\"Image\">Image</li>\n                <li draggable id=\"Image.Single\">Image Single</li>\n                <li draggable id=\"Label\">Label</li>\n                <li draggable id=\"List.Single\">List Single</li>\n                <li draggable id=\"List.Multiple\">List Multiple</li>\n                {/* <li draggable id=\"Numeric\">Numeric</li> */}\n                <li draggable id=\"QRScanner\">QR Scanner</li>\n                <li draggable id=\"Signature\">Signature</li>\n                <li draggable id=\"Signature.Date\">Signature Date</li>\n                <li draggable id=\"Signature.DateTime\">Signature DateTime</li>\n                <li draggable id=\"Text\">Text</li>\n                <li draggable id=\"Time\">Time</li>\n                <li draggable id=\"Trilean\">Trilean</li>\n                <li draggable id=\"Trilean.Label\">Trilean Label</li>\n                <li draggable id=\"Widgetevents\">Widget Events</li>\n                <li draggable id=\"Widgetdisplay\">Widget Display</li>\n                <li draggable id=\"Widgetdocketcontractor\">Widget Docket Contractor</li>\n                <li draggable id=\"Widgetdocketequipment\">Widget Docket Equipment</li>\n                <li draggable id=\"Widgetdocketphoto\">Widget Docket Photo</li>\n                <li draggable id=\"Widgetdocketcomments\">Widget Docket Comments</li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n\n        <main>\n          <div className=\"main-container\">\n            <SimpleTabs dispatchIndex={(pMode) => simpleTabsHandler(pMode)} tabs={[\n              {\n                tab: boardEdit,\n                title: \"Board\"\n              },\n              {\n                tab: jsonPreview,\n                title: \"Json Preview\"\n              }]} />\n            <textarea id=\"json-output\" cols=\"60\" rows=\"14\" value={JSON.stringify(json)} onChange={() => onJsonChangeHandler()}></textarea>\n          </div>\n        </main>\n\n        <aside id=\"sidebar\" className=\"sidebar\">\n          <span id=\"sidebarHandle\"></span>\n          <div id=\"properties-panel\">{propertiesPanel}</div>\n        </aside>\n\n        <Modal\n          visibility={isModalDocketVisible}\n          toggleVisibility={() => setIsModalDocketVisible(!isModalDocketVisible)}\n          message=\"You need to add the 'Button Add Docket Number' to the board before setting a Docket Number.\"\n          css={{ backgroundColor: 'rgba(0,0,0,1)' }}\n          backdrop={'rgba(0,0,0,0.3)'}\n        />\n\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectItem\":\"SelectSearchable_selectItem__ytOvQ\",\"selectedItem_delete\":\"SelectSearchable_selectedItem_delete__DzATU\",\"selectSearchable\":\"SelectSearchable_selectSearchable__12vBI\",\"selectSearchable_Container\":\"SelectSearchable_selectSearchable_Container__fToYi\",\"selectSearchable_SearchContainer\":\"SelectSearchable_selectSearchable_SearchContainer__3eaGr\",\"selectSearchable_ItemsContainer\":\"SelectSearchable_selectSearchable_ItemsContainer__34yKg\",\"selectSearchable_Header\":\"SelectSearchable_selectSearchable_Header__20KCq\",\"selectSearchable_SelectedContainer\":\"SelectSearchable_selectSearchable_SelectedContainer__3HBOF\",\"selectSearchable_Trigger\":\"SelectSearchable_selectSearchable_Trigger__2brz3\",\"selectSearchable_SelectedItem\":\"SelectSearchable_selectSearchable_SelectedItem__ya07B\",\"selectSearchable_SelectedItem_Selected\":\"SelectSearchable_selectSearchable_SelectedItem_Selected__3kePe\",\"selectSearchable_List\":\"SelectSearchable_selectSearchable_List__12txV\",\"listCollapsed\":\"SelectSearchable_listCollapsed__2gYJk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalBackdrop\":\"Modal_modalBackdrop__12d43\",\"modalBackdrop_freeze\":\"Modal_modalBackdrop_freeze__1CiMV\",\"modalContainer\":\"Modal_modalContainer__2JZ38\",\"modalHeader\":\"Modal_modalHeader__3lu0c\",\"modalContent\":\"Modal_modalContent__5WIER\",\"modalFooter\":\"Modal_modalFooter__2egbG\",\"modalBtn\":\"Modal_modalBtn__296dr\",\"modalClose\":\"Modal_modalClose__2fnre\"};"],"sourceRoot":""}
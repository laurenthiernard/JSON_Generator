{"version":3,"sources":["utils.js","components/Control.js","components/SimpleTabs.js","layout.js","App.js","serviceWorker.js","index.js"],"names":["getUniqID","pLength","random","window","btoa","Math","Date","getTime","substring","toLocaleLowerCase","Control","props","id","controlObj","ElementId","type","Type","reorderable","isFixed","className","icon","faArrowUp","onClick","moveUp","faArrowDown","moveDown","selectedControl","onClickHandler","pType","faAudioDescription","faFileAlt","faHandPointDown","faWeight","faToggleOn","faCheckSquare","faListUl","faCalendarAlt","faImage","faSpellCheck","faGenderless","faCircle","faBars","faTable","getIcon","includes","value","Id","disabled","Title","delete","faTrashAlt","title","subcontrolsHTMLElements","cssRows","cssColumns","i","Rows","rowElement","Elements","j","colElement","undefined","newChildControl","key","slotContent","Object","entries","length","push","Columns","style","display","gridTemplateColumns","gridTemplateRows","controlElement","subcontrolsHTML","map","element","getSubcontrols","SimpleTabs","useState","activeTab","setActiveTab","tabButton","tabs","tab","index","useEffect","dispatchIndex","initLayout","isResizingSidebar","isNavBarCollapsed","sidebarWidth","sidebarHandle","document","querySelector","navigation","layout","pageWidth","innerWidth","navigationSections","querySelectorAll","collapseNavigation","mouseDownEvent","addEventListener","e","forEach","section","classList","add","expandNavigation","remove","removeEventListener","pWidth","min","max","parseInt","clientX","target","App","initialJson","Sections","SectionId","savedJson","JSON","parse","localStorage","getItem","json","setJson","currentSectionIndex","setCurrentSectionIndex","setSelectedControl","isValidId","setIsValidId","idList","setIdList","usedTemplateList","setUsedTemplateList","mode","setMode","currentKeyword","setCurrentKeyword","currentData","setCurrentData","singleUseElements","setItem","stringify","controlsHandler","dataTransfer","setData","addToNewSection","pElement","pChildren","newSection","getNewSection","child","pTitle","sectionTitle","getNewElement","pIsMatrix","pIsRepeatable","getElementFromElementId","pElementID","currentSection","foundItem","item","hasOwnProperty","subitem","subsubitem","getCurrentSection","getParentElementFromId","validateId","pID","getElementsFromId","initFormatProperty","Format","onSelectControlHandler","pControl","onJsonChangeHandler","currentValue","getElementById","moveElement","pParentElement","pDirection","pIsSubControl","container","position","findIndex","splice","deleteKeyword","pKeyword","keywordIndex","Keywords","jsonToUpdate","deleteIdValue","AssociatedId","names","deleteData","pData","dataIndex","Data","setControlID","pEvent","IDvalue","setControlTitle","setControlTitle2","Title2","setControlHasUnderLine","HasUnderLine","checked","setControlIsVisible","IsVisible","setControlApiValue","Api","setControlEntryTitle","EntryTitle","setControlDetails","Details","setControlCommentValue","CommentValue","setControlButtonLabel","btnIndex","Buttons","Label","setControlBackgroundColor","BackgroundColor","setControlBackgroundColorSelected","BackgroundColorSelected","setControlValidationMessage","ValidationMessage","setControlMandatory","Mandatory","setControlAddHour","AddHour","setControlAddDay","AddDay","setControlAddMonth","AddMonth","setControlFormatDateTime","FormatDateTime","setControlAssociatedId","setControlIsLabelVisible","IsLabelVisible","setControlIsButtonDisabled","IsButtonDisabled","setControlShowComment","ShowComment","setControlCollapsible","Collapsible","IsCollapsed","setControlIsCollapsed","setControlValue","Value","setControlIncludeTitle","IncludeTitle","setControlHideNA","HideNA","setControlKeywords","setControlData","setMatrixSize","pSize","row","gridRowElement","isRowEmpty","col","activeRows","slice","gridrow","activeCols","boardEdit","faFolderPlus","sectionToDuplicate","duplicateSection","faClone","confirm","deleteJsonHandler","faExclamationTriangle","sectionNavigation","onDragOver","preventDefault","onDrop","elementName","getData","targetID","parentID","indexOf","isValidElement","alert","newElement","droppedPosition","lastIndexOf","pDefaultValues","unshift","prependToFirstSection","Button","initButtonsProperty","initDefaultValues","addToCurrentSection","readOnly","placeholder","reorderedSections","moveSectionLeft","faArrowLeft","sections","filter","removeSection","faTrash","moveSectionRight","faArrowRight","currentSectionToRender","pItem","control","parentElement","moveUpHandler","moveDownHandler","subindex","subsubindex","elementsToFilter","elementsIndex","newElements","deleteElementFromId","getControl","getHTML","jsonPreview","src","theme","displayDataTypes","iconStyle","enableClipboard","errorDuplicate","faExclamationCircle","propertiesPanel","pSelectedControl","keyWordsList","globalProperties","htmlFor","name","onChange","Boolean","setControlColumns","setControlRows","keyword","option","setControlApi","IncludePhoneNumber","setControlIncludePhoneNumber","IncludeEmail","setControlIncludeEmail","IncludeBusinessNumber","setControlIncludeBusinessNumber","IncludeAbbreviation","setControlIncludeAbbreviation","IncludeCode","setControlIncludeCode","associatedIds","idsList","dataList","data","defaultValueList","Size","setControlSize","GalleryExtrack","setControlGalleryExtrack","GalleryPhone","setControlGalleryPhone","FontSize","Number","setControlFontSize","Margin","setControlMargin","FontAttributes","setControlFontAttributes","IsEnabled","setControlIsEnabled","WarningMessage","Warning","setControlWarningMessage","setControlWarning","Keyboard","setControlKeyboard","VarChar","setControlVarChar","Lines","setControlLines","Decimal","setControlDecimal","Min","setControlMin","Max","setControlMax","DateValue","IsBlank","setControlDateValue","setControlDateIsBlank","TimeValue","setControlTimeValue","setControlTimeIsBlank","DateTimeValue","setControlDateTimeDateValue","setControlDateTimeTimeValue","setControlDateTimeIsBlank","getPropertiesPanel","click","faUpload","createElement","setAttribute","encodeURIComponent","jsonFileName","body","appendChild","removeChild","saveJsonHandler","faFileCode","accept","file","files","reader","FileReader","onloadend","source","result","newData","newSource","replace","Base64","decode","IsEnableToImport","isInValidFile","err","console","log","readAsDataURL","loadJsonHandler","select","execCommand","faCopy","jsonOutput","navigator","clipboard","readText","then","text","Event","catch","pasteJsonHandler","faPaste","faCog","onDragStart","draggable","faStream","faLightbulb","pMode","pIndex","simpleTabsHandler","cols","rows","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.1d9ba42f.chunk.js","sourcesContent":["export function getUniqID(pLength) {\n  let random = () => window.btoa(Math.random()*(new Date().getTime())*1).substring(4, 9)\n  return `${random()}-${random()}`.substring(0, pLength).toLocaleLowerCase()\n}","import React from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n  faWeight, faSpellCheck,\n  faCalendarAlt, faTrashAlt,\n  faAudioDescription, faToggleOn,\n  faSortNumericUp, faGenderless,\n  faImage, faImages, faListUl,\n  faList, faFileAlt, faClock,\n  faCheckSquare, faHandPointDown,\n  faSearch, faCircle, faAd,\n  faMailBulk, faPlus, faBars,\n  faUserCircle, faTable, faLayerGroup,\n  faEdit, faArrowUp, faArrowDown,\n} from \"@fortawesome/free-solid-svg-icons\"\n\nimport { getUniqID } from './../utils'\n\nexport default function Control(props) {\n  const id = props.controlObj.ElementId\n  const type = props.controlObj.Type\n\n  // const clickHandlerRef = props.onClickHandler\n\n  // console.log(`--->: Control -> type`, props.controlObj)\n  // console.log(`--->: Control -> props.selectedControl`, props.selectedControl)\n\n  function getSubcontrols() {\n    let subcontrolsHTMLElements = []\n\n    switch (type) {\n      case \"Matrix\":\n\n        let cssRows = ''\n        let cssColumns = ''\n\n        for (let i = 0; i < props.controlObj.Rows; i++) {\n          // let gridRowElement = {Type: \"GridRow\", ElementID: getUniqID(), Elements: []}\n          // props.controlObj.Elements[i] = gridRowElement\n\n          const rowElement = props.controlObj.Elements[i]\n          // console.log(`--->: getSubcontrols -> rowElement`, rowElement)\n          cssRows+='1fr '\n          cssColumns = ''\n\n          for (let j = 0; j < props.controlObj.Columns; j++) {\n            const colElement = (rowElement.Elements !== undefined) ? rowElement.Elements[j] : {}\n            // console.log(`--->: getSubcontrols -> new control: `, colElement)\n            const newChildControl =\n              <Control\n                controlObj={colElement}\n                selectedControl={props.selectedControl}\n                isFixed={true}\n                onClickHandler={() => props.onClickHandler(colElement)}\n                // onClickHandler={() => props.onSelectControlHandler(colElement)}\n                delete={(colElement) => props.delete(colElement)}\n                key={colElement.ElementId} />\n                // key={`matrix-sub${i}${j}`} />\n\n            const slotContent = (Object.entries(colElement).length === 0 || colElement === undefined) ? 'Add control' : newChildControl\n            // console.log(`--->: getSubcontrols -> slotContent`, slotContent)\n            cssColumns+='1fr '\n            subcontrolsHTMLElements.push(\n              <div\n                id={`${id}-matrix-row${i}-col${j}`}\n                key={`matrix${i}${j}`}\n                className=\"matrix-box\">{slotContent}\n              </div>)\n          }\n        }\n        return <div className=\"control-footer\" style={{display:'grid', gridTemplateColumns:cssColumns, gridTemplateRows:cssRows}}>{subcontrolsHTMLElements}</div>\n\n      case \"Repeatable\":\n      case \"SignatureSignOnOff\":\n      case \"Document.Summary2\":\n      case \"Document.Summary3\":\n      case \"Document.Summary4\":\n      case \"Emailregister\":\n      case \"Smsregister\":\n      case \"Document.Summary\":\n        for (let i = 0; i < props.controlObj.Elements.length; i++) {\n          const controlElement = props.controlObj.Elements[i]\n          const newChildControl =\n            <Control\n              controlObj={controlElement}\n              selectedControl={props.selectedControl}\n              isFixed={false}\n              onClickHandler={() => props.onClickHandler(controlElement)}\n              moveUp={(controlElement) => props.moveUp(controlElement, true)}\n              moveDown={(controlElement) => props.moveDown(controlElement, true)}\n              delete={(controlElement) => props.delete(controlElement)}\n              key={controlElement.ElementId} />\n\n            // console.log(`--->: getSubcontrols -> newChildControl`, newChildControl)\n            subcontrolsHTMLElements.push(newChildControl)\n          }\n          // console.log(`--->: getSubcontrols -> subcontrolsHTMLElements`, subcontrolsHTMLElements)\n        // Repeatable\n        const subcontrolsHTML = subcontrolsHTMLElements.map(element => element)\n\n        // const slotContent = (Object.entries(colElement).length === 0 || colElement === undefined) ? 'Add control' : newChildControl\n        return <>\n            <div id={`${id}-repeatable-area`} className=\"control-footer-addarea\">Add controls</div>\n            <div id={`${id}-repeatable`} className=\"control-footer\">{subcontrolsHTML}</div>\n          </>\n\n      // case \"Document.Summary\":\n      // case \"Document.Summary2\":\n      // case \"Document.Summary3\":\n      // case \"Document.Summary4\":\n      // case \"Emailregister\":\n      // case \"Smsregister\":\n      //   // console.log('---> ', props.controlObj.Elements)\n      //   const children = props.controlObj.Elements.map(item => (\n      //     <Control\n      //       controlObj={item}\n      //       selectedControl={props.selectedControl}\n      //       isFixed={false}\n      //       onClickHandler={() => props.onClickHandler(item)}\n      //       // onClickHandler={() => props.onSelectControlHandler(colElement)}\n      //       // delete={() => props.delete(item)}\n      //       key={item.ElementId} />))\n      //   return <div className=\"control-footer\">{children}</div>\n\n      default:\n        break\n    }\n  }\n\n  function getIcon(pType) {\n    switch (pType) {\n      case \"Label\":\n      case \"DocumentSummaryGrid\":\n        return faAudioDescription\n      case \"Document.TableOfContents\":\n      case \"Document.Summary\":\n      case \"Document.Summary2\":\n      case \"Document.Summary3\":\n      case \"Document.Summary4\":\n        return faFileAlt\n      case \"Button.Submit.Register\":\n      case \"Button.View.Document\":\n      case \"Button.Closeout\":\n      case \"Button.Send.SMS\":\n      case \"Button.Send.Email\":\n      case \"Button.Add.Email\":\n      case \"Button.Add.SMS\":\n      case \"Button.Add.Signature\":\n      case \"Button.Add.ReportDate\":\n        return faHandPointDown\n      case \"API\":\n      case \"Signature.Date\":\n      case \"Signature.DateTime\":\n        return faWeight\n      case \"SingleBoolean\":\n      case \"Boolean\":\n        return faToggleOn\n      case \"Checkbox\":\n        return faCheckSquare\n      case \"List.Multicontrol\":\n        return faListUl\n      case \"Date\":\n      case \"DateTime\":\n        return faCalendarAlt\n      case \"Image\":\n      case \"Image.Single\":\n        return faImage\n      case \"QRScanner\":\n      case \"QRScanner.List\":\n      case \"Signature\":\n        return faSpellCheck\n      case \"Trilean\":\n        return faGenderless\n      case \"Trilean.Label\":\n        return faCircle\n      case \"Repeatable\":\n        return faBars\n      default:\n        return faTable\n    }\n  }\n\n  const reorderable = (props.isFixed) ? '' : <div className=\"control-reordering\">\n    <FontAwesomeIcon icon={faArrowUp}\n      onClick={() => props.moveUp(props.controlObj, false)}\n    />\n    <FontAwesomeIcon icon={faArrowDown}\n      onClick={() => props.moveDown(props.controlObj, false)}\n    />\n  </div>\n\n  return (\n    <div\n      id={id}\n      className={`${props.isFixed ? 'subcontrol' : 'control'}${id === props.selectedControl.ElementId ? ' active-control' : ''}`}\n      >\n      <div className=\"control-header\" onClick={props.onClickHandler}>{props.controlObj.Type}</div>\n      <div className=\"control-content\">\n        {reorderable}\n        <div className=\"control-icon\" onClick={props.onClickHandler}>\n          <FontAwesomeIcon icon={getIcon(props.controlObj.Type)} />\n        </div>\n        <div className={`control-id ${props.controlObj.Type.includes('Button') > 0 ? \"hidden\" : ''}`} onClick={props.onClickHandler}>\n          <input type=\"text\" value={props.controlObj.Id || ''} disabled></input>\n        </div>\n        <div className=\"control-title\" onClick={props.onClickHandler}>\n          <input type={props.controlObj.Type.includes('Button') > 0 ? \"button\" : props.controlObj.Type.includes('Checkbox') ? \"checkbox\" : \"text\"} value={props.controlObj.Title || props.controlObj.Type || ''} disabled></input>\n        </div>\n        <div className=\"control-delete\" onClick={() => props.delete(props.controlObj)}>\n          <FontAwesomeIcon\n            icon={faTrashAlt}\n            title=\"Remove\"\n          /></div>\n      </div>\n      {getSubcontrols()}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nexport default function SimpleTabs(props) {\n\n  const [activeTab, setActiveTab] = useState(0)\n\n  const tabButton = props.tabs.map((tab, index) => {\n    return <button className={`SimpleTabs-tab ${activeTab === index ? 'tab-active' : ''}`} key={index} onClick={() => setActiveTab(index)}>{props.tabs[index].title}</button>\n  })\n\n  useEffect(() => {\n    props.dispatchIndex(activeTab)\n  }, [activeTab])\n\n  return (\n    <div className=\"SimpleTabs-container\">\n      <div className=\"SimpleTabs-header\">\n      {tabButton}\n\n      </div>\n      {props.tabs[activeTab].tab}\n    </div>\n  )\n}\n","\nexport default function initLayout() {\n\n  let isResizingSidebar = false\n  let isNavBarCollapsed = false\n\n  let sidebarWidth = 300\n  let sidebarMinWidth = 150\n  let sidebarMaxWidth = 400\n\n  const breakpoint = 1100\n  const navbarCollapsedWidth = 80\n  const navbarExpandedWidth = 250\n\n  const sidebarHandle = document.querySelector('#sidebarHandle')\n  const navigation = document.querySelector('#navigation')\n  const layout = document.querySelector('#page')\n  let pageWidth = window.innerWidth\n  const navigationSections = document.querySelectorAll('.navigation-section')\n\n  if (pageWidth < breakpoint) collapseNavigation()\n\n  const mouseDownEvent = sidebarHandle.addEventListener('mousedown', (e) => isResizingSidebar = true)\n  document.addEventListener('mouseup', (e) => {\n    isResizingSidebar = false\n    sidebarHandle.removeEventListener('mousedown', mouseDownEvent)\n  })\n  document.addEventListener('mousemove', (e) => {\n    if (isResizingSidebar) {\n      sidebarWidth = Math.min(Math.max(parseInt(pageWidth - e.clientX), sidebarMinWidth), sidebarMaxWidth)\n      setSidebarWidth(sidebarWidth)\n    }\n  })\n\n  function setSidebarWidth(pWidth) {\n    if ((pWidth > sidebarMinWidth) && pWidth < sidebarMaxWidth) {\n      if (!isNavBarCollapsed) {\n        layout.style.gridTemplateColumns = `${navbarExpandedWidth}px auto ${pWidth}px`\n      }\n      else if (isNavBarCollapsed) {\n        layout.style.gridTemplateColumns = `${navbarCollapsedWidth}px auto ${pWidth}px`\n      }\n    }\n  }\n\n  window.addEventListener('resize', (e) => {\n    pageWidth = e.target.innerWidth\n    if (pageWidth < breakpoint && !isNavBarCollapsed) {\n      layout.style.gridTemplateColumns = `${navbarCollapsedWidth}px auto ${sidebarWidth}px`\n      isNavBarCollapsed = !isNavBarCollapsed\n      collapseNavigation()\n    }\n    else if (pageWidth > breakpoint && isNavBarCollapsed) {\n      layout.style.gridTemplateColumns = `${navbarExpandedWidth}px auto ${sidebarWidth}px`\n      isNavBarCollapsed = !isNavBarCollapsed\n      expandNavigation()\n    }\n  })\n\n  navigation.addEventListener('mouseenter', e => {\n    if (pageWidth < breakpoint && isNavBarCollapsed) {\n\n    expandNavigation()\n    }\n  })\n  navigation.addEventListener('mouseleave', e => {\n    if (pageWidth < breakpoint && !isNavBarCollapsed) {\n\n    collapseNavigation()\n    }\n  })\n\n  function collapseNavigation() {\n    navigationSections.forEach(section => section.classList.add(\"collapsed\"))\n    layout.style.gridTemplateColumns = `${navbarCollapsedWidth}px auto ${sidebarWidth}px`\n    isNavBarCollapsed = true\n  }\n  function expandNavigation() {\n    navigationSections.forEach(section => section.classList.remove(\"collapsed\"))\n    layout.style.gridTemplateColumns = `${navbarExpandedWidth}px auto ${sidebarWidth}px`\n    isNavBarCollapsed = false\n  }\n\n\n}\n","import React, { useState, useEffect } from 'react'\nimport './App.scss'\n\nimport Control from './components/Control'\nimport SimpleTabs from './components/SimpleTabs'\nimport { getUniqID } from './utils'\nimport initLayout from './layout.js'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faStream, faCog, faLightbulb, faTrash, faCopy, faFolderPlus, faClone, faPaste, faExclamationTriangle, faFileCode, faUpload, faArrowRight, faExclamationCircle, faArrowLeft, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport ReactJson from 'react-json-view'\nimport { Base64 } from 'js-base64';\n\nfunction App() {\n\n  const saveSessionEnabled = true\n  let initialJson = { Sections: [{ SectionId: \"mjy5n\", Title: \"Section 1\", Elements: [] }] }\n  // Check if saved JSON is valid and assign it\n  if (saveSessionEnabled) {\n    const savedJson = JSON.parse(localStorage.getItem('currentJson'))\n    if (savedJson !== null) initialJson = savedJson\n  }\n\n  const [json, setJson] = useState(initialJson)\n  const [currentSectionIndex, setCurrentSectionIndex] = useState(0)\n  const [selectedControl, setSelectedControl] = useState({})\n  const [isValidId, setIsValidId] = useState(true)\n  const [idList, setIdList] = useState([])\n  const [usedTemplateList, setUsedTemplateList] = useState([])\n  const [mode, setMode] = useState('board')\n  const [currentKeyword, setCurrentKeyword] = useState('')\n  const [currentData, setCurrentData] = useState('')\n\n  const singleUseElements = [\n    \"Document.TableOfContents\",\n    \"Document.Summary\",\n    \"Document.Summary2\",\n    \"Document.Summary3\",\n    \"Document.Summary4\",\n    \"Emailregister\",\n    \"Smsregister\",\n    \"QRScanner.List\",\n    \"SignatureSignOnOff\"\n  ]\n\n  useEffect(() => {\n    initLayout()\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('currentJson', JSON.stringify(json))\n  }, [json])\n\n  /**-------------------------------------------------**\n  * @desc - DRAG AND DROP                         -----*\n  *----------------------------------------------------*/\n\n  let controlsHandler = e => {\n    e.dataTransfer.setData(\"text/plain\", e.target.id)\n  }\n  let onDragOverHandler = e => {\n    e.preventDefault()\n  }\n  let onDropHandler = e => {\n    e.preventDefault()\n    const elementName = e.dataTransfer.getData(\"text/plain\")\n\n    let targetID = e.target.id\n    let parentID = targetID.substring(0, 11)\n\n    const notAllowedElements = [\n      \"Matrix\",\n      \"Matrixbutton\",\n      \"Repeatable\",\n      \"Document.TableOfContents\",\n      \"Document.Summary\",\n      \"Document.Summary2\",\n      \"Document.Summary3\",\n      \"Document.Summary4\",\n      \"Emailregister\",\n      \"Smsregister\",\n      \"QRScanner.List\",\n      \"SignatureSignOnOff\"\n    ]\n\n    if (singleUseElements.indexOf(elementName) > -1) setUsedTemplateList([...usedTemplateList, elementName])\n\n\n    let isValidElement = true\n    if (notAllowedElements.findIndex(element => element === elementName) > -1) {\n      isValidElement = false\n    }\n\n\n    // ---------------------------------------------------------------------------- MATRIX : ADD Elements\n    if (targetID.includes('matrix')) {\n      if (!isValidElement) {\n        alert('Control not alowed inside a Matrix')\n        return\n      }\n      let newElement = getNewElement(elementName)\n      let droppedPosition = {\n        row: targetID.substring(targetID.lastIndexOf('-row') + 4, targetID.lastIndexOf('-col')),\n        col: targetID.substring(targetID.lastIndexOf('-col') + 4, targetID.length)\n      }\n\n      const parentElement = getElementFromElementId(parentID)\n      const elementRow = parentElement.Elements[droppedPosition.row]\n      elementRow.Elements[droppedPosition.col] = newElement\n\n      const jsonToUpdate = JSON.parse(JSON.stringify(json))\n      setJson({ ...jsonToUpdate })\n    }\n    else if (targetID.includes('repeatable')) {\n      if (!isValidElement) {\n        alert('Control not alowed inside a Repeatable')\n        return\n      }\n      let newElement = getNewElement(elementName)\n      const parentElement = getElementFromElementId(parentID)\n      parentElement.Elements.push(newElement)\n\n      const jsonToUpdate = JSON.parse(JSON.stringify(json))\n      setJson({ ...jsonToUpdate })\n    }\n    // ---------------------------------------------------------------------------- TEMPLATES : ADD Elements\n    else {\n      switch (elementName) {\n        case \"Document.TableOfContents\":\n          prependToFirstSection(elementName,\n            { Type: \"Document.TableOfContents\", Title: \"Table Of Contents\", Id: \"DocTableOfContents\", ElementId: getUniqID() },\n          )\n          break\n        case \"Document.Summary\":\n          addToNewSection(elementName, [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", Id: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", Id: \"Button.Submit.Register\", Title: \"Submit to Register\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", Id: \"Button.View.Document\", Title: \"View Document\", ElementId: getUniqID() }])\n          break\n        case \"Document.Summary2\":\n          addToNewSection(elementName, [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", Id: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", Title: \"Submit to Register\", Id: \"Button.Submit.Register\", ElementId: getUniqID() },\n            { Type: \"Button.Closeout\", Title: \"Close out\", Id: \"Button.Closeout\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", Title: \"View Document\", Id: \"Button.View.Document\", ElementId: getUniqID() },\n          ])\n          break\n        case \"Document.Summary3\":\n          addToNewSection(elementName, [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", Id: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", Title: \"Submit to Register\", Id: \"Button.Submit.Register\", ElementId: getUniqID() },\n            { Type: \"Button.Send.SMS\", Title: \"Send SMS\", Id: \"Button.Send.SMS\", ElementId: getUniqID() },\n            { Type: \"Button.Send.Email\", Title: \"Send Email\", Id: \"Button.Send.Email\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", Title: \"View Document\", Id: \"Button.View.Document\", ElementId: getUniqID() }\n          ])\n          break\n        case \"Document.Summary4\":\n          addToNewSection(elementName, [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", Id: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", Title: \"Submit to Register\", Id: \"Button.Submit.Register\", ElementId: getUniqID() },\n            { Type: \"Button.Closeout\", Title: \"Close out\", Id: \"Button.Closeout\", ElementId: getUniqID() },\n            { Type: \"Button.Send.SMS\", Title: \"Send SMS\", Id: \"Button.Send.SMS\", ElementId: getUniqID() },\n            { Type: \"Button.Send.Email\", Title: \"Send Email\", Id: \"Button.Send.Email\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", Title: \"View Document\", Id: \"Button.View.Document\", ElementId: getUniqID() },\n          ])\n          break\n        case \"Emailregister\":\n          addToNewSection(elementName, [\n            { Type: \"SearchableListEntryDialogEmail\", Title: \"Select from Project Directory\", Id: \"ContactListEmail\", Api: \"ProjectContacts.Email\", ValidationMessage: \"Permit Holder Required\", AssociatedId: { names: [\"ManualEmailName\", \"ManualEmailEmail\"] }, ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"OR\", ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"Add manually below\", ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Name\", Id: \"ManualEmailName\", Format: {}, ValidationMessage: \"Name Required\", Mandatory : true, AssociatedId: { names: [\"ManualEmailEmail\"] }, ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Email\", Id: \"ManualEmailEmail\", Format: {}, ValidationMessage: \"Number Required and should be 10 characters long\", Mandatory : true, AssociatedId: { names: [\"ManualEmailName\"] }, ElementId: getUniqID() },\n            { Type: \"Button.Add.Email\", Title: \"Add contact manually\", Title2: \"Number\", ElementId: getUniqID() },\n            { Type: \"SearchableEmailListView\", Title: \"Name\", Id: \"NameEmailList\", Title2: \"Number\", Api: \"ProjectContacts\", ElementId: getUniqID() }\n          ])\n          break\n        case \"Smsregister\":\n          addToNewSection(elementName, [\n            { Type: \"SearchableListEntryDialogSMS\", Title: \"Select from Project Directory\", Id: \"ContactListSMS\", ValidationMessage: \"Permit Holder Required\", Api: \"ProjectContacts\", AssociatedId: { names: [\"ManualSMSName\", \"ManualSMSPhone\"] }, ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"OR\", ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"Add manually below\", ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Name\", Id: \"ManualSMSName\", Format: {}, ValidationMessage: \"Name Required\", Mandatory : true, AssociatedId: { names: [\"ManualSMSPhone\"] }, ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Phone No\", Id: \"ManualSMSPhone\", Format: {}, ValidationMessage: \"Number Required and should be 10 characters long\", Mandatory : true, AssociatedId: { names: [\"ManualSMSName\"] }, ElementId: getUniqID() },\n            { Type: \"Button.Add.SMS\", Title: \"Add contact manually\", Title2: \"Number\", ElementId: getUniqID() },\n            { Type: \"SearchableSMSListView\", Title: \"Name\", Title2: \"Number\", Id: \"NameSMSList\", Api: \"ProjectContacts\", ElementId: getUniqID() }\n          ])\n          break\n        case \"QRScanner.List\":\n          addToNewSection(elementName, [\n            // { Type: \"QRScanner.List\", Title: \"QR scanner list\", Id: \"QReSignOnOffScanner\", ElementId: getUniqID() }\n            {Type:\"QRScanner.List\", Title:\"QR scanner list\", EntryTitle:\"Please click to scan QR code\", Id:\"QReSignOnOffScanner\", ElementId: getUniqID()}\n          ])\n          break\n        case \"SignatureSignOnOff\":\n          addToNewSection(elementName, [\n          // addToCurrentSection(elementName, [\n            { Type: \"Text\", Title: \"Name\", Id: \"SignatureSignOnOffName\", Format: {}, ElementId: getUniqID() },\n            { Type: \"Signature\", Title: \"Please sign above the line\", Id: \"SignatureSignOnOffSignature\", ElementId: getUniqID() },\n            { Type: \"Button.Add.Signature\", Title: \"Add Signature\", ElementId: getUniqID() },\n            { Type: \"Register.Signatures\", Title: \"Signatures\", Id: \"SignatureSignOnOff\", ElementId: getUniqID() }\n          ])\n          break\n\n        default:\n          addToCurrentSection(elementName)\n          break\n      }\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Manage sections                       -----*\n  *----------------------------------------------------*/\n\n  function addToCurrentSection(pElement, pChildren) {\n    let newElement\n    if (pElement === \"Matrix\") newElement = getNewElement(pElement, true)\n    else if (pElement === \"Repeatable\") newElement = getNewElement(pElement, false, true)\n    else if (pElement === \"SignatureSignOnOff\") newElement = getNewElement(pElement, false, false, pChildren)\n    else if (pElement === \"QRScanner.List\") newElement = getNewElement(pElement, false, false, pChildren)\n    else newElement = getNewElement(pElement)\n\n    if (pElement === \"Trilean.Label\") {\n      initButtonsProperty(newElement)\n      initDefaultValues(newElement)\n    }\n    if (pElement === \"Text\") initFormatProperty(newElement)\n\n    if (json.Sections[currentSectionIndex] !== undefined) {\n      let currentElements = json.Sections[currentSectionIndex].Elements\n      currentElements.push(newElement)\n      setJson({ Sections: [...json.Sections] })\n    }\n    else {\n      let currentSection\n      currentSection = getNewSection()\n      currentSection.Elements.push(newElement)\n      setJson({ Sections: [...json.Sections, currentSection] })\n      if (currentSectionIndex > 0) setCurrentSectionIndex(currentSectionIndex + 1)\n    }\n  }\n\n  function addNewSection() {\n    setJson({ Sections: [...json.Sections, getNewSection()] })\n    if (json.Sections.length > 0) setCurrentSectionIndex(json.Sections.length)\n  }\n\n  function addToNewSection(pElement, pChildren) {\n    let newSection = getNewSection(pElement)\n\n    pChildren.forEach(child => newSection.Elements.push(child))\n\n    setJson({ Sections: [...json.Sections, newSection] })\n    if (json.Sections.length > 0) setCurrentSectionIndex(json.Sections.length)\n  }\n\n  function prependToFirstSection(pElement, pDefaultValues) {\n\n    const newElement = pDefaultValues\n    let currentSection = json.Sections[currentSectionIndex]\n\n    if (currentSection !== undefined) {\n      const firstSection = json.Sections[0].Elements\n      firstSection.unshift(newElement)\n\n      setJson({ Sections: [...json.Sections] })\n      setCurrentSectionIndex(0)\n      setSelectedControl(newElement)\n    }\n    else {\n      currentSection = getNewSection()\n      currentSection.Elements.unshift(newElement)\n      json.Sections.push(currentSection)\n      setJson({ Sections: [...json.Sections] })\n      setSelectedControl(newElement)\n    }\n  }\n\n  // TODO - REMOVE IDs ON THE DUPLICATED SECTION CONTROLS -----------------------------------------------------//\n  function duplicateSection() {\n\n    if (json.Sections[currentSectionIndex] !== undefined) {\n      // Deep copy\n      let sectionToDuplicate = JSON.parse(JSON.stringify(json.Sections[currentSectionIndex]))\n\n      sectionToDuplicate.SectionId = getUniqID(5)\n      sectionToDuplicate.Title = `${json.Sections[currentSectionIndex].Title}-copy`\n      sectionToDuplicate.Elements.forEach(item => {\n        if (item.ElementId === undefined || item.ElementId.length > 0) item.ElementId = getUniqID(11)\n        if (item.Id !== undefined) item.Id = `${item.Id}-copy`\n        if (item.Elements) {\n          item.Elements.forEach(subitem => {\n            if (subitem.ElementId === undefined || subitem.ElementId.length > 0) subitem.ElementId = getUniqID(11)\n            if (subitem.Id !== undefined) subitem.Id = `${subitem.Id}-copy`\n            if (subitem.Elements) {\n              subitem.Elements.forEach(subsubitem => {\n                if (subsubitem.Id !== undefined) subsubitem.Id = `${subsubitem.Id}-copy`\n                if (subsubitem.ElementId !== undefined) subsubitem.ElementId = getUniqID(11)\n              })\n            }\n\n          })\n        }\n      })\n\n      setJson({ Sections: [...json.Sections.slice(0, currentSectionIndex + 1), sectionToDuplicate, ...json.Sections.slice(currentSectionIndex + 1)] })\n      setCurrentSectionIndex(currentSectionIndex + 1)\n    }\n  }\n\n  function removeSection() {\n    let sections = json.Sections.filter((section, index) => {\n      if (index !== currentSectionIndex) return section\n      return false\n    })\n\n    setCurrentSectionIndex(json.Sections.length - 2)\n    setJson({ Sections: [...sections] })\n  }\n\n  function moveSectionLeft() {\n    if (currentSectionIndex > 0) {\n      const reorderedSections = json.Sections\n      reorderedSections.splice(currentSectionIndex, 0, reorderedSections.splice(currentSectionIndex - 1, 1)[0])\n      setCurrentSectionIndex(currentSectionIndex - 1)\n      setJson({ Sections: [...reorderedSections] })\n    }\n  }\n\n  function moveSectionRight() {\n    if (currentSectionIndex + 1 < json.Sections.length) {\n      const reorderedSections = json.Sections\n      reorderedSections.splice(currentSectionIndex, 0, reorderedSections.splice(currentSectionIndex + 1, 1)[0])\n      setCurrentSectionIndex(currentSectionIndex + 1)\n      setJson({ Sections: [...reorderedSections] })\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Utilities                             -----*\n  *----------------------------------------------------*/\n\n  function getNewSection(pTitle) {\n    const sectionTitle = pTitle === undefined ? `Section ${json.Sections.length + 1 || 1}` : pTitle\n    return (\n      {\n        SectionId: getUniqID(5),\n        Title: sectionTitle,\n        Elements: []\n      }\n    )\n  }\n\n  function getNewElement(pElement, pIsMatrix, pIsRepeatable, pChildren) {\n    // Repeatable children length are not known\n    const matrixElementsInit = [{\n      Type: \"GridRow\",\n      ElementId: \"odkwm-mjq3n\",\n      Elements: [\n        {}\n      ]\n    }]\n\n    if (pIsMatrix) {\n      return (\n        {\n          Type: pElement,\n          ElementId: getUniqID(11),\n          Columns: \"1\",\n          Rows: \"1\",\n          Elements: matrixElementsInit\n        }\n      )\n    }\n    if (pIsRepeatable) {\n      return (\n        {\n          Type: pElement,\n          ElementId: getUniqID(11),\n          Elements: []\n        }\n      )\n    }\n    else {\n      if (pChildren) {\n        return (\n          {\n            Type: pElement,\n            ElementId: getUniqID(11),\n            Elements: pChildren\n          }\n        )\n      }\n      else {\n        return (\n          {\n            Type: pElement,\n            ElementId: getUniqID(11),\n          }\n        )\n      }\n    }\n  }\n\n  function getElementFromElementId(pElementID) {\n    const currentSection = json.Sections[currentSectionIndex]\n    let foundItem = {}\n\n    currentSection.Elements.forEach(item => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach(subitem => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach(subsubitem => {\n              if (subsubitem.ElementId === pElementID) {\n                // console.log('---> Trouvé subsubitem: ', subsubitem)\n                foundItem = subsubitem\n              }\n            })\n\n          }\n\n          if (subitem.ElementId === pElementID) {\n            // console.log('---> Trouvé subitem: ', subitem)\n            foundItem = subitem\n          }\n\n        })\n      }\n\n      if (item.ElementId === pElementID) {\n        // console.log('---> Trouvé item: ', item)\n        foundItem = item\n      }\n\n    })\n    return foundItem\n  }\n\n  function getElementsFromId(pID) {\n    let foundItem = []\n    json.Sections.forEach(section => {\n      section.Elements.forEach(item => {\n        if (item.hasOwnProperty('Elements')) {\n\n          item.Elements.forEach(subitem => {\n            if (subitem.hasOwnProperty('Elements')) {\n\n              subitem.Elements.forEach(subsubitem => {\n                if (subsubitem.Id === pID) {\n                  // console.log('---> Trouvé subsubitem: ', subsubitem)\n                  foundItem.push(subsubitem)\n                }\n              })\n\n            }\n\n            if (subitem.Id === pID) {\n              // console.log('---> Trouvé subitem: ', subitem)\n              foundItem.push(subitem)\n            }\n\n          })\n        }\n\n        if (item.Id === pID) {\n          // console.log('---> Trouvé item: ', item)\n          foundItem.push(item)\n        }\n\n      })\n    })\n\n    return foundItem\n  }\n\n  function getCurrentSection() {\n    return json.Sections[currentSectionIndex]\n  }\n\n  function deleteElementFromId(pElementID) {\n    let jsonToUpdate = { ...json }\n    setSelectedControl({ ElementId: 0 })\n\n    const currentSection = jsonToUpdate.Sections[currentSectionIndex]\n\n    currentSection.Elements.forEach((item, index) => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach((subitem, subindex) => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach((subsubitem, subsubindex) => {\n              if (subsubitem.ElementId === pElementID) {\n                let elementsToFilter = [...subitem.Elements]\n                const elementsIndex = elementsToFilter.findIndex(subsubitem => subsubitem.ElementId === pElementID)\n                elementsToFilter[elementsIndex] = {}\n                subitem.Elements = elementsToFilter\n              }\n            })\n\n          }\n\n          if (subitem.ElementId === pElementID) {\n            let elementsToFilter = [...item.Elements]\n\n            elementsToFilter = elementsToFilter.filter(subitem => subitem.ElementId !== pElementID)\n            item.Elements = elementsToFilter\n          }\n\n        })\n      }\n\n      if (item.ElementId === pElementID) {\n        const newElements = currentSection.Elements.filter(item => item.ElementId !== pElementID)\n        currentSection.Elements = newElements\n      }\n\n    })\n\n    setJson(jsonToUpdate)\n\n  }\n\n  function getParentElementFromId(pElementID) {\n    const currentSection = json.Sections[currentSectionIndex]\n    let foundItem = {}\n\n    currentSection.Elements.forEach(item => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach(subitem => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach(subsubitem => {\n              if (subsubitem.ElementId === pElementID) {\n                // console.log('---> Trouvé subsubitem: ', subsubitem)\n                foundItem = subitem\n              }\n            })\n\n          }\n\n          if (subitem.ElementId === pElementID) {\n            // console.log('---> Trouvé subitem: ', subitem)\n            foundItem = item\n          }\n\n        })\n      }\n\n      if (item.ElementId === pElementID) {\n        // console.log('---> Trouvé item: ', item)\n        foundItem = currentSection.Elements\n      }\n\n    })\n    return foundItem\n  }\n\n  function validateId(pID) {\n    if (getElementsFromId(pID).length > 0) setIsValidId(false)\n    else setIsValidId(true)\n  }\n\n  function initButtonsProperty(pElement) {\n    const buttons = [{\n      Button: \"Yes\",\n      Label: \"Yes\",\n      BackgroundColor: \"#D3D3D3\",\n      BackgroundColorSelected: \"#66ff33\"\n    },{\n      Button: \"No\",\n      Label: \"No\",\n      BackgroundColor: \"#D3D3D3\",\n      BackgroundColorSelected: \"#d63a3a\"\n    },{\n      Button: \"NA\",\n      Label: \"Not Applicable\",\n      BackgroundColor: \"#D3D3D3\",\n      BackgroundColorSelected: \"#808080\"\n    }]\n    pElement.Buttons = buttons\n  }\n\n  function initFormatProperty(pElement) {\n    pElement.Format = {}\n  }\n  function initDefaultValues(pElement) {\n    if (pElement.Type === \"Trilean.Label\") {\n      pElement.Title = \"comment\"\n      pElement.CommentValue = \"comment written here\"\n    }\n  }\n\n  /**--------------------------------------------------**\n   * @desc - Return building Panel                 -----*\n   *----------------------------------------------------*/\n  function getHTML() {\n    if (json.Sections.length > 0) {\n      let currentSectionToRender = json.Sections[currentSectionIndex]\n      if (currentSectionToRender.Elements.length > 0) return currentSectionToRender.Elements.map(item => {\n        return getControl(item)\n      })\n    }\n  }\n\n  function getControl(pItem) {\n    let id = pItem.ElementId\n    return <Control\n      controlObj={pItem}\n      selectedControl={selectedControl}\n      onClickHandler={(control) => {\n        // Select control from control's child\n        if (control.ElementId) onSelectControlHandler(control)\n        // Select control\n        else onSelectControlHandler(pItem)\n      }}\n      moveUp={(control, pIsSubControl) => moveUpHandler(control, pIsSubControl)}\n      moveDown={(control, pIsSubControl) => moveDownHandler(control, pIsSubControl)}\n      delete={(control) => deleteHandler(control)}\n      key={id} />\n  }\n\n  function onSelectControlHandler(pControl) {\n    setSelectedControl(pControl)\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Build the HTML from JSON              -----*\n  *----------------------------------------------------*/\n  function onJsonChangeHandler(e) {\n    let currentValue = JSON.parse(document.getElementById('json-output').value)\n    setJson(currentValue)\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Build the Panels tabs                 -----*\n  *----------------------------------------------------*/\n  let sectionNavigation = () => {\n    if (json.Sections.length > 0) {\n      return json.Sections.map((section, index) => {\n        let sectionTitle = (json.Sections[index] !== undefined) ? json.Sections[index].Title : ''\n        return <button\n          key={index}\n          onClick={() => setCurrentSectionIndex(index)}\n          className={`tab-section ${currentSectionIndex === index ? 'tab-active' : ''}`}\n        >{sectionTitle}</button>\n      })\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Manipulate the JSON                   -----*\n  *----------------------------------------------------*/\n\n  function moveUpHandler(pControl, pIsSubControl) {\n    const parentElement = getParentElementFromId(pControl.ElementId)\n    moveElement(pControl, parentElement, 'moveUp', pIsSubControl)\n\n  }\n  function moveDownHandler(pControl, pIsSubControl) {\n    const parentElement = getParentElementFromId(pControl.ElementId)\n    moveElement(pControl, parentElement, 'moveDown', pIsSubControl)\n  }\n\n  function moveElement(pControl, pParentElement, pDirection, pIsSubControl) {\n    const container = (!pIsSubControl) ? pParentElement : pParentElement.Elements\n\n    const position = container.findIndex(item => item.ElementId === pControl.ElementId)\n    switch (pDirection) {\n      case 'moveUp':\n        if (position > 0) {\n          container.splice(position - 1, 0, container.splice(position, 1)[0])\n        }\n        break\n      case 'moveDown':\n        if (position < container.length - 1) {\n          container.splice(position + 1, 0, container.splice(position, 1)[0])\n        }\n        break\n      default:\n        break\n    }\n    setJson({ ...json })\n  }\n\n  function deleteHandler(pControl) {\n\n    deleteElementFromId(pControl.ElementId)\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Build the properties Panel            -----*\n  *----------------------------------------------------*/\n\n  function getPropertiesPanel(pSelectedControl) {\n    const basicPropertiesIDs = [\"DocumentSummaryGrid\",\n    \"Register.Signatures\"\n    ]\n\n    const buttonPropertiesIDs = [\"Button.Submit.Register\",\n      \"Button.View.Document\",\n      \"Button.Closeout\",\n      \"Button.Send.SMS\",\n      \"Button.Send.Email\",\n      // \"Button.Add.Email\",\n      // \"Button.Add.SMS\",\n      \"Button.Add.Signature\"\n    ]\n\n    const signaturePropertiesIDs = [\"Signature\",\n      \"Signature.Date\",\n      \"Signature.DateTime\"\n    ]\n\n    const booleanPropertiesIDs = [\"SingleBoolean\",\n      \"Boolean\"\n    ]\n\n    const imagePropertiesIDs = [\"Image\",\n      \"Image.Single\"\n    ]\n\n    const qrscannerPropertiesIDs = [\"QRScanner\",\n      \"QRScanner.List\"\n    ]\n\n    let keyWordsList = []\n\n    const globalProperties = <>\n      <div className=\"properties-form-row\">\n        <label htmlFor=\"identifier\">ID</label>\n        <input type=\"text\" name=\"identifier\" id=\"identifier\" value={selectedControl.Id || ''} onChange={(e) => setControlID(e)} />\n      </div>\n      <div className=\"properties-form-row\">\n        <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} />\n      </div>\n      <div className=\"properties-form-row\">\n        <label htmlFor=\"isvisible\">Is Visible</label>\n        <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n      </div>\n    </>\n\n    if (pSelectedControl.Type === \"Repeatable\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n      </div>\n    }\n\n    // PANEL FOR SECTION\n    if (pSelectedControl.Type === undefined) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"title\">Title</label>\n          <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} />\n        </div>\n      </div>\n    }\n\n    if (basicPropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n        {globalProperties}\n      </div>\n    }\n\n    if (booleanPropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hasunderLine\">Has UnderLine</label>\n          <input type=\"checkbox\" name=\"hasunderLine\" id=\"hasunderLine\" checked={Boolean(selectedControl.HasUnderLine) || false} onChange={(e) => setControlHasUnderLine(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n          <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"collapsible\">Details Collapsible</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n            <label htmlFor=\"iscollapsed\">Details Is Collapsed</label>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">Comment Title</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n      </div>\n    }\n\n    if (buttonPropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n        {/* <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} /> */}\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"isvisible\">IsVisible</label>\n            <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"isbuttondisabled\">IsButtonDisabled</label>\n            <input type=\"checkbox\" name=\"isbuttondisabled\" id=\"isbuttondisabled\" checked={Boolean(selectedControl.IsButtonDisabled) || false} onChange={(e) => setControlIsButtonDisabled(e)} />\n          </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Button.Add.Email\" || pSelectedControl.Type === \"Button.Add.SMS\") {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"title2\">Title 2</label>\n            <input type=\"text\" name=\"title2\" id=\"title2\" value={selectedControl.Title2 || ''} onChange={(e) => setControlTitle2(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"isvisible\">IsVisible</label>\n            <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"isbuttondisabled\">IsButtonDisabled</label>\n            <input type=\"checkbox\" name=\"isbuttondisabled\" id=\"isbuttondisabled\" checked={Boolean(selectedControl.IsButtonDisabled) || false} onChange={(e) => setControlIsButtonDisabled(e)} />\n          </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Matrix\") {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"identifier\">ID</label>\n            <input type=\"text\" name=\"identifier\" id=\"identifier\" value={selectedControl.Id || ''} onChange={(e) => setControlID(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"columns\">Columns</label>\n            <input type=\"number\" name=\"columns\" id=\"columns\" value={selectedControl.Columns || ''} onChange={(e) => setControlColumns(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"rows\">Rows</label>\n            <input type=\"number\" name=\"rows\" id=\"rows\" value={selectedControl.Rows || ''} onChange={(e) => setControlRows(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"isvisible\">IsVisible</label>\n            <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n          </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Document.TableOfContents\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"API\") {\n      if (selectedControl.Keywords !== undefined) {\n          keyWordsList = selectedControl.Keywords.map((keyword, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{keyword}</div>\n            <div onClick={() => deleteKeyword(keyword)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <select name=\"api\" id=\"api\" value={selectedControl.Api || 0} onChange={(e) => setControlApi(e)}>\n            <option value=\"Select an Api\">Select an Api</option>\n            <option value=\"ProjectContacts\">- Project Contacts</option>\n            <option value=\"GlobalContacts\">- Global Contacts</option>\n            <option value=\"ProjectCompany\">- Project Company</option>\n            <option value=\"ABS\">- ABS</option>\n            <option value=\"CBS\">- CBS</option>\n            <option value=\"DBS\">- DBS</option>\n            <option value=\"FBS\">- FBS</option>\n            <option value=\"TBS\">- TBS</option>\n            <option value=\"PBS\">- PBS</option>\n            <option value=\"PCBS\">- PCBS</option>\n            <option value=\"WBS\">- WBS</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includephonenumber\">Include Phone Number</label>\n            <input type=\"checkbox\" name=\"includephonenumber\" id=\"includephonenumber\" checked={Boolean(selectedControl.IncludePhoneNumber) || false} onChange={(e) => setControlIncludePhoneNumber(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includeemail\">Include Email</label>\n            <input type=\"checkbox\" name=\"includeemail\" id=\"includeemail\" checked={Boolean(selectedControl.IncludeEmail) || false} onChange={(e) => setControlIncludeEmail(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectCompany\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includetitle\">Include Title</label>\n            <input type=\"checkbox\" name=\"includetitle\" id=\"includetitle\" checked={Boolean(selectedControl.IncludeTitle) || false} onChange={(e) => setControlIncludeTitle(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectCompany\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includebusinessnumber\">Include Business Number</label>\n            <input type=\"checkbox\" name=\"includebusinessnumber\" id=\"includebusinessnumber\" checked={Boolean(selectedControl.IncludeBusinessNumber) || false} onChange={(e) => setControlIncludeBusinessNumber(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectCompany\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includeabbreviation\">Include Abbreviation</label>\n            <input type=\"checkbox\" name=\"includeabbreviation\" id=\"includeabbreviation\" checked={Boolean(selectedControl.IncludeAbbreviation) || false} onChange={(e) => setControlIncludeAbbreviation(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\" && selectedControl.Api !== \"ProjectCompany\"  && selectedControl.Api !== \"GlobalContacts\") ? '' : 'hidden'}`}>\n            <label htmlFor=\"includetitle\">Include Title</label>\n            <input type=\"checkbox\" name=\"includetitle\" id=\"includetitle\" checked={Boolean(selectedControl.IncludeTitle) || false} onChange={(e) => setControlIncludeTitle(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\" && selectedControl.Api !== \"ProjectCompany\"  && selectedControl.Api !== \"GlobalContacts\") ? '' : 'hidden'}`}>\n            <label htmlFor=\"includecode\">Include Code</label>\n            <input type=\"checkbox\" name=\"includecode\" id=\"includecode\" checked={Boolean(selectedControl.IncludeCode) || false} onChange={(e) => setControlIncludeCode(e)} />\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"keywords\">Keywords</label>\n          <div className=\"properties-form-row-container\">\n            <div>\n              <input type=\"text\" name=\"keywords\" id=\"keywords\" value={currentKeyword || ''} onChange={(e) => setCurrentKeyword(e.target.value)} />\n            </div>\n            <div>\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlKeywords()}>Add</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {keyWordsList}\n        </div>\n       </div>\n    }\n\n    if (pSelectedControl.Type === \"SearchableSMSListView\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <input type=\"text\" name=\"api\" id=\"api\" value={selectedControl.Api || ''} onChange={(e) => setControlApiValue(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"SearchableEmailListView\" || pSelectedControl.Type === \"SearchableSMSListView\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n            <label htmlFor=\"title2\">Title 2</label>\n            <input type=\"text\" name=\"title2\" id=\"title2\" value={selectedControl.Title2 || ''} onChange={(e) => setControlTitle2(e)} />\n          </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <input type=\"text\" name=\"api\" id=\"api\" value={selectedControl.Api || ''} onChange={(e) => setControlApiValue(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"SearchableListEntryDialogEmail\") {\n\n      let associatedIds\n      if (selectedControl.AssociatedId !== undefined) {\n        associatedIds = selectedControl.AssociatedId.names.map((id, index) => {\n        return <div className=\"properties-form-row-container keyword-row\" key={index}>\n          <div>{id}</div>\n          <div onClick={() => deleteIdValue(id)}><FontAwesomeIcon\n            icon={faTrashAlt}\n            title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      let idsList = idList.map((id, index) => {\n        return <option value={id} key={id}>{id}</option>\n      })\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <input type=\"text\" name=\"api\" id=\"api\" value={selectedControl.Api || ''} onChange={(e) => setControlApiValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Associated Id</label>\n          <div className=\"properties-form-row-container\">\n            <select name=\"defaultvalue\" id=\"defaultvalue\" value={0} onChange={(e) => setControlAssociatedId(e)}>\n              <option value=\"\" key=\"none\">Select Dependancy</option>\n              {idsList}\n            </select>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {associatedIds}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"SearchableListEntryDialogSMS\") {\n\n      let associatedIds\n      if (selectedControl.AssociatedId !== undefined) {\n        associatedIds = selectedControl.AssociatedId.names.map((id, index) => {\n        return <div className=\"properties-form-row-container keyword-row\" key={index}>\n          <div>{id}</div>\n          <div onClick={() => deleteIdValue(id)}><FontAwesomeIcon\n            icon={faTrashAlt}\n            title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      let idsList = idList.map((id, index) => {\n        return <option value={id} key={id}>{id}</option>\n      })\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <input type=\"text\" name=\"api\" id=\"api\" value={selectedControl.Api || ''} onChange={(e) => setControlApiValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Associated Id</label>\n          <div className=\"properties-form-row-container\">\n            <select name=\"defaultvalue\" id=\"defaultvalue\" value={0} onChange={(e) => setControlAssociatedId(e)}>\n              <option value=\"\" key=\"none\">Select Dependancy</option>\n              {idsList}\n            </select>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {associatedIds}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Checkbox\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n            <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">True</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">False</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">Comment Title</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hasunderLine\">Has UnderLine</label>\n          <input type=\"checkbox\" name=\"hasunderLine\" id=\"hasunderLine\" checked={Boolean(selectedControl.HasUnderLine) || false} onChange={(e) => setControlHasUnderLine(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"collapsible\">Details Collapsible</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n            <label htmlFor=\"iscollapsed\">Details Is Collapsed</label>\n          </div>\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"List.Multicontrol\") {\n      let dataList = []\n      if (selectedControl.Data !== undefined) {\n        dataList = selectedControl.Data.map((data, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{data}</div>\n            <div onClick={() => deleteData(data)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      else selectedControl.Data = []\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n          <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"data\">Data</label>\n          <div className=\"properties-form-row-container\">\n              <input type=\"text\" name=\"data\" id=\"data\" value={currentData || ''} onChange={(e) => setCurrentData(e.target.value)} />\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlData()}>Add</button>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {dataList}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"List.Single\") {\n      let dataList = []\n      if (selectedControl.Data !== undefined) {\n        dataList = selectedControl.Data.map((data, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{data}</div>\n            <div onClick={() => deleteData(data)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      else selectedControl.Data = []\n\n      const defaultValueList = selectedControl.Data.map((data, index) => <option value={data} key={index}>{data}</option>)\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n            <select name=\"defaultvalue\" id=\"defaultvalue\" value={selectedControl.Value || 0} onChange={(e) => setControlValue(e)}>\n              <option value=\"\" key=\"none\">---</option>\n              {defaultValueList}\n            </select>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"data\">Data</label>\n          <div className=\"properties-form-row-container\">\n              <input type=\"text\" name=\"data\" id=\"data\" value={currentData || ''} onChange={(e) => setCurrentData(e.target.value)} />\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlData()}>Add</button>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {dataList}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"List.Multiple\") {\n      let dataList = []\n      if (selectedControl.Data !== undefined) {\n        dataList = selectedControl.Data.map((data, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{data}</div>\n            <div onClick={() => deleteData(data)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      else selectedControl.Data = []\n\n      const defaultValueList = selectedControl.Data.map((data, index) => <option value={data} key={index}>{data}</option>)\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n            <select name=\"defaultvalue\" id=\"defaultvalue\" value={selectedControl.Value || 0} onChange={(e) => setControlValue(e)}>\n              <option value=\"\" key=\"none\">---</option>\n              {defaultValueList}\n            </select>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"data\">Data</label>\n          <div className=\"properties-form-row-container\">\n              <input type=\"text\" name=\"data\" id=\"data\" value={currentData || ''} onChange={(e) => setCurrentData(e.target.value)} />\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlData()}>Add</button>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {dataList}\n        </div>\n      </div>\n    }\n\n    if (imagePropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"size\">Size</label>\n          <select name=\"size\" id=\"size\" value={selectedControl.Size || 0} onChange={(e) => setControlSize(e)}>\n            <option value=\"\"></option>\n            <option value=\"Thumbnail\">Thumbnail</option>\n            <option value=\"Small\">Small</option>\n            <option value=\"Medium\">Medium</option>\n            <option value=\"Large\">Large</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"galleryextrack\">GalleryExtrack</label>\n          <input type=\"checkbox\" name=\"galleryextrack\" id=\"galleryextrack\" checked={Boolean(selectedControl.GalleryExtrack) || false} onChange={(e) => setControlGalleryExtrack(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"galleryphone\">GalleryPhone</label>\n          <input type=\"checkbox\" name=\"galleryphone\" id=\"galleryphone\" checked={Boolean(selectedControl.GalleryPhone) || false} onChange={(e) => setControlGalleryPhone(e)} />\n        </div>\n      </div>\n    }\n\n    // QRScanner.List is a control itself...\n    if (qrscannerPropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Label\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"fontsize\">Font Size</label>\n          <input type=\"number\" name=\"fontsize\" id=\"fontsize\" value={selectedControl.FontSize || 0} onChange={(e) => setControlFontSize(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"margin\">Margin</label>\n          <input type=\"number\" name=\"margin\" id=\"margin\" value={selectedControl.Margin || 0} onChange={(e) => setControlMargin(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"fontattribute\">Font Attributes</label>\n          <select name=\"fontattribute\" id=\"fontattribute\" value={selectedControl.FontAttributes || 0} onChange={(e) => setControlFontAttributes(e)}>\n            <option value=\"\"></option>\n            <option value=\"Bold\">Bold</option>\n            <option value=\"Italic\">Italic</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hasunderLine\">Has UnderLine</label>\n          <input type=\"checkbox\" name=\"hasunderLine\" id=\"hasunderLine\" checked={Boolean(selectedControl.HasUnderLine) || false} onChange={(e) => setControlHasUnderLine(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Text\") {\n      if (selectedControl.Keywords !== undefined) {\n        keyWordsList = selectedControl.Keywords.map((keyword, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{keyword}</div>\n            <div onClick={() => deleteKeyword(keyword)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      if (selectedControl.Format === undefined) selectedControl.Format = {}\n\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"value\">Value</label>\n          <input type=\"text\" name=\"value\" id=\"value\" value={selectedControl.Value || ''} disabled={Boolean(!selectedControl.IsEnabled) || false} onChange={(e) => setControlValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isenabled\">Read Only</label>\n          <input type=\"checkbox\" name=\"isenabled\" id=\"isenabled\" checked={selectedControl.IsEnabled !== undefined ? Boolean(!selectedControl.IsEnabled): false} onChange={(e) => setControlIsEnabled(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"warningmessage\">Warning Message</label>\n          <input type=\"text\" name=\"warningmessage\" id=\"warningmessage\" value={selectedControl.WarningMessage || ''} disabled={Boolean(!selectedControl.Warning) || false} onChange={(e) => setControlWarningMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"warningvalue\">Warning</label>\n          <input type=\"checkbox\" name=\"warningvalue\" id=\"warningvalue\" checked={Boolean(selectedControl.Warning) || false} onChange={(e) => setControlWarning(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n\n        <div className=\"properties-form-row\">\n          <hr/>\n          <h3>Format</h3>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"keyboard\">Keyboard</label>\n          <select name=\"keyboard\" id=\"keyboard\" value={selectedControl.Format.Keyboard || 0} onChange={(e) => setControlKeyboard(e)}>\n            <option value=\"\"></option>\n            <option value=\"Chat\">Chat</option>\n            <option value=\"Default\">Default</option>\n            <option value=\"Email\">Email</option>\n            <option value=\"Numeric\">Numeric</option>\n            <option value=\"Plain\">Plain</option>\n            <option value=\"Telephone\">Telephone</option>\n            <option value=\"Text\">Text</option>\n            <option value=\"Url\">Url</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"varchar\">Restricted Number of Character</label>\n          <input type=\"number\" name=\"varchar\" id=\"varchar\" value={selectedControl.Format.VarChar || 0} onChange={(e) => setControlVarChar(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"lines\">Lines to Display</label>\n          <input type=\"number\" name=\"lines\" id=\"lines\" value={selectedControl.Format.Lines || 0} onChange={(e) => setControlLines(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"lines\">Decimal</label>\n          <input type=\"number\" name=\"lines\" id=\"lines\" value={selectedControl.Format.Decimal || 0} onChange={(e) => setControlDecimal(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"lines\">Minimum</label>\n          <input type=\"number\" name=\"lines\" id=\"lines\" value={selectedControl.Format.Min || 0} onChange={(e) => setControlMin(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"maximum\">maximum</label>\n          <input type=\"number\" name=\"maximum\" id=\"maximum\" value={selectedControl.Format.Max || 0} onChange={(e) => setControlMax(e)} />\n        </div>\n\n\n        <div className=\"properties-form-row\">\n          <hr/>\n          <label htmlFor=\"keywords\">Keywords</label>\n          <div className=\"properties-form-row-container\">\n            <div>\n              <input type=\"text\" name=\"keywords\" id=\"keywords\" value={currentKeyword || ''} onChange={(e) => setCurrentKeyword(e.target.value)} />\n            </div>\n            <div>\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlKeywords()}>Add</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {keyWordsList}\n        </div>\n\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Trilean\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hasunderLine\">Has UnderLine</label>\n          <input type=\"checkbox\" name=\"hasunderLine\" id=\"hasunderLine\" checked={Boolean(selectedControl.HasUnderLine) || false} onChange={(e) => setControlHasUnderLine(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"collapsible\">Details Collapsible</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n            <label htmlFor=\"iscollapsed\">Details Is Collapsed</label>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n            <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"na\">Na</label>\n              <input type=\"radio\" name=\"value\" id=\"na\" value=\"3\" checked={selectedControl.Value === \"3\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hidena\">Hide N/A</label>\n          <input type=\"checkbox\" name=\"hidena\" id=\"hidena\" checked={Boolean(selectedControl.HideNA) || false} onChange={(e) => setControlHideNA(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">Comment Title</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Trilean.Label\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hasunderLine\">Has UnderLine</label>\n          <input type=\"checkbox\" name=\"hasunderLine\" id=\"hasunderLine\" checked={Boolean(selectedControl.HasUnderLine) || false} onChange={(e) => setControlHasUnderLine(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <hr/>\n          <h3>Button Yes</h3>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"buttonyeslabel\">Label</label>\n          <input type=\"text\" name=\"buttonyeslabel\" id=\"buttonyeslabel\" value={selectedControl.Buttons[0].Label || ''} onChange={(e) => setControlButtonLabel(e, 0)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolor\">Background Color</label>\n          <input type=\"color\" name=\"bgcolor\" id=\"bgcolor\" value={selectedControl.Buttons[0].BackgroundColor || ''} onChange={(e) => setControlBackgroundColor(e, 0)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolorselected\">Background Color Selected</label>\n          <input type=\"color\" name=\"bgcolorselected\" id=\"bgcolorselected\" value={selectedControl.Buttons[0].BackgroundColorSelected || ''} onChange={(e) => setControlBackgroundColorSelected(e, 0)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <hr/>\n          <h3>Button No</h3>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"buttonyeslabel\">Label</label>\n          <input type=\"text\" name=\"buttonyeslabel\" id=\"buttonyeslabel\" value={selectedControl.Buttons[1].Label || ''} onChange={(e) => setControlButtonLabel(e, 1)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolor\">Background Color</label>\n          <input type=\"color\" name=\"bgcolor\" id=\"bgcolor\" value={selectedControl.Buttons[1].BackgroundColor || ''} onChange={(e) => setControlBackgroundColor(e, 1)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolorselected\">Background Color Selected</label>\n          <input type=\"color\" name=\"bgcolorselected\" id=\"bgcolorselected\" value={selectedControl.Buttons[1].BackgroundColorSelected || ''} onChange={(e) => setControlBackgroundColorSelected(e, 1)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <hr/>\n          <h3>Button NA</h3>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"buttonyeslabel\">Label</label>\n          <input type=\"text\" name=\"buttonyeslabel\" id=\"buttonyeslabel\" value={selectedControl.Buttons[2].Label || ''} onChange={(e) => setControlButtonLabel(e, 2)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolor\">Background Color</label>\n          <input type=\"color\" name=\"bgcolor\" id=\"bgcolor\" value={selectedControl.Buttons[2].BackgroundColor || ''} onChange={(e) => setControlBackgroundColor(e, 2)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolorselected\">Background Color Selected</label>\n          <input type=\"color\" name=\"bgcolorselected\" id=\"bgcolorselected\" value={selectedControl.Buttons[2].BackgroundColorSelected || ''} onChange={(e) => setControlBackgroundColorSelected(e, 2)} />\n        </div>\n\n        <div className=\"properties-form-row\">\n          <hr/>\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"collapsible\">Details Collapsible</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n            <label htmlFor=\"iscollapsed\">Details Is Collapsed</label>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n          <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"na\">Na</label>\n              <input type=\"radio\" name=\"value\" id=\"na\" value=\"3\" checked={selectedControl.Value === \"3\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hidena\">Hide N/A</label>\n          <input type=\"checkbox\" name=\"hidena\" id=\"hidena\" checked={Boolean(selectedControl.HideNA) || false} onChange={(e) => setControlHideNA(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n      </div>\n    }\n\n    if (signaturePropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">ValidationMessage</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Date\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Day</label>\n          <input type=\"number\" name=\"Addday\" id=\"addday\" value={selectedControl.AddDay || 0} onChange={(e) => setControlAddDay(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Month</label>\n          <input type=\"number\" name=\"addmonth\" id=\"addmonth\" value={selectedControl.AddMonth || 0} onChange={(e) => setControlAddMonth(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"datevalue\">Date Value</label>\n          <input type=\"date\" name=\"datevalue\" id=\"datevalue\" value={selectedControl.DateValue || ''} onChange={(e) => setControlDateValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isBlank\">Is Blank</label>\n          <input type=\"checkbox\" name=\"isBlank\" id=\"isBlank\" checked={Boolean(selectedControl.IsBlank) || false} onChange={(e) => setControlDateIsBlank(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"formatdatetime\">Format DateTime</label>\n          <select name=\"formatdatetime\" id=\"formatdatetime\" value={selectedControl.FormatDateTime || 0} onChange={(e) => setControlFormatDateTime(e)}>\n            <option value=\"\"></option>\n            <option value=\"yyyy-MM-dd\">yyyy-MM-dd</option>\n            <option value=\"yyyy-MM-dd, ddd\">yyyy-MM-dd, ddd</option>\n            <option value=\"yyyy-MMM-dd\">yyyy-MMM-dd</option>\n            <option value=\"yyyy-MMM-dd, ddd\">yyyy-MMM-dd, ddd</option>\n            <option value=\"dd-MM-yyyy\">dd-MM-yyyy</option>\n            <option value=\"ddd, dd-MM-yyyy\">ddd, dd-MM-yyyy</option>\n            <option value=\"dd-MMM-yyyy\">dd-MMM-yyyy</option>\n            <option value=\"ddd, dd-MMM-yyyy\">ddd, dd-MMM-yyyy</option>\n            <option value=\"yy-MM-dd\">yy-MM-dd</option>\n            <option value=\"yy-MM-dd, ddd\">yy-MM-dd, ddd</option>\n            <option value=\"yy-MMM-dd\">yy-MMM-dd</option>\n            <option value=\"yy-MMM-dd, ddd\">yy-MMM-dd, ddd</option>\n            <option value=\"dd-MM-yy\">dd-MM-yy</option>\n            <option value=\"ddd, dd-MM-yy\">ddd, dd-MM-yy</option>\n            <option value=\"dd-MMM-yy\">dd-MMM-yy</option>\n            <option value=\"ddd, dd-MMM-yy\">ddd, dd-MMM-yy</option>\n            <option value=\"MMM-dd\">MMM-dd</option>\n            <option value=\"MMM-dd, ddd\">MMM-dd, ddd</option>\n            <option value=\"dd-MMM\">dd-MMM</option>\n            <option value=\"ddd, dd-MMM\">ddd, dd-MMM</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"islabelvisible\">Is Label Visible</label>\n          <input type=\"checkbox\" name=\"islabelvisible\" id=\"islabelvisible\" checked={Boolean(selectedControl.IsLabelVisible) || false} onChange={(e) => setControlIsLabelVisible(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n      </div>\n    }\n    if (pSelectedControl.Type === \"Time\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Hour</label>\n          <input type=\"number\" name=\"addhour\" id=\"addhour\" value={selectedControl.AddHour || 0} onChange={(e) => setControlAddHour(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"timevalue\">Time Value</label>\n          <input type=\"time\" name=\"timevalue\" id=\"timevalue\" value={selectedControl.TimeValue || ''} onChange={(e) => setControlTimeValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isBlank\">Is Blank</label>\n          <input type=\"checkbox\" name=\"isBlank\" id=\"isBlank\" checked={Boolean(selectedControl.IsBlank) || false} onChange={(e) => setControlTimeIsBlank(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"formatdatetime\">Format DateTime</label>\n          <select name=\"formatdatetime\" id=\"formatdatetime\" value={selectedControl.FormatDateTime || 0} onChange={(e) => setControlFormatDateTime(e)}>\n            <option value=\"\"></option>\n            <option value=\"hh:mm tt\">hh:mm tt</option>\n            <option value=\"HH:mm\">HH:mm</option>\n            <option value=\"HH:mm:ss\">HH:mm:ss</option>\n            <option value=\"hh:mm:ss tt\">hh:mm:ss tt</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"islabelvisible\">Is Label Visible</label>\n          <input type=\"checkbox\" name=\"islabelvisible\" id=\"islabelvisible\" checked={Boolean(selectedControl.IsLabelVisible) || false} onChange={(e) => setControlIsLabelVisible(e)} />\n        </div>\n      </div>\n    }\n    if (pSelectedControl.Type === \"DateTime\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Hour</label>\n          <input type=\"number\" name=\"addhour\" id=\"addhour\" value={selectedControl.AddHour || 0} onChange={(e) => setControlAddHour(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Day</label>\n          <input type=\"number\" name=\"Addday\" id=\"addday\" value={selectedControl.AddDay || 0} onChange={(e) => setControlAddDay(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Month</label>\n          <input type=\"number\" name=\"addmonth\" id=\"addmonth\" value={selectedControl.AddMonth || 0} onChange={(e) => setControlAddMonth(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"datetimevalue\">DateTime Value</label>\n          <input type=\"date\" name=\"datetimevalue\" id=\"datetimevalue\" value={selectedControl.DateValue || ''} onChange={(e) => setControlDateTimeDateValue(e)} />\n          <input type=\"time\" name=\"timevalue\" id=\"timevalue\" value={selectedControl.TimeValue || ''} onChange={(e) => setControlDateTimeTimeValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isBlank\">Is Blank</label>\n          <input type=\"checkbox\" name=\"isBlank\" id=\"isBlank\" checked={Boolean(selectedControl.IsBlank) || false} onChange={(e) => setControlDateTimeIsBlank(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"formatdatetime\">Format DateTime</label>\n          <select name=\"formatdatetime\" id=\"formatdatetime\" value={selectedControl.FormatDateTime || 0} onChange={(e) => setControlFormatDateTime(e)}>\n            <option value=\"\"></option>\n            <option value=\"yyyy-MM-dd hh:mm tt\">yyyy-MM-dd hh:mm tt</option>\n            <option value=\"yyyy-MM-dd HH:mm\">yyyy-MM-dd HH:mm</option>\n            <option value=\"yyyy-MMM-dd hh:mm tt\">yyyy-MMM-dd hh:mm tt</option>\n            <option value=\"yyyy-MMM-dd HH:mm\">yyyy-MMM-dd HH:mm</option>\n            <option value=\"yy-MM-dd hh:mm tt\">yy-MM-dd hh:mm tt</option>\n            <option value=\"yy-MM-dd HH:mm\">yy-MM-dd HH:mm</option>\n            <option value=\"yy-MMM-dd hh:mm tt\">yy-MMM-dd hh:mm tt</option>\n            <option value=\"yy-MMM-dd HH:mm\">yy-MMM-dd HH:mm</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"islabelvisible\">Is Label Visible</label>\n          <input type=\"checkbox\" name=\"islabelvisible\" id=\"islabelvisible\" checked={Boolean(selectedControl.IsLabelVisible) || false} onChange={(e) => setControlIsLabelVisible(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">ValidationMessage</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n      </div>\n    }\n  }\n\n  function deleteKeyword(pKeyword) {\n    const keywordIndex = selectedControl.Keywords.findIndex(item => item === pKeyword)\n    delete selectedControl.Keywords[keywordIndex]\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function deleteIdValue(pKeyword) {\n    const keywordIndex = selectedControl.AssociatedId.names.findIndex(item => item === pKeyword)\n    delete selectedControl.AssociatedId.names[keywordIndex]\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function deleteData(pData) {\n    const dataIndex = selectedControl.Data.findIndex(item => item === pData)\n    delete selectedControl.Data[dataIndex]\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function setControlID(pEvent) {\n    const IDvalue = pEvent.target.value\n    setIdList([...idList, IDvalue])\n    validateId(IDvalue)\n\n    selectedControl.Id = IDvalue\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlTitle(pEvent) {\n    selectedControl.Title = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlTitle2(pEvent) {\n    selectedControl.Title2 = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function setControlVarChar(pEvent) {\n    selectedControl.Format.VarChar = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlLines(pEvent) {\n    selectedControl.Format.Lines = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDecimal(pEvent) {\n    selectedControl.Format.Decimal = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMin(pEvent) {\n    selectedControl.Format.Min = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMax(pEvent) {\n    selectedControl.Format.Max = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlHasUnderLine(pEvent) {\n    selectedControl.HasUnderLine = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsVisible(pEvent) {\n    selectedControl.IsVisible = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlFontSize(pEvent) {\n    selectedControl.FontSize = Number(pEvent.target.value)\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMargin(pEvent) {\n    selectedControl.Margin = Number(pEvent.target.value)\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlFontAttributes(pEvent) {\n    if (pEvent.target.value !== '') selectedControl.FontAttributes = pEvent.target.value\n    else delete selectedControl.FontAttributes\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlSize(pEvent) {\n    selectedControl.Size = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlApi(pEvent) {\n    [\"IncludeAbbreviation\",\n      \"IncludePhoneNumber\",\n      \"IncludeEmail\",\n      \"IncludeTitle\",\n      \"IncludeBusinessNumber\",\n      \"IncludeTitle\",\n      \"IncludeCode\"\n    ].forEach(option => {\n      if (selectedControl[option]) delete selectedControl[option]\n    })\n\n    selectedControl.Api = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlApiValue(pEvent) {\n    selectedControl.Api = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlEntryTitle(pEvent) {\n    selectedControl.EntryTitle = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDetails(pEvent) {\n    selectedControl.Details = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlCommentValue(pEvent) {\n    selectedControl.CommentValue = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlButtonLabel(pEvent, btnIndex) {\n    selectedControl.Buttons[btnIndex].Label = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlBackgroundColor(pEvent, btnIndex) {\n    selectedControl.Buttons[btnIndex].BackgroundColor = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlBackgroundColorSelected(pEvent, btnIndex) {\n    selectedControl.Buttons[btnIndex].BackgroundColorSelected = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlValidationMessage(pEvent, btnIndex) {\n    selectedControl.ValidationMessage = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMandatory(pEvent) {\n    selectedControl.Mandatory = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlAddHour(pEvent) {\n    if (pEvent.target.value > 0 ) selectedControl.AddHour = pEvent.target.value\n    else delete selectedControl.AddHour\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlAddDay(pEvent) {\n    if (pEvent.target.value > 0 ) selectedControl.AddDay = pEvent.target.value\n    else delete selectedControl.AddDay\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlAddMonth(pEvent) {\n    if (pEvent.target.value > 0 ) selectedControl.AddMonth = pEvent.target.value\n    else delete selectedControl.AddMonth\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlFormatDateTime(pEvent) {\n    selectedControl.FormatDateTime = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlKeyboard(pEvent) {\n    if (selectedControl.Format === undefined) initFormatProperty(selectedControl)\n    selectedControl.Format.Keyboard = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlAssociatedId(pEvent) {\n    const idList = selectedControl.AssociatedId.names\n    if (idList.findIndex(id => id === pEvent.target.value) < 0 ) idList.push(pEvent.target.value)\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsLabelVisible(pEvent) {\n    selectedControl.IsLabelVisible = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateTimeValue(pEvent) {\n    selectedControl.DateTimeValue = pEvent.target.value\n    selectedControl.IsBlank = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateTimeDateValue(pEvent) {\n    selectedControl.DateValue = pEvent.target.value\n    selectedControl.DateTimeValue = `${pEvent.target.value} ${selectedControl.TimeValue}`\n    selectedControl.IsBlank = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateTimeTimeValue(pEvent) {\n    selectedControl.TimeValue = pEvent.target.value\n    selectedControl.DateTimeValue = `${selectedControl.DateValue} ${pEvent.target.value}`\n    selectedControl.IsBlank = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateValue(pEvent) {\n    selectedControl.DateValue = pEvent.target.value\n    selectedControl.IsBlank = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlTimeValue(pEvent) {\n    selectedControl.TimeValue = pEvent.target.value\n    selectedControl.IsBlank = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateIsBlank(pEvent) {\n    selectedControl.DateValue = \"\"\n    selectedControl.IsBlank = true\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlTimeIsBlank(pEvent) {\n    selectedControl.TimeValue = \"\"\n    selectedControl.IsBlank = true\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateTimeIsBlank(pEvent) {\n    selectedControl.DateValue = \"\"\n    selectedControl.TimeValue = \"\"\n    selectedControl.DateTimeValue = \"\"\n    selectedControl.IsBlank = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsButtonDisabled(pEvent) {\n    selectedControl.IsButtonDisabled = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlShowComment(pEvent) {\n    selectedControl.ShowComment = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function setControlCollapsible(pEvent) {\n    selectedControl.Collapsible = pEvent.target.checked\n    if (!selectedControl.Collapsible) selectedControl.IsCollapsed = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsCollapsed(pEvent) {\n    selectedControl.IsCollapsed = pEvent.target.checked\n    if (selectedControl.IsCollapsed) selectedControl.Collapsible = true\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlValue(pEvent) {\n    selectedControl.Value = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludePhoneNumber(pEvent) {\n    selectedControl.IncludePhoneNumber = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlWarningMessage(pEvent) {\n    selectedControl.WarningMessage = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlWarning(pEvent) {\n    selectedControl.Warning = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsEnabled(pEvent) {\n    selectedControl.IsEnabled = !pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeEmail(pEvent) {\n    selectedControl.IncludeEmail = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeTitle(pEvent) {\n    selectedControl.IncludeTitle = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeBusinessNumber(pEvent) {\n    selectedControl.IncludeBusinessNumber = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeAbbreviation(pEvent) {\n    selectedControl.IncludeAbbreviation = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeCode(pEvent) {\n    selectedControl.IncludeCode = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlGalleryExtrack(pEvent) {\n    selectedControl.GalleryExtrack = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlGalleryPhone(pEvent) {\n    selectedControl.GalleryPhone = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlHideNA(pEvent) {\n    selectedControl.HideNA = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlKeywords(pEvent) {\n    if (selectedControl.Keywords === undefined || selectedControl.Keywords.length === 0){\n      selectedControl.Keywords = []\n    }\n    selectedControl.Keywords.push(currentKeyword)\n    setCurrentKeyword('')\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlData(pEvent) {\n    if (selectedControl.Data === undefined || selectedControl.Data.length === 0){\n      selectedControl.Data = []\n    }\n    selectedControl.Data.push(currentData)\n    setCurrentData('')\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  // MATRIX\n  function setControlColumns(pEvent) {\n    selectedControl.Columns = pEvent.target.value\n\n    setMatrixSize()\n\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlRows(pEvent) {\n    selectedControl.Rows = pEvent.target.value\n    setMatrixSize()\n\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function setMatrixSize(pSize) {\n    if (selectedControl.Elements === undefined) selectedControl.Elements = []\n\n    for (let row = 0; row < selectedControl.Rows; row++) {\n      const gridRowElement = { Type: \"GridRow\", ElementId: getUniqID(), Elements: [] }\n\n      let isRowEmpty = false\n      if (selectedControl.Elements[row] !== undefined) {\n        if (Object.entries(selectedControl.Elements[row]).length === 0) isRowEmpty = true\n      }\n      if (isRowEmpty || selectedControl.Elements[row] === undefined) selectedControl.Elements[row] = gridRowElement\n\n      for (let col = 0; col < selectedControl.Columns; col++) {\n        if (selectedControl.Elements[row].Elements[col] === undefined) selectedControl.Elements[row].Elements[col] = {}\n\n      }\n    }\n\n    // Remove unwanted Gridrows\n    if (selectedControl.Elements.length > selectedControl.Rows) {\n      const activeRows = selectedControl.Elements.slice(0, selectedControl.Rows)\n      selectedControl.Elements = activeRows\n    }\n    // Remove unwanted items in Gridrows\n    selectedControl.Elements.forEach(gridrow => {\n      const activeCols = gridrow.Elements.slice(0, selectedControl.Columns)\n      gridrow.Elements = activeCols\n    })\n  }\n\n  /**-------------------------------------------------**\n  * @desc - JSON utilities functions              -----*\n  *----------------------------------------------------*/\n  function copyJsonHandler() {\n    document.getElementById('json-output').select()\n    document.execCommand('copy')\n  }\n\n  function pasteJsonHandler() {\n    const jsonOutput = document.getElementById('json-output')\n\n    navigator.clipboard.readText()\n      .then(text => {\n        jsonOutput.value = text\n\n        let pasteEvent = new Event('paste')\n        onJsonChangeHandler(pasteEvent)\n      })\n      .catch(err => {\n        // User didn't grant access to read from clipboard\n        console.log('Something went wrong', err)\n      })\n  }\n\n  function loadJsonHandler(pEvent) {\n    let file = pEvent.target.files[0]\n    let reader = new FileReader()\n\n    reader.onloadend = function () {\n      try {\n        let source = reader.result\n        let newData = null\n        let newSource = source.replace(\"data:application/json;base64,\", \"\")\n\n        newData = JSON.parse(Base64.decode(newSource))\n        newData.IsEnableToImport = false\n        newData.isInValidFile = false\n        setJson({ ...newData })\n      }\n      catch (err) {\n        // error loading the json file\n        console.log('---> ', err)\n      }\n    }\n    if (file) {\n      reader.readAsDataURL(file)\n    }\n  }\n\n  function saveJsonHandler() {\n    if (isValidId) {\n      let element = document.createElement('a')\n      element.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(json)))\n      let jsonFileName = \"new_form\"\n      element.setAttribute('download', jsonFileName + '.json')\n      element.style.display = 'none'\n      document.body.appendChild(element)\n\n      element.click()\n      document.body.removeChild(element)\n    }\n  }\n\n  function deleteJsonHandler() {\n    setCurrentSectionIndex(0)\n    setUsedTemplateList([])\n\n    if (window.confirm('Are you sure to remove all?')) {\n      json.Sections = {}\n\n      const newSection = getNewSection()\n      setJson({ Sections: [newSection] })\n      setSelectedControl(newSection)\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - UI methods                            -----*\n  *----------------------------------------------------*/\n\n  function simpleTabsHandler(pIndex) {\n    switch (pIndex) {\n      case 0:\n        setMode('board')\n        break\n      case 1:\n        setMode('preview')\n        break\n      default:\n        break\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Render the App                        -----*\n  *----------------------------------------------------*/\n\n  const boardEdit =\n    <>\n      <div className=\"section-controls\">\n        <div className=\"section-controls-group\">\n          <button onClick={() => addNewSection()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faFolderPlus} />ADD SECTION</button>\n          <button onClick={() => duplicateSection()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faClone} />DUPLICATE SECTION</button>\n          <button onClick={() => deleteJsonHandler()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faExclamationTriangle} />CLEAR BOARD</button>\n        </div>\n      </div>\n      <div className=\"section-tabs\">\n        {sectionNavigation()}\n      </div>\n      <div id=\"board-edit\" onDragOver={onDragOverHandler} onDrop={onDropHandler}>\n        <div className=\"section-inner-header\">\n          <div>\n            <input\n              type=\"text\"\n              onClick={() => onSelectControlHandler(getCurrentSection())}\n              className=\"section-title\" value={getCurrentSection().Title}\n              readOnly\n              placeholder=\"Section title\"></input>\n          </div>\n          <div className=\"section-btn-group\">\n            <button onClick={() => moveSectionLeft()} className=\"btn btn-primary btn-small\"><FontAwesomeIcon icon={faArrowLeft} />Move LEFT</button>\n            <button onClick={() => removeSection()} className=\"btn btn-tertiary btn-small\" disabled={!currentSectionIndex > 0}><FontAwesomeIcon icon={faTrash} />REMOVE SECTION</button>\n            {/* {currentSectionIndex> 0 ? <button onClick={() => removeSection()} className=\"btn btn-tertiary btn-small\"><FontAwesomeIcon icon={faTrash}/>REMOVE SECTION</button> : ''} */}\n            <button onClick={() => moveSectionRight()} className=\"btn btn-primary btn-small btn-right-icon\">Move RIGHT<FontAwesomeIcon icon={faArrowRight} /></button>\n          </div>\n        </div>\n        {\n          getHTML()\n        }\n      </div>\n\n    </>\n\n  const jsonPreview =\n    <div id=\"json-preview\">\n      <ReactJson src={json} theme=\"monokai\" displayDataTypes={false} iconStyle=\"square\" enableClipboard={false} />\n    </div>\n\n  const errorDuplicate = (!isValidId) ? <div className=\"error-message\">\n    <FontAwesomeIcon icon={faExclamationCircle} />\n    Duplicate ID detected. Control's ID value must be unique. Modify the duplicate ID to enable the Export Json option.\n  </div> : ''\n\n  let propertiesPanel =\n    (mode === 'board') ?\n      <div className=\"properties-panel-container\">\n        <h2>PROPERTIES</h2>\n        {errorDuplicate}\n        <div>{getPropertiesPanel(selectedControl)}</div>\n      </div>\n      : (mode === 'preview') ?\n        <div id=\"edit-controls\">\n          <button onClick={() => document.getElementById('fileInput').click()} className=\"btn btn-primary\"><FontAwesomeIcon icon={faUpload} />Import JSON</button>\n          <button onClick={() => saveJsonHandler()} className=\"btn btn-tertiary\"><FontAwesomeIcon icon={faFileCode} />Export JSON</button>\n          <div>\n            <input type=\"file\"\n              id=\"fileInput\"\n              className=\"custom-file-input\"\n              accept=\"application/JSON\"\n              onChange={e => loadJsonHandler(e)} />\n          </div>\n          <button onClick={() => copyJsonHandler()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faCopy} />Copy JSON</button>\n          <button onClick={() => pasteJsonHandler()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faPaste} />Paste JSON</button>\n        </div>\n        :\n        ''\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>JSON Generator</h1>\n      </header>\n      <div id=\"page\" className=\"page\">\n\n        <nav id=\"navigation\" className=\"navigation\">\n          <div className=\"navigation-container\">\n            <div className=\"navigation-section\">\n              <div className=\"navigation-section-title\">\n                <FontAwesomeIcon icon={faCog} /><h2>Section Controls</h2>\n              </div>\n              <ul className=\"navigation-section-items\" onDragStart={controlsHandler}>\n                <li draggable id=\"Matrix\">Matrix</li>\n                <li draggable id=\"Matrixbutton\">Matrix Button</li>\n                <li draggable id=\"Repeatable\">Repeatable</li>\n              </ul>\n            </div>\n\n            <div className=\"navigation-section\">\n              <div className=\"navigation-section-title\">\n                <FontAwesomeIcon icon={faStream} /><h2>Template Controls</h2>\n              </div>\n              <ul className=\"navigation-section-items\" onDragStart={controlsHandler}>\n                <li draggable={usedTemplateList.indexOf('Document.TableOfContents') < 0} className={usedTemplateList.indexOf('Document.TableOfContents') > -1 ? 'disabled' : ''} id=\"Document.TableOfContents\">Table of content</li>\n                <li draggable={usedTemplateList.indexOf('Document.Summary') < 0} className={usedTemplateList.indexOf('Document.Summary') > -1 ? 'disabled' : ''} id=\"Document.Summary\">D.Summary</li>\n                <li draggable={usedTemplateList.indexOf('Document.Summary2') < 0} className={usedTemplateList.indexOf('Document.Summary2') > -1 ? 'disabled' : ''} id=\"Document.Summary2\">D.Summary (with Close)</li>\n                <li draggable={usedTemplateList.indexOf('Document.Summary3') < 0} className={usedTemplateList.indexOf('Document.Summary3') > -1 ? 'disabled' : ''} id=\"Document.Summary3\">D.Summary (with Registers)</li>\n                <li draggable={usedTemplateList.indexOf('Document.Summary4') < 0} className={usedTemplateList.indexOf('Document.Summary4') > -1 ? 'disabled' : ''} id=\"Document.Summary4\">D.Summary (Registers/Close)</li>\n                <li draggable={usedTemplateList.indexOf('Emailregister') < 0} className={usedTemplateList.indexOf('Emailregister') > -1 ? 'disabled' : ''} id=\"Emailregister\">Email Register</li>\n                <li draggable={usedTemplateList.indexOf('Smsregister') < 0} className={usedTemplateList.indexOf('Smsregister') > -1 ? 'disabled' : ''} id=\"Smsregister\">SMS Register</li>\n                <li draggable={usedTemplateList.indexOf('QRScanner.List') < 0} className={usedTemplateList.indexOf('QRScanner.List') > -1 ? 'disabled' : ''} id=\"QRScanner.List\">QR Scanner List</li>\n                <li draggable={usedTemplateList.indexOf('SignatureSignOnOff') < 0} className={usedTemplateList.indexOf('SignatureSignOnOff') > -1 ? 'disabled' : ''} id=\"SignatureSignOnOff\">Signature SignOnOff</li>\n              </ul>\n            </div>\n\n            <div className=\"navigation-section\">\n              <div className=\"navigation-section-title\">\n                <FontAwesomeIcon icon={faLightbulb} /><h2>Type controls</h2>\n              </div>\n              <ul className=\"navigation-section-items\" onDragStart={controlsHandler}>\n                <li draggable id=\"API\">API</li>\n                <li draggable id=\"SingleBoolean\">Boolean Single</li>\n                <li draggable id=\"Boolean\">Boolean Double</li>\n                <li draggable id=\"Button.Add.ReportDate\">Button Add Report Date</li>\n                <li draggable id=\"Checkbox\">Checkbox</li>\n                <li draggable id=\"List.Multicontrol\">Conditional Response</li>\n                <li draggable id=\"Date\">Date</li>\n                <li draggable id=\"DateTime\">DateTime</li>\n                <li draggable id=\"Image\">Image</li>\n                <li draggable id=\"Image.Single\">Image Single</li>\n                <li draggable id=\"Label\">Label</li>\n                <li draggable id=\"List.Single\">List Single</li>\n                <li draggable id=\"List.Multiple\">List Multiple</li>\n                {/* <li draggable id=\"Numeric\">Numeric</li> */}\n                <li draggable id=\"QRScanner\">QR Scanner</li>\n                <li draggable id=\"Signature\">Signature</li>\n                <li draggable id=\"Signature.Date\">Signature Date</li>\n                <li draggable id=\"Signature.DateTime\">Signature DateTime</li>\n                <li draggable id=\"Text\">Text</li>\n                <li draggable id=\"Time\">Time</li>\n                <li draggable id=\"Trilean\">Trilean</li>\n                <li draggable id=\"Trilean.Label\">Trilean Label</li>\n                <li draggable id=\"Widgetevents\">Widget Events</li>\n                <li draggable id=\"Widgetdisplay\">Widget Display</li>\n                <li draggable id=\"Widgetdocketcontractor\">Widget Docket Contractor</li>\n                <li draggable id=\"Widgetdocketequipment\">Widget Docket Equipment</li>\n                <li draggable id=\"Widgetdocketphoto\">Widget Docket Photo</li>\n                <li draggable id=\"Widgetdocketcomments\">Widget Docket Comments</li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n\n        <main>\n          <div className=\"main-container\">\n            <SimpleTabs dispatchIndex={(pMode) => simpleTabsHandler(pMode)} tabs={[\n              {\n                tab: boardEdit,\n                title: \"Board\"\n              },\n              {\n                tab: jsonPreview,\n                title: \"Json Preview\"\n              }]} />\n            <textarea id=\"json-output\" cols=\"60\" rows=\"14\" value={JSON.stringify(json)} onChange={() => onJsonChangeHandler()}></textarea>\n          </div>\n        </main>\n\n        <aside id=\"sidebar\" className=\"sidebar\">\n          <span id=\"sidebarHandle\"></span>\n          <div id=\"properties-panel\">{propertiesPanel}</div>\n        </aside>\n\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
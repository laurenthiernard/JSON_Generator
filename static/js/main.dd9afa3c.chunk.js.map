{"version":3,"sources":["utils.js","components/Control.js","components/SimpleTabs.js","layout.js","App.js","serviceWorker.js","index.js"],"names":["getUniqID","pLength","random","window","btoa","Math","Date","getTime","substring","toLocaleLowerCase","Control","props","id","controlObj","ElementId","type","Type","reorderable","isFixed","className","icon","faArrowUp","onClick","moveUp","faArrowDown","moveDown","selectedControl","onClickHandler","pType","faAudioDescription","faFileAlt","faHandPointDown","faWeight","faToggleOn","faCheckSquare","faListUl","faCalendarAlt","faImage","faSpellCheck","faGenderless","faCircle","faBars","faTable","getIcon","includes","value","ID","disabled","Title","delete","faTrashAlt","title","subcontrolsHTMLElements","cssRows","cssColumns","i","Rows","rowElement","Elements","j","colElement","undefined","newChildControl","key","slotContent","Object","entries","length","push","Columns","style","display","gridTemplateColumns","gridTemplateRows","controlElement","subcontrolsHTML","map","element","getSubcontrols","SimpleTabs","useState","activeTab","setActiveTab","tabButton","tabs","tab","index","useEffect","dispatchIndex","initLayout","isResizingSidebar","isNavBarCollapsed","sidebarWidth","sidebarHandle","document","querySelector","navigation","layout","pageWidth","innerWidth","navigationSections","querySelectorAll","collapseNavigation","mouseDownEvent","addEventListener","e","forEach","section","classList","add","expandNavigation","remove","removeEventListener","pWidth","min","max","parseInt","clientX","target","App","initialJson","Sections","SectionId","savedJson","JSON","parse","localStorage","getItem","json","setJson","currentSectionIndex","setCurrentSectionIndex","setSelectedControl","isValidId","setIsValidId","idList","setIdList","usedTemplateList","setUsedTemplateList","mode","setMode","currentKeyword","setCurrentKeyword","currentData","setCurrentData","singleUseElements","setItem","stringify","controlsHandler","dataTransfer","setData","addToNewSection","pElement","pChildren","newSection","getNewSection","child","pTitle","console","log","sectionTitle","getNewElement","pIsMatrix","pIsRepeatable","getElementFromElementId","pElementID","currentSection","foundItem","item","hasOwnProperty","subitem","subsubitem","getElementsFromId","pID","getCurrentSection","getParentElementFromId","initFormatProperty","Format","onSelectControlHandler","pControl","onJsonChangeHandler","currentValue","getElementById","moveElement","pParentElement","pDirection","pIsSubControl","container","position","findIndex","splice","deleteKeyword","pKeyword","keywordIndex","Keywords","jsonToUpdate","deleteIdValue","AssociatedId","names","deleteData","pData","dataIndex","Data","setControlID","pEvent","IDvalue","setControlTitle","setControlTitle2","Title2","setControlHasUnderLine","HasUnderLine","checked","setControlIsVisible","IsVisible","setControlApiValue","Api","setControlEntryTitle","EntryTitle","setControlDetails","Details","setControlCommentValue","CommentValue","setControlButtonLabel","btnIndex","Buttons","Label","setControlBackgroundColor","BackgroundColor","setControlBackgroundColorSelected","BackgroundColorSelected","setControlValidationMessage","ValidationMessage","setControlMandatory","Mandatory","setControlAddHour","AddHour","setControlAddDay","AddDay","setControlAddMonth","AddMonth","setControlFormatDateTime","FormatDateTime","setControlAssociatedId","setControlIsLabelVisible","IsLabelVisible","setControlIsButtonDisabled","IsButtonDisabled","setControlShowComment","ShowComment","setControlCollapsible","Collapsible","IsCollapsed","setControlIsCollapsed","setControlValue","Value","setControlIncludeTitle","IncludeTitle","setControlHideNA","HideNA","setControlKeywords","setControlData","setMatrixSize","pSize","row","gridRowElement","isRowEmpty","col","activeRows","slice","gridrow","activeCols","boardEdit","faFolderPlus","sectionToDuplicate","duplicateSection","faClone","confirm","deleteJsonHandler","faExclamationTriangle","sectionNavigation","onDragOver","preventDefault","onDrop","elementName","getData","targetID","parentID","indexOf","isValidElement","alert","newElement","droppedPosition","lastIndexOf","parentElement","pDefaultValues","unshift","prependToFirstSection","Button","initButtonsProperty","addToCurrentSection","readOnly","placeholder","reorderedSections","moveSectionLeft","faArrowLeft","sections","filter","removeSection","faTrash","moveSectionRight","faArrowRight","currentSectionToRender","pItem","control","moveUpHandler","moveDownHandler","subindex","subsubindex","elementsToFilter","elementsIndex","newElements","deleteElementFromId","getControl","getHTML","jsonPreview","src","theme","displayDataTypes","iconStyle","enableClipboard","errorDuplicate","faExclamationCircle","propertiesPanel","pSelectedControl","keyWordsList","globalProperties","htmlFor","name","onChange","Boolean","setControlColumns","setControlRows","keyword","option","setControlApi","IncludePhoneNumber","setControlIncludePhoneNumber","IncludeEmail","setControlIncludeEmail","IncludeBusinessNumber","setControlIncludeBusinessNumber","IncludeAbbreviation","setControlIncludeAbbreviation","IncludeCode","setControlIncludeCode","associatedIds","idsList","dataList","data","defaultValueList","Size","setControlSize","GalleryExtrack","setControlGalleryExtrack","GalleryPhone","setControlGalleryPhone","FontSize","Number","setControlFontSize","Margin","setControlMargin","FontAttributes","setControlFontAttributes","IsEnabled","setControlIsEnabled","WarningMessage","Warning","setControlWarningMessage","setControlWarning","Keyboard","setControlKeyboard","VarChar","setControlVarChar","Lines","setControlLines","Decimal","setControlDecimal","Min","setControlMin","Max","setControlMax","DateValue","IsBlank","setControlDateValue","setControlDateIsBlank","TimeValue","setControlTimeValue","setControlTimeIsBlank","DateTimeValue","setControlDateTimeDateValue","setControlDateTimeTimeValue","setControlDateTimeIsBlank","getPropertiesPanel","click","faUpload","createElement","setAttribute","encodeURIComponent","jsonFileName","body","appendChild","removeChild","saveJsonHandler","faFileCode","accept","file","files","reader","FileReader","onloadend","source","result","newData","newSource","replace","atob","IsEnableToImport","isInValidFile","err","readAsDataURL","loadJsonHandler","select","execCommand","faCopy","jsonOutput","navigator","clipboard","readText","then","text","Event","catch","pasteJsonHandler","faPaste","faCog","onDragStart","draggable","faStream","faLightbulb","pMode","pIndex","simpleTabsHandler","cols","rows","location","hostname","match","ReactDOM","render","StrictMode","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.dd9afa3c.chunk.js","sourcesContent":["export function getUniqID(pLength) {\n  let random = () => window.btoa(Math.random()*(new Date().getTime())*1).substring(4, 9)\n  return `${random()}-${random()}`.substring(0, pLength).toLocaleLowerCase()\n}","import React from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport {\n  faWeight, faSpellCheck,\n  faCalendarAlt, faTrashAlt,\n  faAudioDescription, faToggleOn,\n  faSortNumericUp, faGenderless,\n  faImage, faImages, faListUl,\n  faList, faFileAlt, faClock,\n  faCheckSquare, faHandPointDown,\n  faSearch, faCircle, faAd,\n  faMailBulk, faPlus, faBars,\n  faUserCircle, faTable, faLayerGroup,\n  faEdit, faArrowUp, faArrowDown,\n} from \"@fortawesome/free-solid-svg-icons\"\n\nimport { getUniqID } from './../utils'\n\nexport default function Control(props) {\n  const id = props.controlObj.ElementId\n  const type = props.controlObj.Type\n\n  // const clickHandlerRef = props.onClickHandler\n\n  // console.log(`--->: Control -> type`, props.controlObj)\n  // console.log(`--->: Control -> props.selectedControl`, props.selectedControl)\n\n  function getSubcontrols() {\n    let subcontrolsHTMLElements = []\n\n    switch (type) {\n      case \"Matrix\":\n\n        let cssRows = ''\n        let cssColumns = ''\n\n        for (let i = 0; i < props.controlObj.Rows; i++) {\n          // let gridRowElement = {Type: \"GridRow\", ElementID: getUniqID(), Elements: []}\n          // props.controlObj.Elements[i] = gridRowElement\n\n          const rowElement = props.controlObj.Elements[i]\n          // console.log(`--->: getSubcontrols -> rowElement`, rowElement)\n          cssRows+='1fr '\n          cssColumns = ''\n\n          for (let j = 0; j < props.controlObj.Columns; j++) {\n            const colElement = (rowElement.Elements !== undefined) ? rowElement.Elements[j] : {}\n            // console.log(`--->: getSubcontrols -> new control: `, colElement)\n            const newChildControl =\n              <Control\n                controlObj={colElement}\n                selectedControl={props.selectedControl}\n                isFixed={true}\n                onClickHandler={() => props.onClickHandler(colElement)}\n                // onClickHandler={() => props.onSelectControlHandler(colElement)}\n                delete={(colElement) => props.delete(colElement)}\n                key={colElement.ElementId} />\n                // key={`matrix-sub${i}${j}`} />\n\n            const slotContent = (Object.entries(colElement).length === 0 || colElement === undefined) ? 'Add control' : newChildControl\n            // console.log(`--->: getSubcontrols -> slotContent`, slotContent)\n            cssColumns+='1fr '\n            subcontrolsHTMLElements.push(\n              <div\n                id={`${id}-matrix-row${i}-col${j}`}\n                key={`matrix${i}${j}`}\n                className=\"matrix-box\">{slotContent}\n              </div>)\n          }\n        }\n        return <div className=\"control-footer\" style={{display:'grid', gridTemplateColumns:cssColumns, gridTemplateRows:cssRows}}>{subcontrolsHTMLElements}</div>\n\n      case \"Repeatable\":\n      case \"SignatureSignOnOff\":\n      case \"Document.Summary2\":\n      case \"Document.Summary3\":\n      case \"Document.Summary4\":\n      case \"Emailregister\":\n      case \"Smsregister\":\n      case \"Document.Summary\":\n        for (let i = 0; i < props.controlObj.Elements.length; i++) {\n          const controlElement = props.controlObj.Elements[i]\n          const newChildControl =\n            <Control\n              controlObj={controlElement}\n              selectedControl={props.selectedControl}\n              isFixed={false}\n              onClickHandler={() => props.onClickHandler(controlElement)}\n              moveUp={(controlElement) => props.moveUp(controlElement, true)}\n              moveDown={(controlElement) => props.moveDown(controlElement, true)}\n              delete={(controlElement) => props.delete(controlElement)}\n              key={controlElement.ElementId} />\n\n            // console.log(`--->: getSubcontrols -> newChildControl`, newChildControl)\n            subcontrolsHTMLElements.push(newChildControl)\n          }\n          // console.log(`--->: getSubcontrols -> subcontrolsHTMLElements`, subcontrolsHTMLElements)\n        // Repeatable\n        const subcontrolsHTML = subcontrolsHTMLElements.map(element => element)\n\n        // const slotContent = (Object.entries(colElement).length === 0 || colElement === undefined) ? 'Add control' : newChildControl\n        return <>\n            <div id={`${id}-repeatable-area`} className=\"control-footer-addarea\">Add controls</div>\n            <div id={`${id}-repeatable`} className=\"control-footer\">{subcontrolsHTML}</div>\n          </>\n\n      // case \"Document.Summary\":\n      // case \"Document.Summary2\":\n      // case \"Document.Summary3\":\n      // case \"Document.Summary4\":\n      // case \"Emailregister\":\n      // case \"Smsregister\":\n      //   // console.log('---> ', props.controlObj.Elements)\n      //   const children = props.controlObj.Elements.map(item => (\n      //     <Control\n      //       controlObj={item}\n      //       selectedControl={props.selectedControl}\n      //       isFixed={false}\n      //       onClickHandler={() => props.onClickHandler(item)}\n      //       // onClickHandler={() => props.onSelectControlHandler(colElement)}\n      //       // delete={() => props.delete(item)}\n      //       key={item.ElementId} />))\n      //   return <div className=\"control-footer\">{children}</div>\n\n      default:\n        break\n    }\n  }\n\n  function getIcon(pType) {\n    switch (pType) {\n      case \"Label\":\n      case \"DocumentSummaryGrid\":\n        return faAudioDescription\n      case \"Document.TableOfContents\":\n      case \"Document.Summary\":\n      case \"Document.Summary2\":\n      case \"Document.Summary3\":\n      case \"Document.Summary4\":\n        return faFileAlt\n      case \"Button.Submit.Register\":\n      case \"Button.View.Document\":\n      case \"Button.Closeout\":\n      case \"Button.Send.SMS\":\n      case \"Button.Send.Email\":\n      case \"Button.Add.Email\":\n      case \"Button.Add.SMS\":\n      case \"Button.Add.Signature\":\n      case \"Button.Add.ReportDate\":\n        return faHandPointDown\n      case \"API\":\n      case \"Signature.Date\":\n      case \"Signature.DateTime\":\n        return faWeight\n      case \"SingleBoolean\":\n      case \"Boolean\":\n        return faToggleOn\n      case \"Checkbox\":\n        return faCheckSquare\n      case \"List.Multicontrol\":\n        return faListUl\n      case \"Date\":\n      case \"DateTime\":\n        return faCalendarAlt\n      case \"Image\":\n      case \"Image.Single\":\n        return faImage\n      case \"QRScanner\":\n      case \"QRScanner.List\":\n      case \"Signature\":\n        return faSpellCheck\n      case \"Trilean\":\n        return faGenderless\n      case \"Trilean.Label\":\n        return faCircle\n      case \"Repeatable\":\n        return faBars\n      default:\n        return faTable\n    }\n  }\n\n  const reorderable = (props.isFixed) ? '' : <div className=\"control-reordering\">\n    <FontAwesomeIcon icon={faArrowUp}\n      onClick={() => props.moveUp(props.controlObj, false)}\n    />\n    <FontAwesomeIcon icon={faArrowDown}\n      onClick={() => props.moveDown(props.controlObj, false)}\n    />\n  </div>\n\n  return (\n    <div\n      id={id}\n      className={`${props.isFixed ? 'subcontrol' : 'control'}${id === props.selectedControl.ElementId ? ' active-control' : ''}`}\n      >\n      <div className=\"control-header\" onClick={props.onClickHandler}>{props.controlObj.Type}</div>\n      <div className=\"control-content\">\n        {reorderable}\n        <div className=\"control-icon\" onClick={props.onClickHandler}>\n          <FontAwesomeIcon icon={getIcon(props.controlObj.Type)} />\n        </div>\n        <div className={`control-id ${props.controlObj.Type.includes('Button') > 0 ? \"hidden\" : ''}`} onClick={props.onClickHandler}>\n          <input type=\"text\" value={props.controlObj.ID || ''} disabled></input>\n        </div>\n        <div className=\"control-title\" onClick={props.onClickHandler}>\n          <input type={props.controlObj.Type.includes('Button') > 0 ? \"button\" : props.controlObj.Type.includes('Checkbox') ? \"checkbox\" : \"text\"} value={props.controlObj.Title || props.controlObj.Type || ''} disabled></input>\n        </div>\n        <div className=\"control-delete\" onClick={() => props.delete(props.controlObj)}>\n          <FontAwesomeIcon\n            icon={faTrashAlt}\n            title=\"Remove\"\n          /></div>\n      </div>\n      {getSubcontrols()}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n\nexport default function SimpleTabs(props) {\n\n  const [activeTab, setActiveTab] = useState(0)\n\n  const tabButton = props.tabs.map((tab, index) => {\n    return <button className={`SimpleTabs-tab ${activeTab === index ? 'tab-active' : ''}`} key={index} onClick={() => setActiveTab(index)}>{props.tabs[index].title}</button>\n  })\n\n  useEffect(() => {\n    props.dispatchIndex(activeTab)\n  }, [activeTab])\n\n  return (\n    <div className=\"SimpleTabs-container\">\n      <div className=\"SimpleTabs-header\">\n      {tabButton}\n\n      </div>\n      {props.tabs[activeTab].tab}\n    </div>\n  )\n}\n","\nexport default function initLayout() {\n\n  let isResizingSidebar = false\n  let isNavBarCollapsed = false\n\n  let sidebarWidth = 300\n  let sidebarMinWidth = 150\n  let sidebarMaxWidth = 400\n\n  const breakpoint = 1100\n  const navbarCollapsedWidth = 80\n  const navbarExpandedWidth = 250\n\n  const sidebarHandle = document.querySelector('#sidebarHandle')\n  const navigation = document.querySelector('#navigation')\n  const layout = document.querySelector('#page')\n  let pageWidth = window.innerWidth\n  const navigationSections = document.querySelectorAll('.navigation-section')\n\n  if (pageWidth < breakpoint) collapseNavigation()\n\n  const mouseDownEvent = sidebarHandle.addEventListener('mousedown', (e) => isResizingSidebar = true)\n  document.addEventListener('mouseup', (e) => {\n    isResizingSidebar = false\n    sidebarHandle.removeEventListener('mousedown', mouseDownEvent)\n  })\n  document.addEventListener('mousemove', (e) => {\n    if (isResizingSidebar) {\n      sidebarWidth = Math.min(Math.max(parseInt(pageWidth - e.clientX), sidebarMinWidth), sidebarMaxWidth)\n      setSidebarWidth(sidebarWidth)\n    }\n  })\n\n  function setSidebarWidth(pWidth) {\n    if ((pWidth > sidebarMinWidth) && pWidth < sidebarMaxWidth) {\n      if (!isNavBarCollapsed) {\n        layout.style.gridTemplateColumns = `${navbarExpandedWidth}px auto ${pWidth}px`\n      }\n      else if (isNavBarCollapsed) {\n        layout.style.gridTemplateColumns = `${navbarCollapsedWidth}px auto ${pWidth}px`\n      }\n    }\n  }\n\n  window.addEventListener('resize', (e) => {\n    pageWidth = e.target.innerWidth\n    if (pageWidth < breakpoint && !isNavBarCollapsed) {\n      layout.style.gridTemplateColumns = `${navbarCollapsedWidth}px auto ${sidebarWidth}px`\n      isNavBarCollapsed = !isNavBarCollapsed\n      collapseNavigation()\n    }\n    else if (pageWidth > breakpoint && isNavBarCollapsed) {\n      layout.style.gridTemplateColumns = `${navbarExpandedWidth}px auto ${sidebarWidth}px`\n      isNavBarCollapsed = !isNavBarCollapsed\n      expandNavigation()\n    }\n  })\n\n  navigation.addEventListener('mouseenter', e => {\n    if (pageWidth < breakpoint && isNavBarCollapsed) {\n\n    expandNavigation()\n    }\n  })\n  navigation.addEventListener('mouseleave', e => {\n    if (pageWidth < breakpoint && !isNavBarCollapsed) {\n\n    collapseNavigation()\n    }\n  })\n\n  function collapseNavigation() {\n    navigationSections.forEach(section => section.classList.add(\"collapsed\"))\n    layout.style.gridTemplateColumns = `${navbarCollapsedWidth}px auto ${sidebarWidth}px`\n    isNavBarCollapsed = true\n  }\n  function expandNavigation() {\n    navigationSections.forEach(section => section.classList.remove(\"collapsed\"))\n    layout.style.gridTemplateColumns = `${navbarExpandedWidth}px auto ${sidebarWidth}px`\n    isNavBarCollapsed = false\n  }\n\n\n}\n","import React, { useState, useEffect } from 'react'\nimport './App.scss'\n\nimport Control from './components/Control'\nimport SimpleTabs from './components/SimpleTabs'\nimport { getUniqID } from './utils'\nimport initLayout from './layout.js'\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faStream, faCog, faLightbulb, faTrash, faCopy, faFolderPlus, faClone, faPaste, faExclamationTriangle, faFileCode, faUpload, faArrowRight, faExclamationCircle, faArrowLeft, faTrashAlt } from '@fortawesome/free-solid-svg-icons'\nimport ReactJson from 'react-json-view'\n\nfunction App() {\n\n  const saveSessionEnabled = true\n  let initialJson = { Sections: [{ SectionId: \"mjy5n\", Title: \"Section 1\", Elements: [] }] }\n  // Check if saved JSON is valid and assign it\n  if (saveSessionEnabled) {\n    const savedJson = JSON.parse(localStorage.getItem('currentJson'))\n    if (savedJson !== null) initialJson = savedJson\n  }\n\n  const [json, setJson] = useState(initialJson)\n  const [currentSectionIndex, setCurrentSectionIndex] = useState(0)\n  const [selectedControl, setSelectedControl] = useState({})\n  const [isValidId, setIsValidId] = useState(true)\n  const [idList, setIdList] = useState([])\n  const [usedTemplateList, setUsedTemplateList] = useState([])\n  const [mode, setMode] = useState('board')\n  const [currentKeyword, setCurrentKeyword] = useState('')\n  const [currentData, setCurrentData] = useState('')\n\n  const singleUseElements = [\n    \"Document.TableOfContents\",\n    \"Document.Summary\",\n    \"Document.Summary2\",\n    \"Document.Summary3\",\n    \"Document.Summary4\",\n    \"Emailregister\",\n    \"Smsregister\",\n    \"QRScanner.List\",\n    \"SignatureSignOnOff\"\n  ]\n\n  useEffect(() => {\n    initLayout()\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('currentJson', JSON.stringify(json))\n  }, [json])\n\n  /**-------------------------------------------------**\n  * @desc - DRAG AND DROP                         -----*\n  *----------------------------------------------------*/\n\n  let controlsHandler = e => {\n    // console.log('---> ', e.target, e.target.id)\n    e.dataTransfer.setData(\"text/plain\", e.target.id)\n  }\n  let onDragOverHandler = e => {\n    e.preventDefault()\n  }\n  let onDropHandler = e => {\n    e.preventDefault()\n    const elementName = e.dataTransfer.getData(\"text/plain\")\n    console.log(`--->: App -> elementName`, elementName)\n\n    let targetID = e.target.id\n    let parentID = targetID.substring(0, 11)\n\n    const notAllowedElements = [\n      \"Matrix\",\n      \"Matrixbutton\",\n      \"Repeatable\",\n      \"Document.TableOfContents\",\n      \"Document.Summary\",\n      \"Document.Summary2\",\n      \"Document.Summary3\",\n      \"Document.Summary4\",\n      \"Emailregister\",\n      \"Smsregister\",\n      \"QRScanner.List\",\n      \"SignatureSignOnOff\"\n    ]\n\n    if (singleUseElements.indexOf(elementName) > -1) setUsedTemplateList([...usedTemplateList, elementName])\n\n\n    let isValidElement = true\n    if (notAllowedElements.findIndex(element => element === elementName) > -1) {\n      isValidElement = false\n    }\n\n\n    // ---------------------------------------------------------------------------- MATRIX : ADD Elements\n    if (targetID.includes('matrix')) {\n      if (!isValidElement) {\n        alert('Control not alowed inside a Matrix')\n        return\n      }\n      let newElement = getNewElement(elementName)\n      let droppedPosition = {\n        row: targetID.substring(targetID.lastIndexOf('-row') + 4, targetID.lastIndexOf('-col')),\n        col: targetID.substring(targetID.lastIndexOf('-col') + 4, targetID.length)\n      }\n      console.log(`---> Matrix element ${JSON.stringify(newElement)} dropped on parent: ${parentID} at position ${JSON.stringify(droppedPosition)}`)\n      // console.log(`----> Look for parent ${parentID}: `,getElementFromElementId(parentID))\n      // console.log(`----> Look for target ${targetID}: `,getElementFromElementId(targetID))\n\n      const parentElement = getElementFromElementId(parentID)\n      const elementRow = parentElement.Elements[droppedPosition.row]\n      elementRow.Elements[droppedPosition.col] = newElement\n      console.log('---> onDropHandler: parentElement is updated:  ', parentElement)\n\n      const jsonToUpdate = JSON.parse(JSON.stringify(json))\n      console.log(`--->: App -> jsonToUpdate`, jsonToUpdate)\n      // jsonToUpdate.timestamp = new Date()\n      setJson({ ...jsonToUpdate })\n\n      // const nextState = produce(json, draftState => {\n      //   draftState.user = {\n      //     name: targetID\n      //   }\n      // })\n      // console.log(`--->: App -> nextState`, nextState)\n      // setJson({ ...nextState })\n    }\n    else if (targetID.includes('repeatable')) {\n      if (!isValidElement) {\n        alert('Control not alowed inside a Repeatable')\n        return\n      }\n      let newElement = getNewElement(elementName)\n      console.log(`---> Repeatable element ${JSON.stringify(newElement)} dropped on parent: ${parentID}`)\n      const parentElement = getElementFromElementId(parentID)\n      parentElement.Elements.push(newElement)\n\n      const jsonToUpdate = JSON.parse(JSON.stringify(json))\n      setJson({ ...jsonToUpdate })\n    }\n    // ---------------------------------------------------------------------------- TEMPLATES : ADD Elements\n    else {\n      switch (elementName) {\n        case \"Document.TableOfContents\":\n          prependToFirstSection(elementName,\n            { Type: \"Document.TableOfContents\", Title: \"Table Of Contents\", ID: \"DocTableOfContents\", ElementId: getUniqID() },\n          )\n          break\n        case \"Document.Summary\":\n          addToNewSection(elementName, [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", ID: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", ID: \"Button.Submit.Register\", Title: \"Submit to Register\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", ID: \"Button.View.Document\", Title: \"View Document\", ElementId: getUniqID() }])\n          break\n        case \"Document.Summary2\":\n          addToNewSection(elementName, [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", ID: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", Title: \"Submit to Register\", ID: \"Button.Submit.Register\", ElementId: getUniqID() },\n            { Type: \"Button.Closeout\", Title: \"Close out\", ID: \"Button.Closeout\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", Title: \"View Document\", ID: \"Button.View.Document\", ElementId: getUniqID() },\n          ])\n          break\n        case \"Document.Summary3\":\n          addToNewSection(elementName, [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", ID: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", Title: \"Submit to Register\", ID: \"Button.Submit.Register\", ElementId: getUniqID() },\n            { Type: \"Button.Send.SMS\", Title: \"Send SMS\", ID: \"Button.Send.SMS\", ElementId: getUniqID() },\n            { Type: \"Button.Send.Email\", Title: \"Send Email\", ID: \"Button.Send.Email\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", Title: \"View Document\", ID: \"Button.View.Document\", ElementId: getUniqID() }\n          ])\n          break\n        case \"Document.Summary4\":\n          addToNewSection(elementName, [\n            { Type: \"DocumentSummaryGrid\", Title: \"Show Summary\", ID: \"DocumentSummaryGrid\", ElementId: getUniqID() },\n            { Type: \"Button.Submit.Register\", Title: \"Submit to Register\", ID: \"Button.Submit.Register\", ElementId: getUniqID() },\n            { Type: \"Button.Closeout\", Title: \"Close out\", ID: \"Button.Closeout\", ElementId: getUniqID() },\n            { Type: \"Button.Send.SMS\", Title: \"Send SMS\", ID: \"Button.Send.SMS\", ElementId: getUniqID() },\n            { Type: \"Button.Send.Email\", Title: \"Send Email\", ID: \"Button.Send.Email\", ElementId: getUniqID() },\n            { Type: \"Button.View.Document\", Title: \"View Document\", ID: \"Button.View.Document\", ElementId: getUniqID() },\n          ])\n          break\n        case \"Emailregister\":\n          addToNewSection(elementName, [\n            { Type: \"SearchableListEntryDialogEmail\", Title: \"Select from Project Directory\", ID: \"ContactListEmail\", Api: \"ProjectContacts\", ValidationMessage: \"Permit Holder Required\", AssociatedId: { names: [\"ManualEmailName\", \"ManualEmailEmail\"] }, ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"OR\", ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"Add manually below\", ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Name\", ID: \"ManualEmailName\", Format: {}, ValidationMessage: \"Name Required\", Mandatory : true, AssociatedId: { names: [\"ManualEmailEmail\"] }, ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Email\", ID: \"ManualEmailEmail\", Format: {}, ValidationMessage: \"Number Required and should be 10 characters long\", Mandatory : true, AssociatedId: { names: [\"ManualEmailName\"] }, ElementId: getUniqID() },\n            { Type: \"Button.Add.Email\", Title: \"Add contact manually\", Title2: \"Number\", ElementId: getUniqID() },\n            { Type: \"SearchableEmailListView\", Title: \"Name\", ID: \"NameEmailList\", Title2: \"Number\", Api: \"ProjectContacts\", ElementId: getUniqID() }\n          ])\n          break\n        case \"Smsregister\":\n          addToNewSection(elementName, [\n            { Type: \"SearchableListEntryDialogSMS\", Title: \"Select from Project Directory\", ID: \"ContactListSMS\", ValidationMessage: \"Permit Holder Required\", Api: \"ProjectContacts\", AssociatedId: { names: [\"ManualSMSName\", \"ManualSMSPhone\"] }, ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"OR\", ElementId: getUniqID() },\n            { Type: \"Label\", Title: \"Add manually below\", ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Name\", ID: \"ManualSMSName\", Format: {}, ValidationMessage: \"Name Required\", Mandatory : true, AssociatedId: { names: [\"ManualSMSPhone\"] }, ElementId: getUniqID() },\n            { Type: \"Text\", Title: \"Phone No\", ID: \"ManualSMSPhone\", Format: {}, ValidationMessage: \"Number Required and should be 10 characters long\", Mandatory : true, AssociatedId: { names: [\"ManualSMSName\"] }, ElementId: getUniqID() },\n            { Type: \"Button.Add.SMS\", Title: \"Add contact manually\", Title2: \"Number\", ElementId: getUniqID() },\n            { Type: \"SearchableSMSListView\", Title: \"Name\", Title2: \"Number\", ID: \"NameSMSList\", Api: \"ProjectContacts\", ElementId: getUniqID() }\n          ])\n          break\n        case \"QRScanner.List\":\n          addToNewSection(elementName, [\n            // { Type: \"QRScanner.List\", Title: \"QR scanner list\", ID: \"QReSignOnOffScanner\", ElementId: getUniqID() }\n            {Type:\"QRScanner.List\", Title:\"QR scanner list\", EntryTitle:\"Please click to scan QR code\", ID:\"QReSignOnOffScanner\", ElementId: getUniqID()}\n          ])\n          break\n        case \"SignatureSignOnOff\":\n          addToNewSection(elementName, [\n          // addToCurrentSection(elementName, [\n            { Type: \"Text\", Title: \"Name\", ID: \"SignatureSignOnOffName\", Format: {}, ElementId: getUniqID() },\n            { Type: \"Signature\", Title: \"Please sign above the line\", ID: \"SignatureSignOnOffSignature\", ElementId: getUniqID() },\n            { Type: \"Button.Add.Signature\", Title: \"Add Signature\", ElementId: getUniqID() },\n            { Type: \"Register.Signatures\", Title: \"Signatures\", ID: \"SignatureSignOnOff\", ElementId: getUniqID() }\n          ])\n          break\n\n        default:\n          addToCurrentSection(elementName)\n          break\n      }\n    }\n\n    // TableOfContent - must be first\n    // if (elementName === \"TableOfContent\") addToNewSection(elementName)\n    // else addToCurrentSection(elementName)\n\n    // All SingleUse at the end, except signatureOnOff\n    // Document Summary should be the very last\n\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Manage sections                       -----*\n  *----------------------------------------------------*/\n\n  function addToCurrentSection(pElement, pChildren) {\n    // console.log('addToCurrentSection: ', pElement)\n\n    // TODO: NEED AN INSERT AT FUNCTION -----------------------------------------------------------------------//\n\n    let newElement\n    if (pElement === \"Matrix\") newElement = getNewElement(pElement, true)\n    else if (pElement === \"Repeatable\") newElement = getNewElement(pElement, false, true)\n    else if (pElement === \"SignatureSignOnOff\") newElement = getNewElement(pElement, false, false, pChildren)\n    else if (pElement === \"QRScanner.List\") newElement = getNewElement(pElement, false, false, pChildren)\n    else newElement = getNewElement(pElement)\n\n    console.log(`--->: addToCurrentSection -> newElement`, newElement)\n    if (pElement === \"Trilean.Label\") initButtonsProperty(newElement)\n    if (pElement === \"Text\") initFormatProperty(newElement)\n\n    if (json.Sections[currentSectionIndex] !== undefined) {\n      let currentElements = json.Sections[currentSectionIndex].Elements\n      currentElements.push(newElement)\n      setJson({ Sections: [...json.Sections] })\n    }\n    else {\n      let currentSection\n      currentSection = getNewSection()\n      currentSection.Elements.push(newElement)\n      setJson({ Sections: [...json.Sections, currentSection] })\n      if (currentSectionIndex > 0) setCurrentSectionIndex(currentSectionIndex + 1)\n    }\n  }\n\n  function addNewSection() {\n    setJson({ Sections: [...json.Sections, getNewSection()] })\n    if (json.Sections.length > 0) setCurrentSectionIndex(json.Sections.length)\n  }\n\n  function addToNewSection(pElement, pChildren) {\n    let newSection = getNewSection(pElement)\n    // let newElement = getNewElement(pElement, false, false, pChildren)\n    // console.log(`--->: addToNewSection -> newElement`, newElement)\n\n    pChildren.forEach(child => newSection.Elements.push(child))\n    // newSection.Elements.push(newElement)\n\n    setJson({ Sections: [...json.Sections, newSection] })\n    if (json.Sections.length > 0) setCurrentSectionIndex(json.Sections.length)\n  }\n\n  function prependToFirstSection(pElement, pDefaultValues) {\n\n    const newElement = pDefaultValues\n    let currentSection = json.Sections[currentSectionIndex]\n\n    if (currentSection !== undefined) {\n      const firstSection = json.Sections[0].Elements\n      firstSection.unshift(newElement)\n\n      setJson({ Sections: [...json.Sections] })\n      setCurrentSectionIndex(0)\n      setSelectedControl(newElement)\n    }\n    else {\n      currentSection = getNewSection()\n      currentSection.Elements.unshift(newElement)\n      json.Sections.push(currentSection)\n      setJson({ Sections: [...json.Sections] })\n      setSelectedControl(newElement)\n    }\n  }\n\n  // TODO - REMOVE IDs ON THE DUPLICATED SECTION CONTROLS -----------------------------------------------------//\n  function duplicateSection() {\n\n    if (json.Sections[currentSectionIndex] !== undefined) {\n      // Deep copy\n      let sectionToDuplicate = JSON.parse(JSON.stringify(json.Sections[currentSectionIndex]))\n\n      sectionToDuplicate.SectionId = getUniqID(5)\n      sectionToDuplicate.Title = `${json.Sections[currentSectionIndex].Title}-copy`\n      sectionToDuplicate.Elements.forEach(item => {\n        if (item.ElementId === undefined || item.ElementId.length > 0) item.ElementId = getUniqID(11)\n        if (item.ID !== undefined) item.ID = `${item.ID}-copy`\n        if (item.Elements) {\n          item.Elements.forEach(subitem => {\n            if (subitem.ElementId === undefined || subitem.ElementId.length > 0) subitem.ElementId = getUniqID(11)\n            if (subitem.ID !== undefined) subitem.ID = `${subitem.ID}-copy`\n            if (subitem.Elements) {\n              subitem.Elements.forEach(subsubitem => {\n                if (subsubitem.ID !== undefined) subsubitem.ID = `${subsubitem.ID}-copy`\n                if (subsubitem.ElementId !== undefined) subsubitem.ElementId = getUniqID(11)\n              })\n            }\n\n          })\n        }\n      })\n\n      setJson({ Sections: [...json.Sections.slice(0, currentSectionIndex + 1), sectionToDuplicate, ...json.Sections.slice(currentSectionIndex + 1)] })\n      setCurrentSectionIndex(currentSectionIndex + 1)\n    }\n  }\n\n  function removeSection() {\n    let sections = json.Sections.filter((section, index) => {\n      if (index !== currentSectionIndex) return section\n      return false\n    })\n\n    // console.log(json.Sections)\n    // console.log(json.Sections.length)\n    setCurrentSectionIndex(json.Sections.length - 2)\n    setJson({ Sections: [...sections] })\n  }\n\n  function moveSectionLeft() {\n    if (currentSectionIndex > 0) {\n      const reorderedSections = json.Sections\n      reorderedSections.splice(currentSectionIndex, 0, reorderedSections.splice(currentSectionIndex - 1, 1)[0])\n      setCurrentSectionIndex(currentSectionIndex - 1)\n      setJson({ Sections: [...reorderedSections] })\n    }\n  }\n\n  function moveSectionRight() {\n    if (currentSectionIndex + 1 < json.Sections.length) {\n      const reorderedSections = json.Sections\n      reorderedSections.splice(currentSectionIndex, 0, reorderedSections.splice(currentSectionIndex + 1, 1)[0])\n      setCurrentSectionIndex(currentSectionIndex + 1)\n      setJson({ Sections: [...reorderedSections] })\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Utilities                             -----*\n  *----------------------------------------------------*/\n\n  function getNewSection(pTitle) {\n    console.log(`--->: getNewSection -> pTitle`, pTitle)\n    const sectionTitle = pTitle === undefined ? `Section ${json.Sections.length + 1 || 1}` : pTitle\n    return (\n      {\n        SectionId: getUniqID(5),\n        Title: sectionTitle,\n        Elements: []\n      }\n    )\n  }\n\n  function getNewElement(pElement, pIsMatrix, pIsRepeatable, pChildren) {\n    // Repeatable children length are not known\n    const matrixElementsInit = [{\n      Type: \"GridRow\",\n      ElementId: \"odkwm-mjq3n\",\n      Elements: [\n        {}\n      ]\n    }]\n\n    if (pIsMatrix) {\n      return (\n        {\n          Type: pElement,\n          ElementId: getUniqID(11),\n          Columns: \"1\",\n          Rows: \"1\",\n          Elements: matrixElementsInit\n        }\n      )\n    }\n    if (pIsRepeatable) {\n      return (\n        {\n          Type: pElement,\n          ElementId: getUniqID(11),\n          Elements: []\n        }\n      )\n    }\n    else {\n      if (pChildren) {\n        return (\n          {\n            Type: pElement,\n            ElementId: getUniqID(11),\n            Elements: pChildren\n          }\n        )\n      }\n      else {\n        return (\n          {\n            Type: pElement,\n            ElementId: getUniqID(11),\n          }\n        )\n      }\n    }\n  }\n\n  function getElementFromElementId(pElementID) {\n    const currentSection = json.Sections[currentSectionIndex]\n    let foundItem = {}\n\n    currentSection.Elements.forEach(item => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach(subitem => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach(subsubitem => {\n              if (subsubitem.ElementId === pElementID) {\n                console.log('---> Trouvé subsubitem: ', subsubitem)\n                foundItem = subsubitem\n              }\n            })\n\n          }\n\n          if (subitem.ElementId === pElementID) {\n            console.log('---> Trouvé subitem: ', subitem)\n            foundItem = subitem\n          }\n\n        })\n      }\n\n      if (item.ElementId === pElementID) {\n        console.log('---> Trouvé item: ', item)\n        foundItem = item\n      }\n\n    })\n    return foundItem\n  }\n\n  function getElementsFromId(pID) {\n    let foundItem = []\n    json.Sections.forEach(section => {\n      section.Elements.forEach(item => {\n        if (item.hasOwnProperty('Elements')) {\n\n          item.Elements.forEach(subitem => {\n            if (subitem.hasOwnProperty('Elements')) {\n\n              subitem.Elements.forEach(subsubitem => {\n                if (subsubitem.ID === pID) {\n                  console.log('---> Trouvé subsubitem: ', subsubitem)\n                  foundItem.push(subsubitem)\n                }\n              })\n\n            }\n\n            if (subitem.ID === pID) {\n              console.log('---> Trouvé subitem: ', subitem)\n              foundItem.push(subitem)\n            }\n\n          })\n        }\n\n        if (item.ID === pID) {\n          console.log('---> Trouvé item: ', item)\n          foundItem.push(item)\n        }\n\n      })\n    })\n\n    return foundItem\n  }\n\n  function getCurrentSection() {\n    return json.Sections[currentSectionIndex]\n  }\n\n  function deleteElementFromId(pElementID) {\n    let jsonToUpdate = { ...json }\n    console.log('---> deleteElementFromId: ', pElementID)\n    setSelectedControl({ ElementId: 0 })\n    // console.log('---> selectedControl:', selectedControl)\n\n    const currentSection = jsonToUpdate.Sections[currentSectionIndex]\n\n    currentSection.Elements.forEach((item, index) => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach((subitem, subindex) => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach((subsubitem, subsubindex) => {\n              if (subsubitem.ElementId === pElementID) {\n                console.log('---> subsubitem: ', subsubitem, subitem.Elements)\n                // delete subitem[subsubindex]\n                let elementsToFilter = [...subitem.Elements]\n                const elementsIndex = elementsToFilter.findIndex(subsubitem => subsubitem.ElementId === pElementID)\n                elementsToFilter[elementsIndex] = {}\n                console.log(`--->: deleteElementFromId -> sub sub elementsToFilter`, elementsToFilter, elementsIndex)\n                subitem.Elements = elementsToFilter\n              }\n            })\n\n          }\n\n          if (subitem.ElementId === pElementID) {\n            console.log('---> Delete subitem: ', subitem, pElementID)\n            // delete item[subindex]\n            let elementsToFilter = [...item.Elements]\n            // console.log('---> ',subitem.ElementId, pElementID, subitem.ElementId === pElementID)\n\n            elementsToFilter = elementsToFilter.filter(subitem => subitem.ElementId !== pElementID)\n            console.log(`--->: deleteElementFromId -> sub elementsToFilter`, elementsToFilter)\n            item.Elements = elementsToFilter\n          }\n\n        })\n      }\n\n      if (item.ElementId === pElementID) {\n        console.log('---> Delete item: ', item)\n        // delete currentSection.Elements[index]\n        const newElements = currentSection.Elements.filter(item => item.ElementId !== pElementID)\n        // console.log(`--->: deleteElementFromId -> newElements: `, newElements)\n        currentSection.Elements = newElements\n      }\n\n    })\n\n    setJson(jsonToUpdate)\n\n  }\n\n  function getParentElementFromId(pElementID) {\n    // console.log(`--->: getParentElementFromId -> element: `, pElementID)\n    const currentSection = json.Sections[currentSectionIndex]\n    let foundItem = {}\n\n    currentSection.Elements.forEach(item => {\n      if (item.hasOwnProperty('Elements')) {\n\n        item.Elements.forEach(subitem => {\n          if (subitem.hasOwnProperty('Elements')) {\n\n            subitem.Elements.forEach(subsubitem => {\n              if (subsubitem.ElementId === pElementID) {\n                console.log('---> Trouvé subsubitem: ', subsubitem)\n                foundItem = subitem\n              }\n            })\n\n          }\n\n          if (subitem.ElementId === pElementID) {\n            console.log('---> Trouvé subitem: ', subitem)\n            foundItem = item\n          }\n\n        })\n      }\n\n      if (item.ElementId === pElementID) {\n        console.log('---> Trouvé item: ', item)\n        foundItem = currentSection.Elements\n      }\n\n    })\n    return foundItem\n  }\n\n  function validateId(pID) {\n    console.log(`--->: validateId -> getElementsFromId(pID)`, getElementsFromId(pID))\n    if (getElementsFromId(pID).length > 0) setIsValidId(false)\n    else setIsValidId(true)\n  }\n\n  function initButtonsProperty(pElement) {\n    const buttons = [{\n      Button: \"Yes\",\n      Label: \"\",\n      BackgroundColor: \"\",\n      BackgroundColorSelected: \"\"\n    },{\n      Button: \"No\",\n      Label: \"\",\n      BackgroundColor: \"\",\n      BackgroundColorSelected: \"\"\n    },{\n      Button: \"NA\",\n      Label: \"\",\n      BackgroundColor: \"\",\n      BackgroundColorSelected: \"\"\n    }]\n    pElement.Buttons = buttons\n  }\n\n  function initFormatProperty(pElement) {\n    pElement.Format = {}\n    // pElement.Format = {\n    //   Lines: '',\n    //   Keyboard: '',\n    //   Decimal: '',\n    //   Min: '',\n    //   Max: '',\n    //   VarChar: ''\n    // }\n  }\n\n  /**--------------------------------------------------**\n   * @desc - Return building Panel                 -----*\n   *----------------------------------------------------*/\n  function getHTML() {\n    if (json.Sections.length > 0) {\n      let currentSectionToRender = json.Sections[currentSectionIndex]\n      // console.log(`--->: getHTML -> currentSectionToRender`, currentSectionToRender)\n      if (currentSectionToRender.Elements.length > 0) return currentSectionToRender.Elements.map(item => {\n        // let html\n        // html = getControl(item)\n        // console.log(`--->: getHTML -> html: `, html)\n        // if (item.Elements.length > 0) console.log('item.Elements:', item.Elements);\n        // return html\n        return getControl(item)\n      })\n    }\n  }\n\n  function getControl(pItem) {\n    // console.log(`--->: getControl -> pItem`, pItem)\n    let id = pItem.ElementId\n    return <Control\n      controlObj={pItem}\n      selectedControl={selectedControl}\n      onClickHandler={(control) => {\n        // Select control from control's child\n        if (control.ElementId) onSelectControlHandler(control)\n        // Select control\n        else onSelectControlHandler(pItem)\n      }}\n      moveUp={(control, pIsSubControl) => moveUpHandler(control, pIsSubControl)}\n      moveDown={(control, pIsSubControl) => moveDownHandler(control, pIsSubControl)}\n      delete={(control) => deleteHandler(control)}\n      key={id} />\n  }\n\n  function onSelectControlHandler(pControl) {\n    console.log(`--->: Control selected: `, pControl)\n    setSelectedControl(pControl)\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Build the HTML from JSON              -----*\n  *----------------------------------------------------*/\n  function onJsonChangeHandler(e) {\n    let currentValue = JSON.parse(document.getElementById('json-output').value)\n    setJson(currentValue)\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Build the Panels tabs                 -----*\n  *----------------------------------------------------*/\n  let sectionNavigation = () => {\n    if (json.Sections.length > 0) {\n      return json.Sections.map((section, index) => {\n        let sectionTitle = (json.Sections[index] !== undefined) ? json.Sections[index].Title : ''\n        return <button\n          key={index}\n          onClick={() => setCurrentSectionIndex(index)}\n          className={`tab-section ${currentSectionIndex === index ? 'tab-active' : ''}`}\n        >{sectionTitle}</button>\n      })\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Manipulate the JSON                   -----*\n  *----------------------------------------------------*/\n\n  function moveUpHandler(pControl, pIsSubControl) {\n    const parentElement = getParentElementFromId(pControl.ElementId)\n    moveElement(pControl, parentElement, 'moveUp', pIsSubControl)\n\n  }\n  function moveDownHandler(pControl, pIsSubControl) {\n    const parentElement = getParentElementFromId(pControl.ElementId)\n    moveElement(pControl, parentElement, 'moveDown', pIsSubControl)\n  }\n\n  function moveElement(pControl, pParentElement, pDirection, pIsSubControl) {\n    const container = (!pIsSubControl) ? pParentElement : pParentElement.Elements\n\n    const position = container.findIndex(item => item.ElementId === pControl.ElementId)\n    switch (pDirection) {\n      case 'moveUp':\n        if (position > 0) {\n          // console.log('---> moveUp ', pControl, ' in: ', container, ' at position: ', position)\n          container.splice(position - 1, 0, container.splice(position, 1)[0])\n        }\n        break\n      case 'moveDown':\n        if (position < container.length - 1) {\n          // console.log('---> moveDown ', pControl, ' in: ', container, ' at position: ', position)\n          container.splice(position + 1, 0, container.splice(position, 1)[0])\n        }\n        break\n      default:\n        break\n    }\n    setJson({ ...json })\n  }\n\n  function deleteHandler(pControl) {\n\n    deleteElementFromId(pControl.ElementId)\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Build the properties Panel            -----*\n  *----------------------------------------------------*/\n\n  function getPropertiesPanel(pSelectedControl) {\n    const basicPropertiesIDs = [\"DocumentSummaryGrid\",\n    \"Register.Signatures\"\n    ]\n\n    const buttonPropertiesIDs = [\"Button.Submit.Register\",\n      \"Button.View.Document\",\n      \"Button.Closeout\",\n      \"Button.Send.SMS\",\n      \"Button.Send.Email\",\n      // \"Button.Add.Email\",\n      // \"Button.Add.SMS\",\n      \"Button.Add.Signature\"\n    ]\n\n    const signaturePropertiesIDs = [\"Signature\",\n      \"Signature.Date\",\n      \"Signature.DateTime\"\n    ]\n\n    const booleanPropertiesIDs = [\"SingleBoolean\",\n      \"Boolean\"\n    ]\n\n    const imagePropertiesIDs = [\"Image\",\n      \"Image.Single\"\n    ]\n\n    const qrscannerPropertiesIDs = [\"QRScanner\",\n      \"QRScanner.List\"\n    ]\n\n    let keyWordsList = []\n\n    const globalProperties = <>\n      <div className=\"properties-form-row\">\n        <label htmlFor=\"identifier\">ID</label>\n        <input type=\"text\" name=\"identifier\" id=\"identifier\" value={selectedControl.ID || ''} onChange={(e) => setControlID(e)} />\n      </div>\n      <div className=\"properties-form-row\">\n        <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} />\n      </div>\n      <div className=\"properties-form-row\">\n        <label htmlFor=\"isvisible\">IsVisible</label>\n        <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n      </div>\n    </>\n\n    //TEMPLATE\n    // if (pSelectedControl.Type === \"Template\") {\n    //   return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n    //     {globalProperties}\n    //   </div>\n    // }\n\n    if (pSelectedControl.Type === \"Repeatable\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n      </div>\n    }\n\n    // console.log(`--->: getPropertiesPanel -> pSelectedControl`, pSelectedControl)\n    // PANEL FOR SECTION\n    if (pSelectedControl.Type === undefined) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"title\">Title</label>\n          <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} />\n        </div>\n      </div>\n    }\n\n    if (basicPropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n        {globalProperties}\n      </div>\n    }\n\n    if (booleanPropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n          <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <label htmlFor=\"collapsible\">Collapsible</label>\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"iscollapsed\">IsCollapsed</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n      </div>\n    }\n\n    if (buttonPropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n        {/* <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} /> */}\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"isvisible\">IsVisible</label>\n            <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"isbuttondisabled\">IsButtonDisabled</label>\n            <input type=\"checkbox\" name=\"isbuttondisabled\" id=\"isbuttondisabled\" checked={Boolean(selectedControl.IsButtonDisabled) || false} onChange={(e) => setControlIsButtonDisabled(e)} />\n          </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Button.Add.Email\" || pSelectedControl.Type === \"Button.Add.SMS\") {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" name=\"title\" id=\"title\" value={selectedControl.Title || ''} onChange={(e) => setControlTitle(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"title2\">Title 2</label>\n            <input type=\"text\" name=\"title2\" id=\"title2\" value={selectedControl.Title2 || ''} onChange={(e) => setControlTitle2(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"isvisible\">IsVisible</label>\n            <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"isbuttondisabled\">IsButtonDisabled</label>\n            <input type=\"checkbox\" name=\"isbuttondisabled\" id=\"isbuttondisabled\" checked={Boolean(selectedControl.IsButtonDisabled) || false} onChange={(e) => setControlIsButtonDisabled(e)} />\n          </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Matrix\") {\n      return <div id={`panel-${pSelectedControl.ElementId}`} className=\"properties-form\">\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"identifier\">ID</label>\n            <input type=\"text\" name=\"identifier\" id=\"identifier\" value={selectedControl.ID || ''} onChange={(e) => setControlID(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"columns\">Columns</label>\n            <input type=\"number\" name=\"columns\" id=\"columns\" value={selectedControl.Columns || ''} onChange={(e) => setControlColumns(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"rows\">Rows</label>\n            <input type=\"number\" name=\"rows\" id=\"rows\" value={selectedControl.Rows || ''} onChange={(e) => setControlRows(e)} />\n          </div>\n          <div className=\"properties-form-row\">\n            <label htmlFor=\"isvisible\">IsVisible</label>\n            <input type=\"checkbox\" name=\"isvisible\" id=\"isvisible\" checked={Boolean(selectedControl.IsVisible) || false} onChange={(e) => setControlIsVisible(e)} />\n          </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Document.TableOfContents\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"API\") {\n      if (selectedControl.Keywords !== undefined) {\n          keyWordsList = selectedControl.Keywords.map((keyword, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{keyword}</div>\n            <div onClick={() => deleteKeyword(keyword)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <select name=\"api\" id=\"api\" value={selectedControl.Api || 0} onChange={(e) => setControlApi(e)}>\n            <option value=\"Select an Api\">Select an Api</option>\n            <option value=\"ProjectContacts\">- Project Contacts</option>\n            <option value=\"GlobalContacts\">- Global Contacts</option>\n            <option value=\"ProjectCompany\">- Project Company</option>\n            <option value=\"ABS\">- ABS</option>\n            <option value=\"CBS\">- CBS</option>\n            <option value=\"DBS\">- DBS</option>\n            <option value=\"FBS\">- FBS</option>\n            <option value=\"TBS\">- TBS</option>\n            <option value=\"PBS\">- PBS</option>\n            <option value=\"PCBS\">- PCBS</option>\n            <option value=\"WBS\">- WBS</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includephonenumber\">Include Phone Number</label>\n            <input type=\"checkbox\" name=\"includephonenumber\" id=\"includephonenumber\" checked={Boolean(selectedControl.IncludePhoneNumber) || false} onChange={(e) => setControlIncludePhoneNumber(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includeemail\">Include Email</label>\n            <input type=\"checkbox\" name=\"includeemail\" id=\"includeemail\" checked={Boolean(selectedControl.IncludeEmail) || false} onChange={(e) => setControlIncludeEmail(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectCompany\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includetitle\">Include Title</label>\n            <input type=\"checkbox\" name=\"includetitle\" id=\"includetitle\" checked={Boolean(selectedControl.IncludeTitle) || false} onChange={(e) => setControlIncludeTitle(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectCompany\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includebusinessnumber\">Include Business Number</label>\n            <input type=\"checkbox\" name=\"includebusinessnumber\" id=\"includebusinessnumber\" checked={Boolean(selectedControl.IncludeBusinessNumber) || false} onChange={(e) => setControlIncludeBusinessNumber(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectCompany\") ? 'hidden' : ''}`}>\n            <label htmlFor=\"includeabbreviation\">Include Abbreviation</label>\n            <input type=\"checkbox\" name=\"includeabbreviation\" id=\"includeabbreviation\" checked={Boolean(selectedControl.IncludeAbbreviation) || false} onChange={(e) => setControlIncludeAbbreviation(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\" && selectedControl.Api !== \"ProjectCompany\"  && selectedControl.Api !== \"GlobalContacts\") ? '' : 'hidden'}`}>\n            <label htmlFor=\"includetitle\">Include Title</label>\n            <input type=\"checkbox\" name=\"includetitle\" id=\"includetitle\" checked={Boolean(selectedControl.IncludeTitle) || false} onChange={(e) => setControlIncludeTitle(e)} />\n          </div>\n          <div className={`properties-form-row-container ${(selectedControl.Api !== \"ProjectContacts\" && selectedControl.Api !== \"ProjectCompany\"  && selectedControl.Api !== \"GlobalContacts\") ? '' : 'hidden'}`}>\n            <label htmlFor=\"includecode\">Include Code</label>\n            <input type=\"checkbox\" name=\"includecode\" id=\"includecode\" checked={Boolean(selectedControl.IncludeCode) || false} onChange={(e) => setControlIncludeCode(e)} />\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"keywords\">Keywords</label>\n          <div className=\"properties-form-row-container\">\n            <div>\n              <input type=\"text\" name=\"keywords\" id=\"keywords\" value={currentKeyword || ''} onChange={(e) => setCurrentKeyword(e.target.value)} />\n            </div>\n            <div>\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlKeywords()}>Add</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {keyWordsList}\n        </div>\n       </div>\n    }\n\n    if (pSelectedControl.Type === \"SearchableSMSListView\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <input type=\"text\" name=\"api\" id=\"api\" value={selectedControl.Api || ''} onChange={(e) => setControlApiValue(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"SearchableEmailListView\" || pSelectedControl.Type === \"SearchableSMSListView\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n            <label htmlFor=\"title2\">Title 2</label>\n            <input type=\"text\" name=\"title2\" id=\"title2\" value={selectedControl.Title2 || ''} onChange={(e) => setControlTitle2(e)} />\n          </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <input type=\"text\" name=\"api\" id=\"api\" value={selectedControl.Api || ''} onChange={(e) => setControlApiValue(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"SearchableListEntryDialogEmail\") {\n\n      let associatedIds\n      if (selectedControl.AssociatedId !== undefined) {\n        associatedIds = selectedControl.AssociatedId.names.map((id, index) => {\n        return <div className=\"properties-form-row-container keyword-row\" key={index}>\n          <div>{id}</div>\n          <div onClick={() => deleteIdValue(id)}><FontAwesomeIcon\n            icon={faTrashAlt}\n            title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      let idsList = idList.map((id, index) => {\n        return <option value={id} key={id}>{id}</option>\n      })\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <input type=\"text\" name=\"api\" id=\"api\" value={selectedControl.Api || ''} onChange={(e) => setControlApiValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Associated Id</label>\n          <div className=\"properties-form-row-container\">\n            <select name=\"defaultvalue\" id=\"defaultvalue\" value={0} onChange={(e) => setControlAssociatedId(e)}>\n              <option value=\"\" key=\"none\">Select Dependancy</option>\n              {idsList}\n            </select>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {associatedIds}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"SearchableListEntryDialogSMS\") {\n\n      let associatedIds\n      if (selectedControl.AssociatedId !== undefined) {\n        associatedIds = selectedControl.AssociatedId.names.map((id, index) => {\n        return <div className=\"properties-form-row-container keyword-row\" key={index}>\n          <div>{id}</div>\n          <div onClick={() => deleteIdValue(id)}><FontAwesomeIcon\n            icon={faTrashAlt}\n            title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      let idsList = idList.map((id, index) => {\n        return <option value={id} key={id}>{id}</option>\n      })\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"api\">Api</label>\n          <input type=\"text\" name=\"api\" id=\"api\" value={selectedControl.Api || ''} onChange={(e) => setControlApiValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Associated Id</label>\n          <div className=\"properties-form-row-container\">\n            <select name=\"defaultvalue\" id=\"defaultvalue\" value={0} onChange={(e) => setControlAssociatedId(e)}>\n              <option value=\"\" key=\"none\">Select Dependancy</option>\n              {idsList}\n            </select>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {associatedIds}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Checkbox\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n            <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">True</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">False</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hasunderLine\">HasUnderLine</label>\n          <input type=\"checkbox\" name=\"hasunderLine\" id=\"hasunderLine\" checked={Boolean(selectedControl.HasUnderLine) || false} onChange={(e) => setControlHasUnderLine(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <label htmlFor=\"collapsible\">Collapsible</label>\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"iscollapsed\">IsCollapsed</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n          </div>\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"List.Multicontrol\") {\n      let dataList = []\n      if (selectedControl.Data !== undefined) {\n        dataList = selectedControl.Data.map((data, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{data}</div>\n            <div onClick={() => deleteData(data)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      else selectedControl.Data = []\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n          <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"data\">Data</label>\n          <div className=\"properties-form-row-container\">\n              <input type=\"text\" name=\"data\" id=\"data\" value={currentData || ''} onChange={(e) => setCurrentData(e.target.value)} />\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlData()}>Add</button>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {dataList}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"List.Single\") {\n      let dataList = []\n      if (selectedControl.Data !== undefined) {\n        dataList = selectedControl.Data.map((data, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{data}</div>\n            <div onClick={() => deleteData(data)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      else selectedControl.Data = []\n\n      const defaultValueList = selectedControl.Data.map((data, index) => <option value={data} key={index}>{data}</option>)\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n            <select name=\"defaultvalue\" id=\"defaultvalue\" value={selectedControl.Value || 0} onChange={(e) => setControlValue(e)}>\n              <option value=\"\" key=\"none\">---</option>\n              {defaultValueList}\n            </select>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"data\">Data</label>\n          <div className=\"properties-form-row-container\">\n              <input type=\"text\" name=\"data\" id=\"data\" value={currentData || ''} onChange={(e) => setCurrentData(e.target.value)} />\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlData()}>Add</button>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {dataList}\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"List.Multiple\") {\n      let dataList = []\n      if (selectedControl.Data !== undefined) {\n        dataList = selectedControl.Data.map((data, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{data}</div>\n            <div onClick={() => deleteData(data)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      else selectedControl.Data = []\n\n      const defaultValueList = selectedControl.Data.map((data, index) => <option value={data} key={index}>{data}</option>)\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n            <select name=\"defaultvalue\" id=\"defaultvalue\" value={selectedControl.Value || 0} onChange={(e) => setControlValue(e)}>\n              <option value=\"\" key=\"none\">---</option>\n              {defaultValueList}\n            </select>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"data\">Data</label>\n          <div className=\"properties-form-row-container\">\n              <input type=\"text\" name=\"data\" id=\"data\" value={currentData || ''} onChange={(e) => setCurrentData(e.target.value)} />\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlData()}>Add</button>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {dataList}\n        </div>\n      </div>\n    }\n\n    if (imagePropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"size\">Size</label>\n          <select name=\"size\" id=\"size\" value={selectedControl.Size || 0} onChange={(e) => setControlSize(e)}>\n            <option value=\"\"></option>\n            <option value=\"Thumbnail\">Thumbnail</option>\n            <option value=\"Small\">Small</option>\n            <option value=\"Medium\">Medium</option>\n            <option value=\"Large\">Large</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"galleryextrack\">GalleryExtrack</label>\n          <input type=\"checkbox\" name=\"galleryextrack\" id=\"galleryextrack\" checked={Boolean(selectedControl.GalleryExtrack) || false} onChange={(e) => setControlGalleryExtrack(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"galleryphone\">GalleryPhone</label>\n          <input type=\"checkbox\" name=\"galleryphone\" id=\"galleryphone\" checked={Boolean(selectedControl.GalleryPhone) || false} onChange={(e) => setControlGalleryPhone(e)} />\n        </div>\n      </div>\n    }\n\n    // QRScanner.List is a control itself...\n    if (qrscannerPropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Label\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"fontsize\">FontSize</label>\n          <input type=\"number\" name=\"fontsize\" id=\"fontsize\" value={selectedControl.FontSize || 0} onChange={(e) => setControlFontSize(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"margin\">Margin</label>\n          <input type=\"number\" name=\"margin\" id=\"margin\" value={selectedControl.Margin || 0} onChange={(e) => setControlMargin(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"fontattribute\">FontAttributes</label>\n          <select name=\"fontattribute\" id=\"fontattribute\" value={selectedControl.FontAttributes || 0} onChange={(e) => setControlFontAttributes(e)}>\n            <option value=\"\"></option>\n            <option value=\"Bold\">Bold</option>\n            <option value=\"Italic\">Italic</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hasunderLine\">HasUnderLine</label>\n          <input type=\"checkbox\" name=\"hasunderLine\" id=\"hasunderLine\" checked={Boolean(selectedControl.HasUnderLine) || false} onChange={(e) => setControlHasUnderLine(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Text\") {\n      if (selectedControl.Keywords !== undefined) {\n        keyWordsList = selectedControl.Keywords.map((keyword, index) => {\n          return <div className=\"properties-form-row-container keyword-row\" key={index}>\n            <div>{keyword}</div>\n            <div onClick={() => deleteKeyword(keyword)}><FontAwesomeIcon\n              icon={faTrashAlt}\n              title=\"Remove\"\n            /></div>\n          </div>\n        })\n      }\n      if (selectedControl.Format === undefined) selectedControl.Format = {}\n\n\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"value\">Value</label>\n          <input type=\"text\" name=\"value\" id=\"value\" value={selectedControl.Value || ''} disabled={Boolean(!selectedControl.IsEnabled) || false} onChange={(e) => setControlValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isenabled\">Read Only</label>\n          <input type=\"checkbox\" name=\"isenabled\" id=\"isenabled\" checked={selectedControl.IsEnabled !== undefined ? Boolean(!selectedControl.IsEnabled): false} onChange={(e) => setControlIsEnabled(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"warningmessage\">Warning Message</label>\n          <input type=\"text\" name=\"warningmessage\" id=\"warningmessage\" value={selectedControl.WarningMessage || ''} disabled={Boolean(!selectedControl.Warning) || false} onChange={(e) => setControlWarningMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"warningvalue\">Warning</label>\n          <input type=\"checkbox\" name=\"warningvalue\" id=\"warningvalue\" checked={Boolean(selectedControl.Warning) || false} onChange={(e) => setControlWarning(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n\n        <div className=\"properties-form-row\">\n          <hr/>\n          <h3>Format</h3>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"keyboard\">Keyboard</label>\n          <select name=\"keyboard\" id=\"keyboard\" value={selectedControl.Format.Keyboard || 0} onChange={(e) => setControlKeyboard(e)}>\n            <option value=\"\"></option>\n            <option value=\"Chat\">Chat</option>\n            <option value=\"Default\">Default</option>\n            <option value=\"Email\">Email</option>\n            <option value=\"Numeric\">Numeric</option>\n            <option value=\"Plain\">Plain</option>\n            <option value=\"Telephone\">Telephone</option>\n            <option value=\"Text\">Text</option>\n            <option value=\"Url\">Url</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"varchar\">Restricted Number of Character</label>\n          <input type=\"number\" name=\"varchar\" id=\"varchar\" value={selectedControl.Format.VarChar || 0} onChange={(e) => setControlVarChar(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"lines\">Lines to Display</label>\n          <input type=\"number\" name=\"lines\" id=\"lines\" value={selectedControl.Format.Lines || 0} onChange={(e) => setControlLines(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"lines\">Decimal</label>\n          <input type=\"number\" name=\"lines\" id=\"lines\" value={selectedControl.Format.Decimal || 0} onChange={(e) => setControlDecimal(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"lines\">Minimum</label>\n          <input type=\"number\" name=\"lines\" id=\"lines\" value={selectedControl.Format.Min || 0} onChange={(e) => setControlMin(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"maximum\">maximum</label>\n          <input type=\"number\" name=\"maximum\" id=\"maximum\" value={selectedControl.Format.Max || 0} onChange={(e) => setControlMax(e)} />\n        </div>\n\n\n        <div className=\"properties-form-row\">\n          <hr/>\n          <label htmlFor=\"keywords\">Keywords</label>\n          <div className=\"properties-form-row-container\">\n            <div>\n              <input type=\"text\" name=\"keywords\" id=\"keywords\" value={currentKeyword || ''} onChange={(e) => setCurrentKeyword(e.target.value)} />\n            </div>\n            <div>\n              <button className=\"btn btn-primary no-margin\" onClick={() => setControlKeywords()}>Add</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          {keyWordsList}\n        </div>\n\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Trilean\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <label htmlFor=\"collapsible\">Collapsible</label>\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"iscollapsed\">IsCollapsed</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n          <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"na\">Na</label>\n              <input type=\"radio\" name=\"value\" id=\"na\" value=\"3\" checked={selectedControl.Value === \"3\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hidena\">Hide N/A</label>\n          <input type=\"checkbox\" name=\"hidena\" id=\"hidena\" checked={Boolean(selectedControl.HideNA) || false} onChange={(e) => setControlHideNA(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Trilean.Label\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n\n        <div className=\"properties-form-row\">\n          <hr/>\n          <h3>Button Yes</h3>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"buttonyeslabel\">Label</label>\n          <input type=\"text\" name=\"buttonyeslabel\" id=\"buttonyeslabel\" value={selectedControl.Buttons[0].Label || ''} onChange={(e) => setControlButtonLabel(e, 0)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolor\">Background Color</label>\n          <input type=\"color\" name=\"bgcolor\" id=\"bgcolor\" value={selectedControl.Buttons[0].BackgroundColor || ''} onChange={(e) => setControlBackgroundColor(e, 0)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolorselected\">Background Color Selected</label>\n          <input type=\"color\" name=\"bgcolorselected\" id=\"bgcolorselected\" value={selectedControl.Buttons[0].BackgroundColorSelected || ''} onChange={(e) => setControlBackgroundColorSelected(e, 0)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <hr/>\n          <h3>Button No</h3>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"buttonyeslabel\">Label</label>\n          <input type=\"text\" name=\"buttonyeslabel\" id=\"buttonyeslabel\" value={selectedControl.Buttons[1].Label || ''} onChange={(e) => setControlButtonLabel(e, 1)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolor\">Background Color</label>\n          <input type=\"color\" name=\"bgcolor\" id=\"bgcolor\" value={selectedControl.Buttons[1].BackgroundColor || ''} onChange={(e) => setControlBackgroundColor(e, 1)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolorselected\">Background Color Selected</label>\n          <input type=\"color\" name=\"bgcolorselected\" id=\"bgcolorselected\" value={selectedControl.Buttons[1].BackgroundColorSelected || ''} onChange={(e) => setControlBackgroundColorSelected(e, 1)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <hr/>\n          <h3>Button NA</h3>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"buttonyeslabel\">Label</label>\n          <input type=\"text\" name=\"buttonyeslabel\" id=\"buttonyeslabel\" value={selectedControl.Buttons[2].Label || ''} onChange={(e) => setControlButtonLabel(e, 2)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolor\">Background Color</label>\n          <input type=\"color\" name=\"bgcolor\" id=\"bgcolor\" value={selectedControl.Buttons[2].BackgroundColor || ''} onChange={(e) => setControlBackgroundColor(e, 2)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"bgcolorselected\">Background Color Selected</label>\n          <input type=\"color\" name=\"bgcolorselected\" id=\"bgcolorselected\" value={selectedControl.Buttons[2].BackgroundColorSelected || ''} onChange={(e) => setControlBackgroundColorSelected(e, 2)} />\n        </div>\n\n        <div className=\"properties-form-row\">\n          <hr/>\n          <label htmlFor=\"details\">Details</label>\n          <input type=\"text\" name=\"details\" id=\"details\" value={selectedControl.Details || ''} onChange={(e) => setControlDetails(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <div className=\"properties-form-row-container\">\n            <label htmlFor=\"collapsible\">Collapsible</label>\n            <input type=\"checkbox\" name=\"collapsible\" id=\"collapsible\" checked={Boolean(selectedControl.Collapsible) || false} onChange={(e) => setControlCollapsible(e)} />\n            <label htmlFor=\"iscollapsed\">IsCollapsed</label>\n            <input type=\"checkbox\" name=\"iscollapsed\" id=\"iscollapsed\" checked={Boolean(selectedControl.IsCollapsed) || false} onChange={(e) => setControlIsCollapsed(e)} />\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label>Default Value</label>\n          <div className=\"properties-form-row-container\">\n          <div className=\"properties-form-row-elements\">\n              <label htmlFor=\"yes\">Yes</label>\n              <input type=\"radio\" name=\"value\" id=\"yes\" value=\"1\" checked={selectedControl.Value === \"1\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"no\">No</label>\n              <input type=\"radio\" name=\"value\" id=\"no\" value=\"2\" checked={selectedControl.Value === \"2\"} onChange={(e) => setControlValue(e)} />\n              <label htmlFor=\"na\">Na</label>\n              <input type=\"radio\" name=\"value\" id=\"na\" value=\"3\" checked={selectedControl.Value === \"3\"} onChange={(e) => setControlValue(e)} />\n            </div>\n          </div>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"hidena\">Hide N/A</label>\n          <input type=\"checkbox\" name=\"hidena\" id=\"hidena\" checked={Boolean(selectedControl.HideNA) || false} onChange={(e) => setControlHideNA(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"commentvalue\">Comment</label>\n          <input type=\"text\" name=\"commentvalue\" id=\"commentvalue\" value={selectedControl.CommentValue || ''} disabled={Boolean(!selectedControl.ShowComment) || false} onChange={(e) => setControlCommentValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"showcomment\">Show Comment</label>\n          <input type=\"checkbox\" name=\"showcomment\" id=\"showcomment\" checked={Boolean(selectedControl.ShowComment) || false} onChange={(e) => setControlShowComment(e)} />\n        </div>\n      </div>\n    }\n\n    if (signaturePropertiesIDs.includes(pSelectedControl.Type)) {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"entrytitle\">EntryTitle</label>\n          <input type=\"text\" name=\"entrytitle\" id=\"entrytitle\" value={selectedControl.EntryTitle || ''} onChange={(e) => setControlEntryTitle(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">ValidationMessage</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n      </div>\n    }\n\n    if (pSelectedControl.Type === \"Date\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Day</label>\n          <input type=\"number\" name=\"Addday\" id=\"addday\" value={selectedControl.AddDay || 0} onChange={(e) => setControlAddDay(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Month</label>\n          <input type=\"number\" name=\"addmonth\" id=\"addmonth\" value={selectedControl.AddMonth || 0} onChange={(e) => setControlAddMonth(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"datevalue\">Date Value</label>\n          <input type=\"date\" name=\"datevalue\" id=\"datevalue\" value={selectedControl.DateValue || ''} onChange={(e) => setControlDateValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isBlank\">Is Blank</label>\n          <input type=\"checkbox\" name=\"isBlank\" id=\"isBlank\" checked={Boolean(selectedControl.IsBlank) || false} onChange={(e) => setControlDateIsBlank(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"formatdatetime\">Format DateTime</label>\n          <select name=\"formatdatetime\" id=\"formatdatetime\" value={selectedControl.FormatDateTime || 0} onChange={(e) => setControlFormatDateTime(e)}>\n            <option value=\"\"></option>\n            <option value=\"yyyy-MM-dd\">yyyy-MM-dd</option>\n            <option value=\"yyyy-MM-dd, ddd\">yyyy-MM-dd, ddd</option>\n            <option value=\"yyyy-MMM-dd\">yyyy-MMM-dd</option>\n            <option value=\"yyyy-MMM-dd, ddd\">yyyy-MMM-dd, ddd</option>\n            <option value=\"dd-MM-yyyy\">dd-MM-yyyy</option>\n            <option value=\"ddd, dd-MM-yyyy\">ddd, dd-MM-yyyy</option>\n            <option value=\"dd-MMM-yyyy\">dd-MMM-yyyy</option>\n            <option value=\"ddd, dd-MMM-yyyy\">ddd, dd-MMM-yyyy</option>\n            <option value=\"yy-MM-dd\">yy-MM-dd</option>\n            <option value=\"yy-MM-dd, ddd\">yy-MM-dd, ddd</option>\n            <option value=\"yy-MMM-dd\">yy-MMM-dd</option>\n            <option value=\"yy-MMM-dd, ddd\">yy-MMM-dd, ddd</option>\n            <option value=\"dd-MM-yy\">dd-MM-yy</option>\n            <option value=\"ddd, dd-MM-yy\">ddd, dd-MM-yy</option>\n            <option value=\"dd-MMM-yy\">dd-MMM-yy</option>\n            <option value=\"ddd, dd-MMM-yy\">ddd, dd-MMM-yy</option>\n            <option value=\"MMM-dd\">MMM-dd</option>\n            <option value=\"MMM-dd, ddd\">MMM-dd, ddd</option>\n            <option value=\"dd-MMM\">dd-MMM</option>\n            <option value=\"ddd, dd-MMM\">ddd, dd-MMM</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"islabelvisible\">Is Label Visible</label>\n          <input type=\"checkbox\" name=\"islabelvisible\" id=\"islabelvisible\" checked={Boolean(selectedControl.IsLabelVisible) || false} onChange={(e) => setControlIsLabelVisible(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">Validation Message</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n      </div>\n    }\n    if (pSelectedControl.Type === \"Time\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Hour</label>\n          <input type=\"number\" name=\"addhour\" id=\"addhour\" value={selectedControl.AddHour || 0} onChange={(e) => setControlAddHour(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"timevalue\">Time Value</label>\n          <input type=\"time\" name=\"timevalue\" id=\"timevalue\" value={selectedControl.TimeValue || ''} onChange={(e) => setControlTimeValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isBlank\">Is Blank</label>\n          <input type=\"checkbox\" name=\"isBlank\" id=\"isBlank\" checked={Boolean(selectedControl.IsBlank) || false} onChange={(e) => setControlTimeIsBlank(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"formatdatetime\">Format DateTime</label>\n          <select name=\"formatdatetime\" id=\"formatdatetime\" value={selectedControl.FormatDateTime || 0} onChange={(e) => setControlFormatDateTime(e)}>\n            <option value=\"\"></option>\n            <option value=\"hh:mm tt\">hh:mm tt</option>\n            <option value=\"HH:mm\">HH:mm</option>\n            <option value=\"HH:mm:ss\">HH:mm:ss</option>\n            <option value=\"hh:mm:ss tt\">hh:mm:ss tt</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"islabelvisible\">Is Label Visible</label>\n          <input type=\"checkbox\" name=\"islabelvisible\" id=\"islabelvisible\" checked={Boolean(selectedControl.IsLabelVisible) || false} onChange={(e) => setControlIsLabelVisible(e)} />\n        </div>\n      </div>\n    }\n    if (pSelectedControl.Type === \"DateTime\") {\n      return <div id={`panel-${pSelectedControl.SectionId}`} className=\"properties-form\">\n        {globalProperties}\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Hour</label>\n          <input type=\"number\" name=\"addhour\" id=\"addhour\" value={selectedControl.AddHour || 0} onChange={(e) => setControlAddHour(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Day</label>\n          <input type=\"number\" name=\"Addday\" id=\"addday\" value={selectedControl.AddDay || 0} onChange={(e) => setControlAddDay(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"AddHour\">Add Month</label>\n          <input type=\"number\" name=\"addmonth\" id=\"addmonth\" value={selectedControl.AddMonth || 0} onChange={(e) => setControlAddMonth(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"mandatory\">Mandatory</label>\n          <input type=\"checkbox\" name=\"mandatory\" id=\"mandatory\" checked={Boolean(selectedControl.Mandatory) || false} onChange={(e) => setControlMandatory(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"datetimevalue\">DateTime Value</label>\n          <input type=\"date\" name=\"datetimevalue\" id=\"datetimevalue\" value={selectedControl.DateValue || ''} onChange={(e) => setControlDateTimeDateValue(e)} />\n          <input type=\"time\" name=\"timevalue\" id=\"timevalue\" value={selectedControl.TimeValue || ''} onChange={(e) => setControlDateTimeTimeValue(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"isBlank\">Is Blank</label>\n          <input type=\"checkbox\" name=\"isBlank\" id=\"isBlank\" checked={Boolean(selectedControl.IsBlank) || false} onChange={(e) => setControlDateTimeIsBlank(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"formatdatetime\">Format DateTime</label>\n          <select name=\"formatdatetime\" id=\"formatdatetime\" value={selectedControl.FormatDateTime || 0} onChange={(e) => setControlFormatDateTime(e)}>\n            <option value=\"\"></option>\n            <option value=\"yyyy-MM-dd hh:mm tt\">yyyy-MM-dd hh:mm tt</option>\n            <option value=\"yyyy-MM-dd HH:mm\">yyyy-MM-dd HH:mm</option>\n            <option value=\"yyyy-MMM-dd hh:mm tt\">yyyy-MMM-dd hh:mm tt</option>\n            <option value=\"yyyy-MMM-dd HH:mm\">yyyy-MMM-dd HH:mm</option>\n            <option value=\"yy-MM-dd hh:mm tt\">yy-MM-dd hh:mm tt</option>\n            <option value=\"yy-MM-dd HH:mm\">yy-MM-dd HH:mm</option>\n            <option value=\"yy-MMM-dd hh:mm tt\">yy-MMM-dd hh:mm tt</option>\n            <option value=\"yy-MMM-dd HH:mm\">yy-MMM-dd HH:mm</option>\n          </select>\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"islabelvisible\">Is Label Visible</label>\n          <input type=\"checkbox\" name=\"islabelvisible\" id=\"islabelvisible\" checked={Boolean(selectedControl.IsLabelVisible) || false} onChange={(e) => setControlIsLabelVisible(e)} />\n        </div>\n        <div className=\"properties-form-row\">\n          <label htmlFor=\"validationmessage\">ValidationMessage</label>\n          <input type=\"text\" name=\"validationmessage\" id=\"validationmessage\" value={selectedControl.ValidationMessage || ''} onChange={(e) => setControlValidationMessage(e)} />\n        </div>\n      </div>\n    }\n  }\n\n  function deleteKeyword(pKeyword) {\n    const keywordIndex = selectedControl.Keywords.findIndex(item => item === pKeyword)\n    delete selectedControl.Keywords[keywordIndex]\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function deleteIdValue(pKeyword) {\n    const keywordIndex = selectedControl.AssociatedId.names.findIndex(item => item === pKeyword)\n    delete selectedControl.AssociatedId.names[keywordIndex]\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function deleteData(pData) {\n    const dataIndex = selectedControl.Data.findIndex(item => item === pData)\n    delete selectedControl.Data[dataIndex]\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function setControlID(pEvent) {\n    const IDvalue = pEvent.target.value\n    setIdList([...idList, IDvalue])\n    validateId(IDvalue)\n\n    selectedControl.ID = IDvalue\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlTitle(pEvent) {\n    selectedControl.Title = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlTitle2(pEvent) {\n    selectedControl.Title2 = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function setControlVarChar(pEvent) {\n    selectedControl.Format.VarChar = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlLines(pEvent) {\n    selectedControl.Format.Lines = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDecimal(pEvent) {\n    selectedControl.Format.Decimal = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMin(pEvent) {\n    selectedControl.Format.Min = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMax(pEvent) {\n    selectedControl.Format.Max = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlHasUnderLine(pEvent) {\n    selectedControl.HasUnderLine = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsVisible(pEvent) {\n    selectedControl.IsVisible = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlFontSize(pEvent) {\n    selectedControl.FontSize = Number(pEvent.target.value)\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMargin(pEvent) {\n    selectedControl.Margin = Number(pEvent.target.value)\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlFontAttributes(pEvent) {\n    selectedControl.FontAttributes = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlSize(pEvent) {\n    selectedControl.Size = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlApi(pEvent) {\n    [\"IncludeAbbreviation\",\n      \"IncludePhoneNumber\",\n      \"IncludeEmail\",\n      \"IncludeTitle\",\n      \"IncludeBusinessNumber\",\n      \"IncludeTitle\",\n      \"IncludeCode\"\n    ].forEach(option => {\n      if (selectedControl[option]) delete selectedControl[option]\n    })\n\n    selectedControl.Api = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlApiValue(pEvent) {\n    selectedControl.Api = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlEntryTitle(pEvent) {\n    selectedControl.EntryTitle = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDetails(pEvent) {\n    selectedControl.Details = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlCommentValue(pEvent) {\n    selectedControl.CommentValue = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlButtonLabel(pEvent, btnIndex) {\n    selectedControl.Buttons[btnIndex].Label = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlBackgroundColor(pEvent, btnIndex) {\n    selectedControl.Buttons[btnIndex].BackgroundColor = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlBackgroundColorSelected(pEvent, btnIndex) {\n    selectedControl.Buttons[btnIndex].BackgroundColorSelected = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlValidationMessage(pEvent, btnIndex) {\n    selectedControl.ValidationMessage = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlMandatory(pEvent) {\n    selectedControl.Mandatory = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlAddHour(pEvent) {\n    selectedControl.AddHour = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlAddDay(pEvent) {\n    selectedControl.AddDay = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlAddMonth(pEvent) {\n    selectedControl.AddMonth = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlFormatDateTime(pEvent) {\n    selectedControl.FormatDateTime = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlKeyboard(pEvent) {\n    if (selectedControl.Format === undefined) initFormatProperty(selectedControl)\n    selectedControl.Format.Keyboard = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlAssociatedId(pEvent) {\n    const idList = selectedControl.AssociatedId.names\n    if (idList.findIndex(id => id === pEvent.target.value) < 0 ) idList.push(pEvent.target.value)\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsLabelVisible(pEvent) {\n    selectedControl.IsLabelVisible = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateTimeValue(pEvent) {\n    selectedControl.DateTimeValue = pEvent.target.value\n    selectedControl.IsBlank = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateTimeDateValue(pEvent) {\n    selectedControl.DateValue = pEvent.target.value\n    selectedControl.DateTimeValue = `${pEvent.target.value} ${selectedControl.TimeValue}`\n    selectedControl.IsBlank = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateTimeTimeValue(pEvent) {\n    selectedControl.TimeValue = pEvent.target.value\n    selectedControl.DateTimeValue = `${selectedControl.DateValue} ${pEvent.target.value}`\n    selectedControl.IsBlank = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateValue(pEvent) {\n    selectedControl.DateValue = pEvent.target.value\n    selectedControl.IsBlank = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlTimeValue(pEvent) {\n    selectedControl.TimeValue = pEvent.target.value\n    selectedControl.IsBlank = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateIsBlank(pEvent) {\n    selectedControl.DateValue = \"\"\n    selectedControl.IsBlank = true\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlTimeIsBlank(pEvent) {\n    selectedControl.TimeValue = \"\"\n    selectedControl.IsBlank = true\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlDateTimeIsBlank(pEvent) {\n    selectedControl.DateValue = \"\"\n    selectedControl.TimeValue = \"\"\n    selectedControl.DateTimeValue = \"\"\n    selectedControl.IsBlank = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsButtonDisabled(pEvent) {\n    selectedControl.IsButtonDisabled = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlShowComment(pEvent) {\n    selectedControl.ShowComment = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function setControlCollapsible(pEvent) {\n    selectedControl.Collapsible = pEvent.target.checked\n    if (!selectedControl.Collapsible) selectedControl.IsCollapsed = false\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsCollapsed(pEvent) {\n    selectedControl.IsCollapsed = pEvent.target.checked\n    if (selectedControl.IsCollapsed) selectedControl.Collapsible = true\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlValue(pEvent) {\n    selectedControl.Value = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludePhoneNumber(pEvent) {\n    selectedControl.IncludePhoneNumber = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlWarningMessage(pEvent) {\n    selectedControl.WarningMessage = pEvent.target.value\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlWarning(pEvent) {\n    selectedControl.Warning = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIsEnabled(pEvent) {\n    console.log('pEvent.target.checked', pEvent.target.checked)\n    console.log('!pEvent.target.checked', !pEvent.target.checked)\n    selectedControl.IsEnabled = !pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeEmail(pEvent) {\n    selectedControl.IncludeEmail = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeTitle(pEvent) {\n    selectedControl.IncludeTitle = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeBusinessNumber(pEvent) {\n    selectedControl.IncludeBusinessNumber = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeAbbreviation(pEvent) {\n    selectedControl.IncludeAbbreviation = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlIncludeCode(pEvent) {\n    selectedControl.IncludeCode = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlGalleryExtrack(pEvent) {\n    selectedControl.GalleryExtrack = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlGalleryPhone(pEvent) {\n    selectedControl.GalleryPhone = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlHideNA(pEvent) {\n    selectedControl.HideNA = pEvent.target.checked\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlKeywords(pEvent) {\n    if (selectedControl.Keywords === undefined || selectedControl.Keywords.length === 0){\n      selectedControl.Keywords = []\n    }\n    selectedControl.Keywords.push(currentKeyword)\n    setCurrentKeyword('')\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlData(pEvent) {\n    if (selectedControl.Data === undefined || selectedControl.Data.length === 0){\n      selectedControl.Data = []\n    }\n    selectedControl.Data.push(currentData)\n    setCurrentData('')\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  // MATRIX\n  function setControlColumns(pEvent) {\n    selectedControl.Columns = pEvent.target.value\n\n    setMatrixSize()\n    // let gridRowElement = {Type: \"GridRow\", ElementID: getUniqID(), Elements: []}\n    // if (selectedControl.Elements[0] === undefined) {\n    //   selectedControl.Elements.push(gridRowElement)\n    // }\n\n\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n  function setControlRows(pEvent) {\n    selectedControl.Rows = pEvent.target.value\n    setMatrixSize()\n\n\n    // for (let index = 0; index < selectedControl.Rows; index++) {\n    //   let gridRowElement = {Type: \"GridRow\", ElementID: getUniqID(), Elements: []}\n    //   // Create the Array\n    //   if (selectedControl.Elements === undefined) {\n    //     selectedControl.Elements = new Array(selectedControl.Rows)\n    //   }\n    //   // Shorten the Array\n    //   if (selectedControl.Elements[selectedControl.Rows -1]) {\n    //     selectedControl.Elements = selectedControl.Elements.slice(0, selectedControl.Rows)\n    //   }\n    //   // selectedControl.Elements = new Array(selectedControl.Rows)\n    //   if (selectedControl.Elements[index] === undefined) selectedControl.Elements[index] = gridRowElement\n\n    // }\n    let jsonToUpdate = { ...json }\n    setJson(jsonToUpdate)\n  }\n\n  function setMatrixSize(pSize) {\n    if (selectedControl.Elements === undefined) selectedControl.Elements = []\n\n    for (let row = 0; row < selectedControl.Rows; row++) {\n      const gridRowElement = { Type: \"GridRow\", ElementId: getUniqID(), Elements: [] }\n\n      let isRowEmpty = false\n      if (selectedControl.Elements[row] !== undefined) {\n        if (Object.entries(selectedControl.Elements[row]).length === 0) isRowEmpty = true\n      }\n      console.log(`--->: setMatrixSize -> isRowEmpty`, isRowEmpty)\n      if (isRowEmpty || selectedControl.Elements[row] === undefined) selectedControl.Elements[row] = gridRowElement\n\n      for (let col = 0; col < selectedControl.Columns; col++) {\n        // if (selectedControl.Elements[row][col] === undefined) selectedControl.Elements[row].Elements[col] = {}\n        // or\n        if (selectedControl.Elements[row].Elements[col] === undefined) selectedControl.Elements[row].Elements[col] = {}\n\n      }\n    }\n\n    // Remove unwanted Gridrows\n    if (selectedControl.Elements.length > selectedControl.Rows) {\n      const activeRows = selectedControl.Elements.slice(0, selectedControl.Rows)\n      selectedControl.Elements = activeRows\n    }\n    // Remove unwanted items in Gridrows\n    selectedControl.Elements.forEach(gridrow => {\n      const activeCols = gridrow.Elements.slice(0, selectedControl.Columns)\n      gridrow.Elements = activeCols\n    })\n  }\n\n  /**-------------------------------------------------**\n  * @desc - JSON utilities functions              -----*\n  *----------------------------------------------------*/\n  function copyJsonHandler() {\n    document.getElementById('json-output').select()\n    document.execCommand('copy')\n    console.log('JSON COPIED!')\n  }\n\n  function pasteJsonHandler() {\n    const jsonOutput = document.getElementById('json-output')\n\n    navigator.clipboard.readText()\n      .then(text => {\n        jsonOutput.value = text\n\n        let pasteEvent = new Event('paste')\n        onJsonChangeHandler(pasteEvent)\n      })\n      .catch(err => {\n        // User didn't grant access to read from clipboard\n        console.log('Something went wrong', err)\n      })\n  }\n\n  function loadJsonHandler(pEvent) {\n    let file = pEvent.target.files[0]\n    let reader = new FileReader()\n\n    reader.onloadend = function () {\n      try {\n        let source = reader.result\n        let newData = null\n        let newSource = source.replace(\"data:application/json;base64,\", \"\")\n\n        newData = JSON.parse(atob(newSource))\n        newData.IsEnableToImport = false\n        newData.isInValidFile = false\n        setJson({ ...newData })\n      }\n      catch (err) {\n        // error loading the json file\n        console.log('---> ', err)\n      }\n    }\n    if (file) {\n      reader.readAsDataURL(file)\n    }\n  }\n\n  function saveJsonHandler() {\n    if (isValidId) {\n      let element = document.createElement('a')\n      element.setAttribute('href', 'data:application/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(json)))\n      let jsonFileName = \"new_form\"\n      element.setAttribute('download', jsonFileName + '.json')\n      element.style.display = 'none'\n      document.body.appendChild(element)\n\n      element.click()\n      document.body.removeChild(element)\n    }\n  }\n\n  function deleteJsonHandler() {\n    setCurrentSectionIndex(0)\n    setUsedTemplateList([])\n\n    if (window.confirm('Are you sure to remove all?')) {\n      json.Sections = {}\n\n      const newSection = getNewSection()\n      setJson({ Sections: [newSection] })\n      setSelectedControl(newSection)\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - UI methods                            -----*\n  *----------------------------------------------------*/\n\n  function simpleTabsHandler(pIndex) {\n    switch (pIndex) {\n      case 0:\n        setMode('board')\n        break\n      case 1:\n        setMode('preview')\n        break\n      default:\n        break\n    }\n  }\n\n  /**-------------------------------------------------**\n  * @desc - Render the App                        -----*\n  *----------------------------------------------------*/\n\n  const boardEdit =\n    <>\n      <div className=\"section-controls\">\n        <div className=\"section-controls-group\">\n          <button onClick={() => addNewSection()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faFolderPlus} />ADD SECTION</button>\n          <button onClick={() => duplicateSection()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faClone} />DUPLICATE SECTION</button>\n          <button onClick={() => deleteJsonHandler()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faExclamationTriangle} />CLEAR BOARD</button>\n        </div>\n      </div>\n      <div className=\"section-tabs\">\n        {sectionNavigation()}\n      </div>\n      <div id=\"board-edit\" onDragOver={onDragOverHandler} onDrop={onDropHandler}>\n        <div className=\"section-inner-header\">\n          <div>\n            <input\n              type=\"text\"\n              onClick={() => onSelectControlHandler(getCurrentSection())}\n              className=\"section-title\" value={getCurrentSection().Title}\n              readOnly\n              placeholder=\"Section title\"></input>\n          </div>\n          <div className=\"section-btn-group\">\n            <button onClick={() => moveSectionLeft()} className=\"btn btn-primary btn-small\"><FontAwesomeIcon icon={faArrowLeft} />Move LEFT</button>\n            <button onClick={() => removeSection()} className=\"btn btn-tertiary btn-small\" disabled={!currentSectionIndex > 0}><FontAwesomeIcon icon={faTrash} />REMOVE SECTION</button>\n            {/* {currentSectionIndex> 0 ? <button onClick={() => removeSection()} className=\"btn btn-tertiary btn-small\"><FontAwesomeIcon icon={faTrash}/>REMOVE SECTION</button> : ''} */}\n            <button onClick={() => moveSectionRight()} className=\"btn btn-primary btn-small btn-right-icon\">Move RIGHT<FontAwesomeIcon icon={faArrowRight} /></button>\n          </div>\n        </div>\n        {\n          getHTML()\n        }\n      </div>\n\n    </>\n\n  const jsonPreview =\n    <div id=\"json-preview\">\n      <ReactJson src={json} theme=\"monokai\" displayDataTypes={false} iconStyle=\"square\" enableClipboard={false} />\n    </div>\n\n  const errorDuplicate = (!isValidId) ? <div className=\"error-message\">\n    <FontAwesomeIcon icon={faExclamationCircle} />\n    Duplicate ID detected. Control's ID value must be unique. Modify the duplicate ID to enable the Export Json option.\n  </div> : ''\n\n  let propertiesPanel =\n    (mode === 'board') ?\n      <div className=\"properties-panel-container\">\n        <h2>PROPERTIES</h2>\n        {errorDuplicate}\n        <div>{getPropertiesPanel(selectedControl)}</div>\n      </div>\n      : (mode === 'preview') ?\n        <div id=\"edit-controls\">\n          <button onClick={() => document.getElementById('fileInput').click()} className=\"btn btn-primary\"><FontAwesomeIcon icon={faUpload} />Import JSON</button>\n          <button onClick={() => saveJsonHandler()} className=\"btn btn-tertiary\"><FontAwesomeIcon icon={faFileCode} />Export JSON</button>\n          <div>\n            <input type=\"file\"\n              id=\"fileInput\"\n              className=\"custom-file-input\"\n              accept=\"application/JSON\"\n              onChange={e => loadJsonHandler(e)} />\n          </div>\n          <button onClick={() => copyJsonHandler()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faCopy} />Copy JSON</button>\n          <button onClick={() => pasteJsonHandler()} className=\"btn btn-secondary\"><FontAwesomeIcon icon={faPaste} />Paste JSON</button>\n        </div>\n        :\n        ''\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1>JSON Generator</h1>\n      </header>\n      <div id=\"page\" className=\"page\">\n\n        <nav id=\"navigation\" className=\"navigation\">\n          <div className=\"navigation-container\">\n            <div className=\"navigation-section\">\n              <div className=\"navigation-section-title\">\n                <FontAwesomeIcon icon={faCog} /><h2>Section Controls</h2>\n              </div>\n              <ul className=\"navigation-section-items\" onDragStart={controlsHandler}>\n                <li draggable id=\"Matrix\">Matrix</li>\n                <li draggable id=\"Matrixbutton\">Matrix Button</li>\n                <li draggable id=\"Repeatable\">Repeatable</li>\n              </ul>\n            </div>\n\n            <div className=\"navigation-section\">\n              <div className=\"navigation-section-title\">\n                <FontAwesomeIcon icon={faStream} /><h2>Template Controls</h2>\n              </div>\n              <ul className=\"navigation-section-items\" onDragStart={controlsHandler}>\n                <li draggable={usedTemplateList.indexOf('Document.TableOfContents') < 0} className={usedTemplateList.indexOf('Document.TableOfContents') > -1 ? 'disabled' : ''} id=\"Document.TableOfContents\">Table of content</li>\n                <li draggable={usedTemplateList.indexOf('Document.Summary') < 0} className={usedTemplateList.indexOf('Document.Summary') > -1 ? 'disabled' : ''} id=\"Document.Summary\">D.Summary</li>\n                <li draggable={usedTemplateList.indexOf('Document.Summary2') < 0} className={usedTemplateList.indexOf('Document.Summary2') > -1 ? 'disabled' : ''} id=\"Document.Summary2\">D.Summary (with Close)</li>\n                <li draggable={usedTemplateList.indexOf('Document.Summary3') < 0} className={usedTemplateList.indexOf('Document.Summary3') > -1 ? 'disabled' : ''} id=\"Document.Summary3\">D.Summary (with Registers)</li>\n                <li draggable={usedTemplateList.indexOf('Document.Summary4') < 0} className={usedTemplateList.indexOf('Document.Summary4') > -1 ? 'disabled' : ''} id=\"Document.Summary4\">D.Summary (Registers/Close)</li>\n                <li draggable={usedTemplateList.indexOf('Emailregister') < 0} className={usedTemplateList.indexOf('Emailregister') > -1 ? 'disabled' : ''} id=\"Emailregister\">Email Register</li>\n                <li draggable={usedTemplateList.indexOf('Smsregister') < 0} className={usedTemplateList.indexOf('Smsregister') > -1 ? 'disabled' : ''} id=\"Smsregister\">SMS Register</li>\n                <li draggable={usedTemplateList.indexOf('QRScanner.List') < 0} className={usedTemplateList.indexOf('QRScanner.List') > -1 ? 'disabled' : ''} id=\"QRScanner.List\">QR Scanner List</li>\n                <li draggable={usedTemplateList.indexOf('SignatureSignOnOff') < 0} className={usedTemplateList.indexOf('SignatureSignOnOff') > -1 ? 'disabled' : ''} id=\"SignatureSignOnOff\">Signature SignOnOff</li>\n              </ul>\n            </div>\n\n            <div className=\"navigation-section\">\n              <div className=\"navigation-section-title\">\n                <FontAwesomeIcon icon={faLightbulb} /><h2>Type controls</h2>\n              </div>\n              <ul className=\"navigation-section-items\" onDragStart={controlsHandler}>\n                <li draggable id=\"API\">API</li>\n                <li draggable id=\"SingleBoolean\">Boolean Single</li>\n                <li draggable id=\"Boolean\">Boolean Double</li>\n                <li draggable id=\"Button.Add.ReportDate\">Button Add Report Date</li>\n                <li draggable id=\"Checkbox\">Checkbox</li>\n                <li draggable id=\"List.Multicontrol\">Conditional Response</li>\n                <li draggable id=\"Date\">Date</li>\n                <li draggable id=\"DateTime\">DateTime</li>\n                <li draggable id=\"Image\">Image</li>\n                <li draggable id=\"Image.Single\">Image Single</li>\n                <li draggable id=\"Label\">Label</li>\n                <li draggable id=\"List.Single\">List Single</li>\n                <li draggable id=\"List.Multiple\">List Multiple</li>\n                {/* <li draggable id=\"Numeric\">Numeric</li> */}\n                <li draggable id=\"QRScanner\">QR Scanner</li>\n                <li draggable id=\"Signature\">Signature</li>\n                <li draggable id=\"Signature.Date\">Signature Date</li>\n                <li draggable id=\"Signature.DateTime\">Signature DateTime</li>\n                <li draggable id=\"Text\">Text</li>\n                <li draggable id=\"Time\">Time</li>\n                <li draggable id=\"Trilean\">Trilean</li>\n                <li draggable id=\"Trilean.Label\">Trilean Label</li>\n                <li draggable id=\"Widgetevents\">Widget Events</li>\n                <li draggable id=\"Widgetdisplay\">Widget Display</li>\n                <li draggable id=\"Widgetdocketcontractor\">Widget Docket Contractor</li>\n                <li draggable id=\"Widgetdocketequipment\">Widget Docket Equipment</li>\n                <li draggable id=\"Widgetdocketphoto\">Widget Docket Photo</li>\n                <li draggable id=\"Widgetdocketcomments\">Widget Docket Comments</li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n\n        <main>\n          <div className=\"main-container\">\n            <SimpleTabs dispatchIndex={(pMode) => simpleTabsHandler(pMode)} tabs={[\n              {\n                tab: boardEdit,\n                title: \"Board\"\n              },\n              {\n                tab: jsonPreview,\n                title: \"Json Preview\"\n              }]} />\n            <textarea id=\"json-output\" cols=\"60\" rows=\"14\" value={JSON.stringify(json)} onChange={() => onJsonChangeHandler()}></textarea>\n          </div>\n        </main>\n\n        <aside id=\"sidebar\" className=\"sidebar\">\n          <span id=\"sidebarHandle\"></span>\n          <div id=\"properties-panel\">{propertiesPanel}</div>\n        </aside>\n\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}